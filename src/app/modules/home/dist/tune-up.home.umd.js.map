{"version":3,"file":"tune-up.home.umd.js","sources":["../src/services/filter.service.js","../src/components/utlist/services/utlist.service.js","../src/components/utlist/services/agentpic.service.js","../src/home.component.js","../src/home.routing.js","../src/components/kanbanresume/services/kanbanactivities.service.js","../src/components/kanbanresume/kanbanresume.component.js","../src/components/utlist/utlist.component.js","../src/components/utfilter/services/getProductos.service.js","../src/components/utfilter/services/getProyectos.service.js","../src/components/utfilter/services/getSprintsProducto.service.js","../src/components/utfilter/services/getColaboradores.service.js","../src/components/utfilter/services/getColaboradoresProducto.service.js","../src/components/utfilter/utfilter.component.js","../src/home.module.js"],"sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class FilterService {\n  filter(uts, filtro) {\n    let filteredUts = uts.filter(\n      (ut) => {\n        let isActivity = filtro.IdActividad === 'ALL'|| ut.IdActividad === filtro.IdActividad;\n        let isAgente = filtro.IdAgente === 'ALL' || ut.IdAgente === filtro.IdAgente;\n        let isProducto = filtro.IdProducto === 'ALL' || ut.IdProducto === filtro.IdProducto;\n        let isVersion = filtro.IdVersion === 'ALL' || ut.IdVersion === filtro.IdVersion;\n        let isProyecto = filtro.IdProyecto === 'ALL' || ut.IdProyecto === filtro.IdProyecto;\n        return isActivity && isAgente && isProducto && isVersion && isProyecto;\n      }\n    );\n    return filteredUts;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n// TODO: move to home\n@Injectable()\nexport class UtListService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'SeguimientosKanban';\n  }\n  get(\n    idActividad = 'ALL',\n    idAgente = 'ALL',\n    idProducto = 'ALL',\n    idVersion = 'ALL',\n    idProyecto = 'ALL'\n  ) {\n    return this._http.get(\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class AgentPicService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Agentes/Imagen';\n  }\n  get(idAgente, idSitio) {\n    return this._http.get(`${this._url}/${idAgente}/${idSitio}`, {\n      responseType: 'blob',\n    });\n  }\n}\n","import {Component} from '@angular/core';\nimport {FilterService} from './services';\nimport {UtListService} from './components/utlist/services';\nimport {NotificationsService} from '@tune-up/core';\nimport html from './home.component.html';\nimport './home.component.css';\n\n@Component({\n  selector: 'tn-home',\n  template: html,\n  providers: [\n    UtListService,\n    FilterService,\n  ],\n})\nexport class HomeComponent {\n  allUts = [];\n  utsToShow = [];\n  globalFilter = {\n      IdAgente: 'ALL',\n      IdProducto: 'ALL',\n      IdVersion: 'ALL',\n      IdProyecto: 'ALL',\n      IdActividad: 'ALL',\n  }\n  constructor(\n    filterService: FilterService,\n    utListService: UtListService,\n    notificationService: NotificationsService\n  ) {\n    this._filterService = filterService;\n    this._utListService = utListService;\n    this._notificationsService = notificationService;\n    this._getUts();\n  }\n  _getUts() {\n    this._getUtsSubscription = this._utListService.get().subscribe(\n      (data) => {\n        this.allUts = data;\n        this.utsToShow = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las UTs',\n          error\n        )\n    );\n  }\n\n  filterUts = () => {\n    this.utsToShow = this._filterService.filter(this.allUts, this.globalFilter);\n  }\n\n  ngOnDestroy() {\n    this._getUtsSubscription &&\n      !this._getUtsSubscription.closed &&\n      this._getUtsSubscription.unsubscribe();\n  }\n}\n","import {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {HomeComponent} from './home.component';\n\n@NgModule({\n  imports: [RouterModule.forChild([{path: '', component: HomeComponent}])],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class KanbanActivitiesService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'ActividadesKanban2';\n  }\n  get(\n    idActividad = 'ALL',\n    idAgente = 'ALL',\n    idProducto = 'ALL',\n    idVersion = 'ALL',\n    idProyecto = 'ALL'\n  ) {\n    return this._http.get(\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\n    );\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService} from '@tune-up/core';\nimport {KanbanActivitiesService} from './services';\nimport html from './kanbanresume.component.html';\nimport './kanbanresume.component.css';\n\n@Component({\n  selector: 'tn-kanban-resume',\n  template: html,\n  providers: [KanbanActivitiesService],\n})\nexport class KanbanResumeComponent {\n  kanbanActivities = [];\n  selectedActivity = undefined;\n  @Input() filterUts;\n  @Input() filtro;\n  constructor(\n    activitiesService: KanbanActivitiesService,\n    notificationsService: NotificationsService\n  ) {\n    this._activitiesService = activitiesService;\n    this._notificationsService = notificationsService;\n    this._getKanbanActivities();\n  }\n  _getKanbanActivities() {\n    this._getActivitiesSubscription = this._activitiesService.get().subscribe(\n      (data) => {\n        this.kanbanActivities = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las actividades del Kanban Resumido',\n          error\n        )\n    );\n  }\n  filterKanbanActivies(idActivity = 'ALL') {\n    if (idActivity == -1) idActivity = 'ALL';\n    this.filtro.IdActividad = idActivity;\n    this.filterUts();\n  }\n  ngOnDestroy() {\n    this._getActivitiesSubscription &&\n    !this._getActivitiesSubscription.closed &&\n    this._getActivitiesSubscription.unsubscribe();\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService, AgentService} from '@tune-up/core';\nimport {AgentPicService} from './services';\nimport html from './utlist.component.html';\nimport './utlist.component.css';\n\n// TODO: extract to a config file\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\nconst workflowIcons = {\n  1: 'fa fa-arrow-up',\n  2: 'fa fa-repeat',\n  3: 'fa fa-cog',\n  4: 'fa fa-undo',\n  5: 'fa fa-refresh',\n};\nconst agentPics = {};\n\n@Component({\n  selector: 'tn-ut-list',\n  template: html,\n  providers: [AgentPicService],\n})\nexport class UtListComponent {\n  @Input() uts;\n  constructor(\n    agentPicService: AgentPicService,\n    notificationService: NotificationsService,\n    agentService: AgentService\n  ) {\n    this._agentPicService = agentPicService;\n    this._notificationsService = notificationService;\n    this._agentService = agentService;\n  }\n  getAgentPic = (ut) => {\n      const idAgente = ut.IdAgente;\n      if (idAgente) {\n        const idSitio = this._agentService.getSiteId();\n        if (!agentPics[idAgente]) {\n          this._agentPicService.get(idAgente, idSitio).subscribe((data) => {\n            agentPics[idAgente] = URL.createObjectURL(data);\n          });\n        }\n        return agentPics[idAgente] || '';\n      }\n      return '';\n  };\n  getUtTypeIcon = (ut) => {\n    return utTypesIcons[ut.IdTipoUT];\n  };\n  getStateIcon = (ut) => {\n    return workflowIcons[ut.IdTipoSeguimiento];\n  };\n  getUtLink = (ut) => {\n    return `/uts/${ut.IdUT}`;\n  };\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetProductosService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Productos2';\n  }\n  get() {\n    return this._http.get(\n      `${this._url}`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetProyectosService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Productos';\n  }\n  get(idProducto) {\n    return this._http.get(\n      `${this._url}/${idProducto}/Proyectos`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetSprintsProductoService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Sprints2';\n  }\n  get(idProducto) { \n    return this._http.get(`${this._url}/${idProducto}`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetColaboradoresService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Agentes';\n  }\n  get(idAgente) {\n    return this._http.get(`${this._url}/${idAgente}/Colaboradores`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetColaboradoresProductoService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Productos';\n  }\n  get(idProducto) {\n    return this._http.get(\n      `${this._url}/${idProducto}/Agentes`\n    );\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NotificationsService} from '@tune-up/core';\nimport {AgentService} from '@tune-up/app';\nimport {GetColaboradoresService, GetColaboradoresProductoService, GetProductosService, GetProyectosService, GetSprintsProductoService} from './services';\nimport html from './utfilter.component.html';\nimport './utfilter.component.css';\n\nconst proyectosCache = [];\nconst sprintsCache = [];\nconst agentesCache = [];\n\n@Component({\n  selector: 'tn-ut-filter',\n  template: html,\n  providers: [\n    GetColaboradoresService,\n    GetColaboradoresProductoService,\n    GetProductosService,\n    GetProyectosService,\n    GetSprintsProductoService,\n  ],\n})\nexport class UTFilterComponent {\n  @Input() filterUts;\n  @Input() filtro;\n\n  noProductoSelected = true;\n  idUT = '';\n  constructor(\n    getColaboradoresService : GetColaboradoresService,\n    getColaboradoresProductoService : GetColaboradoresProductoService,\n    getProductosService : GetProductosService,\n    getProyectosService : GetProyectosService,\n    getSprintsProductoService : GetSprintsProductoService,\n    agentService : AgentService,\n    notificationsService: NotificationsService,\n    router : Router\n  ) {\n    this._getColaboradoresService = getColaboradoresService;\n    this._getColaboradoresProductoService = getColaboradoresProductoService;\n    this._getProductosService = getProductosService;\n    this._getProyectosService = getProyectosService;\n    this._getSprintsService = getSprintsProductoService;\n    this._agentService = agentService;\n    this._notificationService = notificationsService;\n    this._router = router;\n    this.agentes = [];\n    this.productos = [];\n    this.proyectos = [];\n    this.sprints = [];\n  }\n\n  ngOnInit() {\n    this._getProductos();\n    this._getColaboradores(this._agentService.getAgentId());\n    this.proyectos = this.sprints = [{label: 'ALL', value: 'ALL'}];\n    this._seleccionarValoresPorDefecto();\n  }\n\n  _getProductos() {\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\n      (data) => {\n        this.productos = this._parseProductos(data);\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener los productos',\n          error\n        )\n    );\n  }\n\n  _getDatosProducto(idProducto) {\n    this.proyectos = this._getProyectos(idProducto);\n    this.sprints = this._getSprints(idProducto);\n    this.agentes = this._getColaboradores(this._agentService.getAgentId(), idProducto);\n    this._seleccionarValoresPorDefecto();\n  }\n  _parseProductos(productos) {\n    let productosMap = productos.map((prod) => {\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\n    });\n    productosMap.push({label: 'ALL', value: 'ALL'});\n    return productosMap;\n  }\n\n  _getProyectos(idProducto) {\n    if (!proyectosCache[idProducto]) {\n      this._getProyectoSubscription =\n      this._getProyectosService.get(idProducto).subscribe(\n        (data) => {\n          proyectosCache[idProducto] = this._parseProyectos(data);\n          this.proyectos = proyectosCache[idProducto];\n          this.filtro.IdProyecto = 'ALL';\n        },\n        (error) =>\n          this._notificationService.error(\n            'No se han podido obtener los proyectos del producto',\n          error\n        ));\n    }\n    return proyectosCache[idProducto];\n  }\n\n  _parseProyectos(proyectos) {\n    let proyectosMap = proyectos.map((pr) => {\n        return {label: `${pr.Nombre}`, value: pr.IdProyecto};\n      });\n    proyectosMap.push({label: 'ALL', value: 'ALL'});\n    proyectosMap.push({label: '<Sin Proyecto>', value: 0});\n    return proyectosMap;\n  }\n\n  _getSprints(idProducto) {\n    if (!sprintsCache[idProducto]) {\n      this._getSprintsSubscription =\n       this._getSprintsService.get(idProducto).subscribe(\n        (data) => {\n          sprintsCache[idProducto] = this._parseSprints(data);\n          this.sprints = sprintsCache[idProducto];\n          this.filtro.IdVersion = 'ALL';\n        },\n        (error) => {\n          this._notificationService.error(\n            'No se han podido obtener los Sprints del producto',\n            error\n          );\n        }\n      );\n    }\n    return sprintsCache[idProducto];\n  }\n\n  _parseSprints(sprints) {\n    let sprintsMap = sprints.map((sprint) => {\n      if (sprint.IdVersion == -1) {\n        return {label: 'Backlog', value: 0}; // TODO: Refactor backend service.\n      } else {\n        return {label: sprint.Nombre, value: sprint.IdVersion};\n      }\n    });\n    sprintsMap.push({label: 'ALL', value: 'ALL'});\n    return sprintsMap;\n  }\n\n  _getColaboradores(idAgente, idProducto = 'ALL') {\n    if (!agentesCache[idProducto]) {\n      if (idProducto == 'ALL') {\n        this._getColaboradoresSitio(idAgente);\n      } else {\n        this._getColaboradoresProducto(idProducto);\n      }\n    } else {\n      return agentesCache[idProducto];\n    }\n  }\n\n  _getColaboradoresSitio(idAgente) {\n    this._getColaboradoresSubscription =\n    this._getColaboradoresService.get(idAgente).subscribe(\n      (data) => {\n        agentesCache['ALL'] = this._parseAgentes(data);\n        this.agentes = agentesCache['ALL'];\n        this.filtro.IdAgente = 'ALL';\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener los colaboradores del agente',\n        error\n      ));\n  }\n\n  _getColaboradoresProducto(idProducto) {\n    this._getColaboradoresProductoSubscription =\n    this._getColaboradoresProductoService.get(idProducto).subscribe(\n      (data) => {\n        agentesCache[idProducto] = this._parseAgentes(data);\n        this.agentes = agentesCache[idProducto];\n        this.filtro.IdAgente = 'ALL';\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener los colaboradores del agente',\n        error\n      ));\n  }\n\n  _parseAgentes(agentes) {\n    let agentesMap = agentes\n                      .filter((ag) => ag.Id != -1)\n                      .map((ag) => {\n                        return {label: `${ag.Nombre}`, value: ag.Id};\n                      });\n    agentesMap.push({label: 'ALL', value: 'ALL'});\n    return agentesMap;\n  }\n\n  _seleccionarValoresPorDefecto() {\n    this.filtro.IdAgente = 'ALL';\n    this.filtro.IdProyecto = 'ALL';\n    this.filtro.IdVersion = 'ALL';\n  }\n\n  onProductChanged(idNuevoProducto) {\n    if (idNuevoProducto != 'ALL') {\n      this.noProductoSelected = false;\n      this._getDatosProducto(idNuevoProducto);\n    } else {\n      this.noProductoSelected = true;\n    }\n    this._seleccionarValoresPorDefecto();\n    this.filterUts();\n  }\n\n  onFilterChange() {\n    this.filterUts();\n  }\n\n  isIrAEmpty() {\n    return this.idUT === null || this.IdUT <= 0;\n  }\n\n  irAUT() {\n    this._router.navigateByUrl(`/uts/${this.IdUT}`);\n  }\n\n  ngOnDestroy() {\n    this._getColaboradoresSubscription &&\n      !this._getColaboradoresSubscription.closed &&\n      this._getColaboradoresSubscription.unsubscribe();\n\n    this._getColaboradoresProductoSubscription &&\n      !this._getColaboradoresProductoSubscription.closed &&\n      this._getColaboradoresProductoSubscription.unsubscribe();\n\n    this._getProductosSubscription &&\n      !this._getProductosSubscription.closed &&\n      this._getProductosSubscription.unsubscribe();\n\n    this._getProyectoSubscription &&\n      !this._getProyectoSubscription.closed &&\n      this._getProyectoSubscription.unsubscribe();\n\n    this._getSprintsSubscription &&\n      !this._getSprintsSubscription.closed &&\n      this._getSprintsSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {HomeRoutingModule} from './home.routing';\nimport {HomeComponent} from './home.component';\nimport {TuneUpCoreModule} from '@tune-up/core';\nimport {KanbanResumeComponent, UtListComponent, UTFilterComponent} from './components';\n\n\n@NgModule({\n  imports: [TuneUpCoreModule, HomeRoutingModule],\n  declarations: [\n    HomeComponent,\n    KanbanResumeComponent,\n    UtListComponent,\n    UTFilterComponent,\n  ],\n})\nexport class HomeModule {}\n"],"names":["FilterService","Injectable","uts","filtro","filteredUts","filter","ut","isActivity","IdActividad","isAgente","IdAgente","isProducto","IdProducto","isVersion","IdVersion","isProyecto","IdProyecto","UtListService","http","_http","_url","idActividad","idAgente","idProducto","idVersion","idProyecto","get","HttpClient","AgentPicService","idSitio","HomeComponent","Component","html","filterService","utListService","notificationService","allUts","utsToShow","globalFilter","filterUts","_filterService","_utListService","_notificationsService","_getUts","_getUtsSubscription","subscribe","data","error","closed","unsubscribe","NotificationsService","HomeRoutingModule","NgModule","RouterModule","forChild","path","component","KanbanActivitiesService","KanbanResumeComponent","Input","activitiesService","notificationsService","kanbanActivities","selectedActivity","undefined","_activitiesService","_getKanbanActivities","_getActivitiesSubscription","idActivity","utTypesIcons","workflowIcons","agentPics","UtListComponent","agentPicService","agentService","getAgentPic","_agentService","getSiteId","_agentPicService","URL","createObjectURL","getUtTypeIcon","IdTipoUT","getStateIcon","IdTipoSeguimiento","getUtLink","IdUT","AgentService","GetProductosService","GetProyectosService","GetSprintsProductoService","GetColaboradoresService","GetColaboradoresProductoService","proyectosCache","sprintsCache","agentesCache","UTFilterComponent","getColaboradoresService","getColaboradoresProductoService","getProductosService","getProyectosService","getSprintsProductoService","router","noProductoSelected","idUT","_getColaboradoresService","_getColaboradoresProductoService","_getProductosService","_getProyectosService","_getSprintsService","_notificationService","_router","agentes","productos","proyectos","sprints","_getProductos","_getColaboradores","getAgentId","label","value","_seleccionarValoresPorDefecto","_getProductosSubscription","_parseProductos","_getProyectos","_getSprints","productosMap","map","prod","Nombre","push","_getProyectoSubscription","_parseProyectos","proyectosMap","pr","_getSprintsSubscription","_parseSprints","sprintsMap","sprint","_getColaboradoresSitio","_getColaboradoresProducto","_getColaboradoresSubscription","_parseAgentes","_getColaboradoresProductoSubscription","agentesMap","ag","Id","idNuevoProducto","_getDatosProducto","navigateByUrl","Router","HomeModule","TuneUpCoreModule"],"mappings":"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"}