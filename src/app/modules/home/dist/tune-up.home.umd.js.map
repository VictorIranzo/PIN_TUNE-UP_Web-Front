{"version":3,"file":"tune-up.home.umd.js","sources":["../src/components/utlist/services/utlist.service.js","../src/components/utlist/services/agentpic.service.js","../src/home.component.js","../src/home.routing.js","../src/components/kanbanresume/services/kanbanactivities.service.js","../src/components/kanbanresume/kanbanresume.component.js","../src/components/utlist/utlist.component.js","../src/components/utfilter/services/getProductos.service.js","../src/components/utfilter/services/getProyectos.service.js","../src/components/utfilter/services/getSprintsProducto.service.js","../src/components/utfilter/services/getColaboradores.service.js","../../../services/auth.service.js","../../../services/agent.service.js","../../../services/about.service.js","../../../services/breadcrumb.service.js","../src/components/utfilter/utfilter.component.js","../src/home.module.js"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n// TODO: move to home\n@Injectable()\nexport class UtListService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'SeguimientosKanban';\n  }\n  get(\n    idActividad = 'ALL',\n    idAgente = 'ALL',\n    idProducto = 'ALL',\n    idVersion = 'ALL',\n    idProyecto = 'ALL'\n  ) {\n    return this._http.get(\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class AgentPicService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Agentes/Imagen';\n  }\n  get(idAgente, idSitio) {\n    return this._http.get(`${this._url}/${idAgente}/${idSitio}`, {\n      responseType: 'blob',\n    });\n  }\n}\n","import {Component} from '@angular/core';\nimport {UtListService} from './components/utlist/services';\nimport {NotificationsService} from '@tune-up/core';\nimport html from './home.component.html';\nimport './home.component.css';\n\n@Component({\n  selector: 'tn-home',\n  template: html,\n  providers: [UtListService],\n})\nexport class HomeComponent {\n  allUts = [];\n  utsToShow = [];\n  constructor(\n    utListService: UtListService,\n    notificationService: NotificationsService\n  ) {\n    this._utListService = utListService;\n    this._notificationsService = notificationService;\n    this._getUts();\n  }\n  _getUts() {\n    this._getUtsSubscription = this._utListService.get().subscribe(\n      (data) => {\n        this.allUts = data;\n        this.utsToShow = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las UTs',\n          error\n        )\n    );\n  }\n  filterUts = (idActivity/* , status*/) => {\n    this.utsToShow = this.allUts.filter(\n      (ut) =>\n        idActivity === 'ALL' || ut.IdActividad === idActivity\n        // &&\n        // (status === 'ALL' || ut.Estado === status ||\n        //   (ut.Estado === 'ACTIVE' && status === 'DOING'))\n    );\n  };\n  ngOnDestroy() {\n    this._getUtsSubscription &&\n      !this._getUtsSubscription.closed &&\n      this._getUtsSubscription.unsubscribe();\n  }\n}\n","import {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {HomeComponent} from './home.component';\n\n@NgModule({\n  imports: [RouterModule.forChild([{path: '', component: HomeComponent}])],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class KanbanActivitiesService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'ActividadesKanban2';\n  }\n  get(\n    idActividad = 'ALL',\n    idAgente = 'ALL',\n    idProducto = 'ALL',\n    idVersion = 'ALL',\n    idProyecto = 'ALL'\n  ) {\n    return this._http.get(\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\n    );\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService} from '@tune-up/core';\nimport {KanbanActivitiesService} from './services';\nimport html from './kanbanresume.component.html';\nimport './kanbanresume.component.css';\n\n@Component({\n  selector: 'tn-kanban-resume',\n  template: html,\n  providers: [KanbanActivitiesService],\n})\nexport class KanbanResumeComponent {\n  kanbanActivities = [];\n  selectedActivity = undefined;\n  @Input() filterUts;\n  constructor(\n    activitiesService: KanbanActivitiesService,\n    notificationsService: NotificationsService\n  ) {\n    this._activitiesService = activitiesService;\n    this._notificationsService = notificationsService;\n    this._getKanbanActivities();\n  }\n  _getKanbanActivities() {\n    this._getActivitiesSubscription = this._activitiesService.get().subscribe(\n      (data) => {\n        this.kanbanActivities = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las actividades del Kanban Resumido',\n          error\n        )\n    );\n  }\n  filterKanbanActivies(idActivity = 'ALL', status = 'ALL') {\n    if (idActivity == -1) idActivity = 'ALL';\n    this.filterUts(idActivity, status);\n  }\n  ngOnDestroy() {\n    this._getActivitiesSubscription &&\n    !this._getActivitiesSubscription.closed &&\n    this._getActivitiesSubscription.unsubscribe();\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService, AgentService} from '@tune-up/core';\nimport {AgentPicService} from './services';\nimport html from './utlist.component.html';\nimport './utlist.component.css';\n\n// TODO: extract to a config file\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\nconst workflowIcons = {\n  1: 'fa fa-arrow-up',\n  2: 'fa fa-repeat',\n  3: 'fa fa-cog',\n  4: 'fa fa-undo',\n  5: 'fa fa-refresh',\n};\nconst agentPics = {};\n\n@Component({\n  selector: 'tn-ut-list',\n  template: html,\n  providers: [AgentPicService],\n})\nexport class UtListComponent {\n  @Input() uts;\n  constructor(\n    agentPicService: AgentPicService,\n    notificationService: NotificationsService,\n    agentService: AgentService\n  ) {\n    this._agentPicService = agentPicService;\n    this._notificationsService = notificationService;\n    this._agentService = agentService;\n  }\n  getAgentPic = (ut) => {\n      const idAgente = ut.IdAgente;\n      if (idAgente) {\n        const idSitio = this._agentService.getSiteId();\n        if (!agentPics[idAgente]) {\n          this._agentPicService.get(idAgente, idSitio).subscribe((data) => {\n            agentPics[idAgente] = URL.createObjectURL(data);\n          });\n        }\n        return agentPics[idAgente] || '';\n      }\n      return '';\n  };\n  getUtTypeIcon = (ut) => {\n    return utTypesIcons[ut.IdTipoUT];\n  };\n  getStateIcon = (ut) => {\n    return workflowIcons[ut.IdTipoSeguimiento];\n  };\n  getUtLink = (ut) => {\n    return `/uts/${ut.IdUT}`;\n  };\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetProductosService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Productos2';\n  }\n  get() {\n    return this._http.get(\n      `${this._url}`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetProyectosService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Productos';\n  }\n  get(idProducto) {\n    return this._http.get(\n      `${this._url}/${idProducto}/Proyectos`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetSprintsProductoService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Sprints2';\n  }\n  get(idProducto) { \n    return this._http.get(`${this._url}/${idProducto}`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetColaboradoresService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Agentes';\n  }\n  get(idAgente) {\n    return this._http.get(`${this._url}/${idAgente}/Colaboradores`);\n  }\n}\n","import {Injectable} from '@angular/core';\n\nconst TOKEN_KEY = 'tnToken';\n\n@Injectable()\nexport class AuthService {\n  getToken() {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n  setToken(token) {\n    sessionStorage.setItem(TOKEN_KEY, token);\n  }\n  clear() {\n    sessionStorage.getItem(TOKEN_KEY) && sessionStorage.removeItem(TOKEN_KEY);\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AgentService {\n  constructor() {\n    this._agent = this.getFromStorage();\n  }\n  get agent() {\n    return this._agent;\n  }\n  set agent(value) {\n    this._agent = value;\n    this.saveToStorage(value);\n  }\n  getFromStorage() {\n    const agent = sessionStorage.getItem('tnAgent')\n      ? JSON.parse(sessionStorage.getItem('tnAgent'))\n      : undefined;\n    return agent;\n  }\n  clear() {\n    sessionStorage.getItem('tnAgent') && sessionStorage.removeItem('tnAgent');\n  }\n  saveToStorage(agent) {\n    sessionStorage.setItem('tnAgent', JSON.stringify(agent));\n  }\n  getSiteId() {\n    return this._agent.IdSitio;\n  }\n  isAdmin() {\n    return this._agent.Administrador;\n  }\n  getAgentId() {\n    return this._agent.IdAgente;\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AboutService {\n  constructor() {\n    this._about = null;\n  }\n  get about() {\n    return this._about;\n  }\n  set about(value) {\n    this._about = value;\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class BreadcrumbService {\n  _items = [];\n  get items() {\n    return this._items;\n  }\n  set items(value) {\n    this._items = value;\n  }\n  addItems(menuItems) {\n    menuItems = Array.isArray(menuItems)\n      ? menuItems\n      : [menuItems];\n    this._items = this.items.concat(menuItems);\n  }\n  removeItems(count) {\n    this._items = this._items.slice(0, this._items.length - count);\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NotificationsService} from '@tune-up/core';\nimport {GetColaboradoresService, GetProductosService, GetProyectosService, GetSprintsProductoService} from './services';\nimport {AgentService} from '../../../../../services';\nimport html from './utfilter.component.html';\nimport './utfilter.component.css';\n\nconst proyectosCache = [];\nconst sprintsCache = [];\nconst agentesCache = [];\n\n@Component({\n  selector: 'tn-ut-filter',\n  template: html,\n  providers: [\n    GetColaboradoresService,\n    GetProductosService,\n    GetProyectosService,\n    GetSprintsProductoService,\n  ],\n})\nexport class UTFilterComponent {\n  @Input() filterUts;\n\n  filtro = {\n      IdUT: '',\n      IdAgente: 'ALL',\n      IdProducto: 'ALL',\n      IdVersion: 'ALL',\n      IdProyecto: 'ALL',\n  }\n\n  noProductoSelected = true;\n\n  constructor(\n    getColaboradoresService : GetColaboradoresService,\n    getProductosService : GetProductosService,\n    getProyectosService : GetProyectosService,\n    getSprintsProductoService : GetSprintsProductoService,\n    agentService : AgentService,\n    notificationsService: NotificationsService,\n    router : Router\n  ) {\n    this._getColaboradoresService = getColaboradoresService;\n    this._getProductosService = getProductosService;\n    this._getProyectosService = getProyectosService;\n    this._getSprintsService = getSprintsProductoService;\n    this._agentService = agentService;\n    this._notificationService = notificationsService;\n    this._router = router;\n    this.agentes = [];\n    this.productos = [];\n    this.proyectos = [];\n    this.sprints = [];\n  }\n\n  ngOnInit() {\n    this._getProductos();\n    this._getColaboradoresSitio(this._agentService.getAgentId());\n  }\n\n  _getProductos() {\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\n      (data) => {\n        this.productos = this._parseProductos(data);\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener los productos',\n          error\n        )\n    );\n  }\n\n  _getColaboradoresSitio(idAgente) {\n    if (!agentesCache['ALL']) {\n    this._getColaboradoresSubscription =\n      this._getColaboradoresService.get(idAgente).subscribe(\n        (data) => {\n          agentesCache['ALL'] = this._parseAgentes(data);\n          this.agentes = agentesCache['ALL'];\n          this.filtro.IdAgente = 'ALL';\n        },\n        (error) =>\n          this._notificationService.error(\n            'No se han podido obtener los colaboradores del agente',\n          error\n        ));\n    } else {\n      return agentesCache['ALL'];\n    }\n  }\n\n  _parseAgentes(agentes) {\n    let agentesMap = agentes.map((ag) => {\n        return {label: `${ag.Nombre}`, value: ag.IdAgente};\n      }\n    );\n    agentesMap.push({label: 'ALL', value: 'ALL'});\n    return agentesMap;\n  }\n\n  _getDatosProducto(idProducto) {\n    this.proyectos = this._getProyectos(idProducto);\n    this.sprints = this._getSprints(idProducto);\n    this._seleccionarValoresPorDefecto();\n  }\n  _parseProductos(productos) {\n    let productosMap = productos.map((prod) => {\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\n    });\n    productosMap.push({label: 'ALL', value: 'ALL'});\n    return productosMap;\n  }\n\n  _getProyectos(idProducto) {\n    if (!proyectosCache[idProducto]) {\n      this._getProyectoSubscription =\n      this._getProyectosService.get(idProducto).subscribe(\n        (data) => {\n          proyectosCache[idProducto] = this._parseProyectos(data);\n          this.proyectos = proyectosCache[idProducto];\n          this.filtro.IdProyecto = 'ALL';\n        },\n        (error) =>\n          this._notificationService.error(\n            'No se han podido obtener los proyectos del producto',\n          error\n        ));\n    }\n    return proyectosCache[idProducto];\n  }\n\n  _parseProyectos(proyectos) {\n    let proyectosMap = proyectos.map((pr) => {\n        return {label: `${pr.Nombre}`, value: pr.IdProyecto};\n      });\n    proyectosMap.push({label: 'ALL', value: 'ALL'});\n    proyectosMap.push({label: '<Sin Proyecto>', value: 0});\n    return proyectosMap;\n  }\n\n  _getSprints(idProducto) {\n    if (!sprintsCache[idProducto]) {\n      this._getSprintsSubscription =\n       this._getSprintsService.get(idProducto).subscribe(\n        (data) => {\n          sprintsCache[idProducto] = this._parseSprints(data);\n          this.sprints = sprintsCache[idProducto];\n          this.filtro.IdVersion = 'ALL';\n        },\n        (error) => {\n          this._notificationService.error(\n            'No se han podido obtener los Sprints del producto',\n            error\n          );\n        }\n      );\n    }\n    return sprintsCache[idProducto];\n  }\n\n  _parseSprints(sprints) {\n    let sprintsMap = sprints.map((sprint) => {\n      if (sprint.IdVersion == -1) {\n        return {label: 'Backlog', value: 0}; // TODO: Refactor backend service.\n      } else {\n        return {label: sprint.Nombre, value: sprint.IdVersion};\n      }\n    });\n    sprintsMap.push({label: 'ALL', value: 'ALL'});\n    return sprintsMap;\n  }\n\n  _seleccionarValoresPorDefecto() {\n    this.filtro.IdAgente = 'ALL';\n    this.filtro.idProducto = 'ALL';\n    this.filtro.IdProyecto = 'ALL';\n    this.filtro.IdVersion = 'ALL';\n    this.filtro.idUT = '';\n  }\n\n  onProductChanged(idNuevoProducto) {\n    if (idNuevoProducto != 'ALL') {\n      this.noProductoSelected = false;\n      this._getDatosProducto(idNuevoProducto);\n    } else {\n      this.noProductoSelected = true;\n      this._seleccionarValoresPorDefecto();\n    }\n  }\n\n  isIrAEmpty() {\n    return this.filtro.idUT === null || this.filtro.IdUT <= 0;\n  }\n\n  irAUT() {\n    this._router.navigateByUrl(`/uts/${this.filtro.IdUT}`);\n  }\n\n  ngOnDestroy() {\n    this._getColaboradoresSubscription &&\n      !this._getColaboradoresSubscription.closed &&\n      this._getColaboradoresSubscription.unsubscribe();\n\n    this._getProductosSubscription &&\n      !this._getProductosSubscription.closed &&\n      this._getProductosSubscription.unsubscribe();\n\n    this._getProyectoSubscription &&\n      !this._getProyectoSubscription.closed &&\n      this._getProyectoSubscription.unsubscribe();\n\n    this._getSprintsSubscription &&\n      !this._getSprintsSubscription.closed &&\n      this._getSprintsSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {HomeRoutingModule} from './home.routing';\nimport {HomeComponent} from './home.component';\nimport {TuneUpCoreModule} from '@tune-up/core';\nimport {KanbanResumeComponent, UtListComponent, UTFilterComponent} from './components';\n\n\n@NgModule({\n  imports: [TuneUpCoreModule, HomeRoutingModule],\n  declarations: [\n    HomeComponent,\n    KanbanResumeComponent,\n    UtListComponent,\n    UTFilterComponent,\n  ],\n})\nexport class HomeModule {}\n"],"names":["UtListService","Injectable","http","_http","_url","idActividad","idAgente","idProducto","idVersion","idProyecto","this","get","HttpClient","AgentPicService","idSitio","HomeComponent","Component","utListService","notificationService","allUts","utsToShow","filterUts","idActivity","_this","filter","ut","IdActividad","_utListService","_notificationsService","_getUts","_getUtsSubscription","subscribe","data","error","_this2","closed","unsubscribe","NotificationsService","HomeRoutingModule","NgModule","RouterModule","forChild","path","component","KanbanActivitiesService","KanbanResumeComponent","Input","activitiesService","notificationsService","kanbanActivities","selectedActivity","undefined","_activitiesService","_getKanbanActivities","_getActivitiesSubscription","status","utTypesIcons","workflowIcons","agentPics","UtListComponent","agentPicService","agentService","getAgentPic","IdAgente","_agentService","getSiteId","_agentPicService","URL","createObjectURL","getUtTypeIcon","IdTipoUT","getStateIcon","IdTipoSeguimiento","getUtLink","IdUT","uts","AgentService","GetProductosService","GetProyectosService","GetSprintsProductoService","GetColaboradoresService","sessionStorage","getItem","token","setItem","removeItem","_agent","getFromStorage","JSON","parse","agent","stringify","IdSitio","Administrador","value","saveToStorage","_about","_items","menuItems","Array","isArray","items","concat","count","slice","length","proyectosCache","sprintsCache","agentesCache","UTFilterComponent","getColaboradoresService","getProductosService","getProyectosService","getSprintsProductoService","router","filtro","noProductoSelected","_getColaboradoresService","_getProductosService","_getProyectosService","_getSprintsService","_notificationService","_router","agentes","productos","proyectos","sprints","_getProductos","_getColaboradoresSitio","getAgentId","_getProductosSubscription","_parseProductos","_getColaboradoresSubscription","_parseAgentes","agentesMap","map","ag","label","Nombre","push","_getProyectos","_getSprints","_seleccionarValoresPorDefecto","productosMap","prod","IdProducto","_getProyectoSubscription","_this3","_parseProyectos","IdProyecto","proyectosMap","pr","_getSprintsSubscription","_this4","_parseSprints","IdVersion","sprintsMap","sprint","idUT","idNuevoProducto","_getDatosProducto","navigateByUrl","Router","HomeModule","TuneUpCoreModule"],"mappings":"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"}