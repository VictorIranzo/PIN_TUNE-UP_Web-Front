{"version":3,"file":"tune-up.home.umd.js","sources":["../src/components/utlist/services/utlist.service.js","../src/components/utlist/services/agentpic.service.js","../src/home.component.js","../src/home.routing.js","../src/components/kanbanresume/services/kanbanactivities.service.js","../src/components/kanbanresume/kanbanresume.component.js","../src/components/utlist/utlist.component.js","../src/home.module.js"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n// TODO: move to home\n@Injectable()\nexport class UtListService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'SeguimientosKanban';\n  }\n  get(\n    idActividad = 'ALL',\n    idAgente = 'ALL',\n    idProducto = 'ALL',\n    idVersion = 'ALL',\n    idProyecto = 'ALL'\n  ) {\n    return this._http.get(\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class AgentPicService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Agentes/Imagen';\n  }\n  get(idAgente, idSitio) {\n    return this._http.get(`${this._url}/${idAgente}/${idSitio}`, {\n      responseType: 'blob',\n    });\n  }\n}\n","import {Component} from '@angular/core';\nimport {UtListService} from './components/utlist/services';\nimport {NotificationsService} from '@tune-up/core';\nimport html from './home.component.html';\nimport './home.component.css';\n\n@Component({\n  selector: 'tn-home',\n  template: html,\n  providers: [UtListService],\n})\nexport class HomeComponent {\n  allUts = [];\n  utsToShow = [];\n  constructor(\n    utListService: UtListService,\n    notificationService: NotificationsService\n  ) {\n    this._utListService = utListService;\n    this._notificationsService = notificationService;\n    this._getUts();\n  }\n  _getUts() {\n    this._getUtsSubscription = this._utListService.get().subscribe(\n      (data) => {\n        this.allUts = data;\n        this.utsToShow = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las UTs',\n          error\n        )\n    );\n  }\n  filterUts = (idActivity/* , status*/) => {\n    this.utsToShow = this.allUts.filter(\n      (ut) =>\n        idActivity === 'ALL' || ut.IdActividad === idActivity\n        // &&\n        // (status === 'ALL' || ut.Estado === status ||\n        //   (ut.Estado === 'ACTIVE' && status === 'DOING'))\n    );\n  };\n  ngOnDestroy() {\n    this._getUtsSubscription &&\n      !this._getUtsSubscription.closed &&\n      this._getUtsSubscription.unsubscribe();\n  }\n}\n","import {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {HomeComponent} from './home.component';\n\n@NgModule({\n  imports: [RouterModule.forChild([{path: '', component: HomeComponent}])],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class KanbanActivitiesService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'ActividadesKanban2';\n  }\n  get(\n    idActividad = 'ALL',\n    idAgente = 'ALL',\n    idProducto = 'ALL',\n    idVersion = 'ALL',\n    idProyecto = 'ALL'\n  ) {\n    return this._http.get(\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\n    );\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService} from '@tune-up/core';\nimport {KanbanActivitiesService} from './services';\nimport html from './kanbanresume.component.html';\nimport './kanbanresume.component.css';\n\n@Component({\n  selector: 'tn-kanban-resume',\n  template: html,\n  providers: [KanbanActivitiesService],\n})\nexport class KanbanResumeComponent {\n  kanbanActivities = [];\n  selectedActivity = undefined;\n  @Input() filterUts;\n  constructor(\n    activitiesService: KanbanActivitiesService,\n    notificationsService: NotificationsService\n  ) {\n    this._activitiesService = activitiesService;\n    this._notificationsService = notificationsService;\n    this._getKanbanActivities();\n  }\n  _getKanbanActivities() {\n    this._getActivitiesSubscription = this._activitiesService.get().subscribe(\n      (data) => {\n        this.kanbanActivities = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las actividades del Kanban Resumido',\n          error\n        )\n    );\n  }\n  filterKanbanActivies(idActivity = 'ALL', status = 'ALL') {\n    if (idActivity == -1) idActivity = 'ALL';\n    this.filterUts(idActivity, status);\n  }\n  ngOnDestroy() {\n    this._getActivitiesSubscription &&\n    !this._getActivitiesSubscription.closed &&\n    this._getActivitiesSubscription.unsubscribe();\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService, AgentService} from '@tune-up/core';\nimport {AgentPicService} from './services';\nimport html from './utlist.component.html';\nimport './utlist.component.css';\n\n// TODO: extract to a config file\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\nconst workflowIcons = {\n  1: 'fa fa-arrow-up',\n  2: 'fa fa-repeat',\n  3: 'fa fa-cog',\n  4: 'fa fa-undo',\n  5: 'fa fa-refresh',\n};\nconst agentPics = {};\n\n@Component({\n  selector: 'tn-ut-list',\n  template: html,\n  providers: [AgentPicService],\n})\nexport class UtListComponent {\n  @Input() uts;\n  constructor(\n    agentPicService: AgentPicService,\n    notificationService: NotificationsService,\n    agentService: AgentService\n  ) {\n    this._agentPicService = agentPicService;\n    this._notificationsService = notificationService;\n    this._agentService = agentService;\n  }\n  getAgentPic = (ut) => {\n      const idAgente = ut.IdAgente;\n      if (idAgente) {\n        const idSitio = this._agentService.getSiteId();\n        if (!agentPics[idAgente]) {\n          this._agentPicService.get(idAgente, idSitio).subscribe((data) => {\n            agentPics[idAgente] = URL.createObjectURL(data);\n          });\n        }\n        return agentPics[idAgente] || '';\n      }\n      return '';\n  };\n  getUtTypeIcon = (ut) => {\n    return utTypesIcons[ut.IdTipoUT];\n  };\n  getStateIcon = (ut) => {\n    return workflowIcons[ut.IdTipoSeguimiento];\n  };\n  getUtLink = (ut) => {\n    return `/uts/${ut.IdUT}`;\n  };\n}\n","import {NgModule} from '@angular/core';\nimport {HomeRoutingModule} from './home.routing';\nimport {HomeComponent} from './home.component';\nimport {TuneUpCoreModule} from '@tune-up/core';\nimport {KanbanResumeComponent, UtListComponent} from './components';\n\n@NgModule({\n  imports: [TuneUpCoreModule, HomeRoutingModule],\n  declarations: [\n    HomeComponent,\n    KanbanResumeComponent,\n    UtListComponent,\n  ],\n})\nexport class HomeModule {}\n"],"names":["UtListService","Injectable","http","_http","_url","idActividad","idAgente","idProducto","idVersion","idProyecto","get","HttpClient","AgentPicService","idSitio","HomeComponent","Component","html","utListService","notificationService","allUts","utsToShow","filterUts","idActivity","filter","ut","IdActividad","_utListService","_notificationsService","_getUts","_getUtsSubscription","subscribe","data","error","closed","unsubscribe","NotificationsService","HomeRoutingModule","NgModule","RouterModule","forChild","path","component","KanbanActivitiesService","KanbanResumeComponent","Input","activitiesService","notificationsService","kanbanActivities","selectedActivity","undefined","_activitiesService","_getKanbanActivities","_getActivitiesSubscription","status","utTypesIcons","workflowIcons","agentPics","UtListComponent","agentPicService","agentService","getAgentPic","IdAgente","_agentService","getSiteId","_agentPicService","URL","createObjectURL","getUtTypeIcon","IdTipoUT","getStateIcon","IdTipoSeguimiento","getUtLink","IdUT","uts","AgentService","HomeModule","TuneUpCoreModule"],"mappings":"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"}