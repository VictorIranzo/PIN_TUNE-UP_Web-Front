{"version":3,"file":"tune-up.home.umd.js","sources":["../src/components/utlist/services/utlist.service.js","../src/components/utlist/services/agentpic.service.js","../src/home.component.js","../src/home.routing.js","../src/components/kanbanresume/services/kanbanactivities.service.js","../src/components/kanbanresume/kanbanresume.component.js","../src/components/utlist/utlist.component.js","../src/components/utfilter/services/getProductos.service.js","../src/components/utfilter/services/getProyectos.service.js","../src/components/utfilter/services/getSprintsProducto.service.js","../src/components/utfilter/services/getColaboradores.service.js","../src/components/utfilter/utfilter.component.js","../src/home.module.js"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n// TODO: move to home\n@Injectable()\nexport class UtListService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'SeguimientosKanban';\n  }\n  get(\n    idActividad = 'ALL',\n    idAgente = 'ALL',\n    idProducto = 'ALL',\n    idVersion = 'ALL',\n    idProyecto = 'ALL'\n  ) {\n    return this._http.get(\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class AgentPicService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Agentes/Imagen';\n  }\n  get(idAgente, idSitio) {\n    return this._http.get(`${this._url}/${idAgente}/${idSitio}`, {\n      responseType: 'blob',\n    });\n  }\n}\n","import {Component} from '@angular/core';\nimport {UtListService} from './components/utlist/services';\nimport {NotificationsService} from '@tune-up/core';\nimport html from './home.component.html';\nimport './home.component.css';\n\n@Component({\n  selector: 'tn-home',\n  template: html,\n  providers: [UtListService],\n})\nexport class HomeComponent {\n  allUts = [];\n  utsToShow = [];\n  constructor(\n    utListService: UtListService,\n    notificationService: NotificationsService\n  ) {\n    this._utListService = utListService;\n    this._notificationsService = notificationService;\n    this._getUts();\n  }\n  _getUts() {\n    this._getUtsSubscription = this._utListService.get().subscribe(\n      (data) => {\n        this.allUts = data;\n        this.utsToShow = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las UTs',\n          error\n        )\n    );\n  }\n  filterUts = (idActivity/* , status*/) => {\n    this.utsToShow = this.allUts.filter(\n      (ut) =>\n        idActivity === 'ALL' || ut.IdActividad === idActivity\n        // &&\n        // (status === 'ALL' || ut.Estado === status ||\n        //   (ut.Estado === 'ACTIVE' && status === 'DOING'))\n    );\n  };\n  filterUtsKanbanList = (IdAgente, IdProducto, IdVersion, IdProyecto) => {\n    this.utsToShow = this.allUts.filter(\n      (ut) => {\n        let isAgente = IdAgente === 'ALL' || ut.IdAgente == IdAgente;\n        let isProducto = IdProducto === 'ALL' || ut.IdProducto === IdProducto;\n        let isVersion = IdVersion === 'ALL' || ut.IdVersion === IdVersion;\n        let isProyecto = IdProyecto === 'ALL' || ut.IdProyecto === IdProyecto;\n\n        return isAgente && isProducto && isVersion && isProyecto;\n      }\n    );\n  }\n\n\n  ngOnDestroy() {\n    this._getUtsSubscription &&\n      !this._getUtsSubscription.closed &&\n      this._getUtsSubscription.unsubscribe();\n  }\n}\n","import {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {HomeComponent} from './home.component';\n\n@NgModule({\n  imports: [RouterModule.forChild([{path: '', component: HomeComponent}])],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class KanbanActivitiesService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'ActividadesKanban2';\n  }\n  get(\n    idActividad = 'ALL',\n    idAgente = 'ALL',\n    idProducto = 'ALL',\n    idVersion = 'ALL',\n    idProyecto = 'ALL'\n  ) {\n    return this._http.get(\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\n    );\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService} from '@tune-up/core';\nimport {KanbanActivitiesService} from './services';\nimport html from './kanbanresume.component.html';\nimport './kanbanresume.component.css';\n\n@Component({\n  selector: 'tn-kanban-resume',\n  template: html,\n  providers: [KanbanActivitiesService],\n})\nexport class KanbanResumeComponent {\n  kanbanActivities = [];\n  selectedActivity = undefined;\n  @Input() filterUts;\n  constructor(\n    activitiesService: KanbanActivitiesService,\n    notificationsService: NotificationsService\n  ) {\n    this._activitiesService = activitiesService;\n    this._notificationsService = notificationsService;\n    this._getKanbanActivities();\n  }\n  _getKanbanActivities() {\n    this._getActivitiesSubscription = this._activitiesService.get().subscribe(\n      (data) => {\n        this.kanbanActivities = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las actividades del Kanban Resumido',\n          error\n        )\n    );\n  }\n  filterKanbanActivies(idActivity = 'ALL', status = 'ALL') {\n    if (idActivity == -1) idActivity = 'ALL';\n    this.filterUts(idActivity, status);\n  }\n  ngOnDestroy() {\n    this._getActivitiesSubscription &&\n    !this._getActivitiesSubscription.closed &&\n    this._getActivitiesSubscription.unsubscribe();\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService, AgentService} from '@tune-up/core';\nimport {AgentPicService} from './services';\nimport html from './utlist.component.html';\nimport './utlist.component.css';\n\n// TODO: extract to a config file\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\nconst workflowIcons = {\n  1: 'fa fa-arrow-up',\n  2: 'fa fa-repeat',\n  3: 'fa fa-cog',\n  4: 'fa fa-undo',\n  5: 'fa fa-refresh',\n};\nconst agentPics = {};\n\n@Component({\n  selector: 'tn-ut-list',\n  template: html,\n  providers: [AgentPicService],\n})\nexport class UtListComponent {\n  @Input() uts;\n  constructor(\n    agentPicService: AgentPicService,\n    notificationService: NotificationsService,\n    agentService: AgentService\n  ) {\n    this._agentPicService = agentPicService;\n    this._notificationsService = notificationService;\n    this._agentService = agentService;\n  }\n  getAgentPic = (ut) => {\n      const idAgente = ut.IdAgente;\n      if (idAgente) {\n        const idSitio = this._agentService.getSiteId();\n        if (!agentPics[idAgente]) {\n          this._agentPicService.get(idAgente, idSitio).subscribe((data) => {\n            agentPics[idAgente] = URL.createObjectURL(data);\n          });\n        }\n        return agentPics[idAgente] || '';\n      }\n      return '';\n  };\n  getUtTypeIcon = (ut) => {\n    return utTypesIcons[ut.IdTipoUT];\n  };\n  getStateIcon = (ut) => {\n    return workflowIcons[ut.IdTipoSeguimiento];\n  };\n  getUtLink = (ut) => {\n    return `/uts/${ut.IdUT}`;\n  };\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetProductosService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Productos2';\n  }\n  get() {\n    return this._http.get(\n      `${this._url}`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetProyectosService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Productos';\n  }\n  get(idProducto) {\n    return this._http.get(\n      `${this._url}/${idProducto}/Proyectos`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetSprintsProductoService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Sprints2';\n  }\n  get(idProducto) { \n    return this._http.get(`${this._url}/${idProducto}`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetColaboradoresService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Agentes';\n  }\n  get(idAgente) {\n    return this._http.get(`${this._url}/${idAgente}/Colaboradores`);\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NotificationsService} from '@tune-up/core';\nimport {AgentService} from '@tune-up/app';\nimport {GetColaboradoresService, GetProductosService, GetProyectosService, GetSprintsProductoService} from './services';\nimport html from './utfilter.component.html';\nimport './utfilter.component.css';\n\nconst proyectosCache = [];\nconst sprintsCache = [];\nconst agentesCache = [];\n\n@Component({\n  selector: 'tn-ut-filter',\n  template: html,\n  providers: [\n    GetColaboradoresService,\n    GetProductosService,\n    GetProyectosService,\n    GetSprintsProductoService,\n  ],\n})\nexport class UTFilterComponent {\n  @Input() filterUts;\n\n  filtro = {\n      IdUT: '',\n      IdAgente: 'ALL',\n      IdProducto: 'ALL',\n      IdVersion: 'ALL',\n      IdProyecto: 'ALL',\n  }\n\n  noProductoSelected = true;\n\n  constructor(\n    getColaboradoresService : GetColaboradoresService,\n    getProductosService : GetProductosService,\n    getProyectosService : GetProyectosService,\n    getSprintsProductoService : GetSprintsProductoService,\n    agentService : AgentService,\n    notificationsService: NotificationsService,\n    router : Router\n  ) {\n    this._getColaboradoresService = getColaboradoresService;\n    this._getProductosService = getProductosService;\n    this._getProyectosService = getProyectosService;\n    this._getSprintsService = getSprintsProductoService;\n    this._agentService = agentService;\n    this._notificationService = notificationsService;\n    this._router = router;\n    this.agentes = [];\n    this.productos = [];\n    this.proyectos = [];\n    this.sprints = [];\n  }\n\n  ngOnInit() {\n    this._getProductos();\n    this._getColaboradoresSitio(this._agentService.getAgentId());\n  }\n\n  _getProductos() {\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\n      (data) => {\n        this.productos = this._parseProductos(data);\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener los productos',\n          error\n        )\n    );\n  }\n\n  _getColaboradoresSitio(idAgente) {\n    if (!agentesCache['ALL']) {\n    this._getColaboradoresSubscription =\n      this._getColaboradoresService.get(idAgente).subscribe(\n        (data) => {\n          agentesCache['ALL'] = this._parseAgentes(data);\n          this.agentes = agentesCache['ALL'];\n          this.filtro.IdAgente = 'ALL';\n        },\n        (error) =>\n          this._notificationService.error(\n            'No se han podido obtener los colaboradores del agente',\n          error\n        ));\n    } else {\n      return agentesCache['ALL'];\n    }\n  }\n\n  _parseAgentes(agentes) {\n    let agentesMap = agentes.map((ag) => {\n        return {label: `${ag.Nombre}`, value: ag.Id};\n      }\n    );\n    agentesMap.push({label: 'ALL', value: 'ALL'});\n    return agentesMap;\n  }\n\n  _getDatosProducto(idProducto) {\n    this.proyectos = this._getProyectos(idProducto);\n    this.sprints = this._getSprints(idProducto);\n    this._seleccionarValoresPorDefecto();\n  }\n  _parseProductos(productos) {\n    let productosMap = productos.map((prod) => {\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\n    });\n    productosMap.push({label: 'ALL', value: 'ALL'});\n    return productosMap;\n  }\n\n  _getProyectos(idProducto) {\n    if (!proyectosCache[idProducto]) {\n      this._getProyectoSubscription =\n      this._getProyectosService.get(idProducto).subscribe(\n        (data) => {\n          proyectosCache[idProducto] = this._parseProyectos(data);\n          this.proyectos = proyectosCache[idProducto];\n          this.filtro.IdProyecto = 'ALL';\n        },\n        (error) =>\n          this._notificationService.error(\n            'No se han podido obtener los proyectos del producto',\n          error\n        ));\n    }\n    return proyectosCache[idProducto];\n  }\n\n  _parseProyectos(proyectos) {\n    let proyectosMap = proyectos.map((pr) => {\n        return {label: `${pr.Nombre}`, value: pr.IdProyecto};\n      });\n    proyectosMap.push({label: 'ALL', value: 'ALL'});\n    proyectosMap.push({label: '<Sin Proyecto>', value: 0});\n    return proyectosMap;\n  }\n\n  _getSprints(idProducto) {\n    if (!sprintsCache[idProducto]) {\n      this._getSprintsSubscription =\n       this._getSprintsService.get(idProducto).subscribe(\n        (data) => {\n          sprintsCache[idProducto] = this._parseSprints(data);\n          this.sprints = sprintsCache[idProducto];\n          this.filtro.IdVersion = 'ALL';\n        },\n        (error) => {\n          this._notificationService.error(\n            'No se han podido obtener los Sprints del producto',\n            error\n          );\n        }\n      );\n    }\n    return sprintsCache[idProducto];\n  }\n\n  _parseSprints(sprints) {\n    let sprintsMap = sprints.map((sprint) => {\n      if (sprint.IdVersion == -1) {\n        return {label: 'Backlog', value: 0}; // TODO: Refactor backend service.\n      } else {\n        return {label: sprint.Nombre, value: sprint.IdVersion};\n      }\n    });\n    sprintsMap.push({label: 'ALL', value: 'ALL'});\n    return sprintsMap;\n  }\n\n  _seleccionarValoresPorDefecto() {\n    this.filtro.IdAgente = 'ALL';\n    this.filtro.IdProyecto = 'ALL';\n    this.filtro.IdVersion = 'ALL';\n    this.filtro.idUT = '';\n  }\n\n  onProductChanged(idNuevoProducto) {\n    if (idNuevoProducto != 'ALL') {\n      this.noProductoSelected = false;\n      this.filterUts('ALL', idNuevoProducto, 'ALL', 'ALL');\n      this._getDatosProducto(idNuevoProducto);\n    } else {\n      this.noProductoSelected = true;\n      this._seleccionarValoresPorDefecto();\n    }\n  }\n\n  onFilterChange() {\n    this.filterUts(this.filtro.IdAgente,\n              this.filtro.IdProducto,\n              this.filtro.IdVersion,\n              this.filtro.IdProyecto\n            );\n  }\n\n  isIrAEmpty() {\n    return this.filtro.idUT === null || this.filtro.IdUT <= 0;\n  }\n\n  irAUT() {\n    this._router.navigateByUrl(`/uts/${this.filtro.IdUT}`);\n  }\n\n  ngOnDestroy() {\n    this._getColaboradoresSubscription &&\n      !this._getColaboradoresSubscription.closed &&\n      this._getColaboradoresSubscription.unsubscribe();\n\n    this._getProductosSubscription &&\n      !this._getProductosSubscription.closed &&\n      this._getProductosSubscription.unsubscribe();\n\n    this._getProyectoSubscription &&\n      !this._getProyectoSubscription.closed &&\n      this._getProyectoSubscription.unsubscribe();\n\n    this._getSprintsSubscription &&\n      !this._getSprintsSubscription.closed &&\n      this._getSprintsSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {HomeRoutingModule} from './home.routing';\nimport {HomeComponent} from './home.component';\nimport {TuneUpCoreModule} from '@tune-up/core';\nimport {KanbanResumeComponent, UtListComponent, UTFilterComponent} from './components';\n\n\n@NgModule({\n  imports: [TuneUpCoreModule, HomeRoutingModule],\n  declarations: [\n    HomeComponent,\n    KanbanResumeComponent,\n    UtListComponent,\n    UTFilterComponent,\n  ],\n})\nexport class HomeModule {}\n"],"names":["UtListService","Injectable","http","_http","_url","idActividad","idAgente","idProducto","idVersion","idProyecto","this","get","HttpClient","AgentPicService","idSitio","HomeComponent","Component","utListService","notificationService","allUts","utsToShow","filterUts","idActivity","_this","filter","ut","IdActividad","filterUtsKanbanList","IdAgente","IdProducto","IdVersion","IdProyecto","isAgente","isProducto","isVersion","isProyecto","_utListService","_notificationsService","_getUts","_getUtsSubscription","subscribe","data","error","_this2","closed","unsubscribe","NotificationsService","HomeRoutingModule","NgModule","RouterModule","forChild","path","component","KanbanActivitiesService","KanbanResumeComponent","Input","activitiesService","notificationsService","kanbanActivities","selectedActivity","undefined","_activitiesService","_getKanbanActivities","_getActivitiesSubscription","status","utTypesIcons","workflowIcons","agentPics","UtListComponent","agentPicService","agentService","getAgentPic","_agentService","getSiteId","_agentPicService","URL","createObjectURL","getUtTypeIcon","IdTipoUT","getStateIcon","IdTipoSeguimiento","getUtLink","IdUT","uts","AgentService","GetProductosService","GetProyectosService","GetSprintsProductoService","GetColaboradoresService","proyectosCache","sprintsCache","agentesCache","UTFilterComponent","getColaboradoresService","getProductosService","getProyectosService","getSprintsProductoService","router","filtro","noProductoSelected","_getColaboradoresService","_getProductosService","_getProyectosService","_getSprintsService","_notificationService","_router","agentes","productos","proyectos","sprints","_getProductos","_getColaboradoresSitio","getAgentId","_getProductosSubscription","_parseProductos","_getColaboradoresSubscription","_parseAgentes","agentesMap","map","ag","label","Nombre","value","Id","push","_getProyectos","_getSprints","_seleccionarValoresPorDefecto","productosMap","prod","_getProyectoSubscription","_this3","_parseProyectos","proyectosMap","pr","_getSprintsSubscription","_this4","_parseSprints","sprintsMap","sprint","idUT","idNuevoProducto","_getDatosProducto","navigateByUrl","Router","HomeModule","TuneUpCoreModule"],"mappings":"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"}