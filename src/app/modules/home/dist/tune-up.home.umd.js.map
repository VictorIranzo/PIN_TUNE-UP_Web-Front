{"version":3,"file":"tune-up.home.umd.js","sources":["../src/services/filter.service.js","../src/components/utlist/services/utlist.service.js","../src/components/utlist/services/agentpic.service.js","../src/home.component.js","../src/home.routing.js","../src/components/kanbanresume/services/kanbanactivities.service.js","../src/components/kanbanresume/kanbanresume.component.js","../src/components/utlist/utlist.component.js","../src/components/utfilter/services/getProductos.service.js","../src/components/utfilter/services/getProyectos.service.js","../src/components/utfilter/services/getSprintsProducto.service.js","../src/components/utfilter/services/getColaboradores.service.js","../src/components/utfilter/services/getColaboradoresProducto.service.js","../src/components/utfilter/utfilter.component.js","../src/home.module.js"],"sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class FilterService {\r\n  filter(uts, filtro) {\r\n    let filteredUts = uts.filter(\r\n      (ut) => {\r\n        let isActivity = filtro.IdActividad === 'ALL'|| ut.IdActividad === filtro.IdActividad;\r\n        let isAgente = filtro.IdAgente === 'ALL' || ut.IdAgente === filtro.IdAgente;\r\n        let isProducto = filtro.IdProducto === 'ALL' || ut.IdProducto === filtro.IdProducto;\r\n        let isVersion = filtro.IdVersion === 'ALL' || ut.IdVersion === filtro.IdVersion;\r\n        let isProyecto = filtro.IdProyecto === 'ALL' || ut.IdProyecto === filtro.IdProyecto;\r\n        return isActivity && isAgente && isProducto && isVersion && isProyecto;\r\n      }\r\n    );\r\n    return filteredUts;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n// TODO: move to home\r\n@Injectable()\r\nexport class UtListService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'SeguimientosKanban';\r\n  }\r\n  get(\r\n    idActividad = 'ALL',\r\n    idAgente = 'ALL',\r\n    idProducto = 'ALL',\r\n    idVersion = 'ALL',\r\n    idProyecto = 'ALL'\r\n  ) {\r\n    return this._http.get(\r\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AgentPicService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Agentes/Imagen';\r\n  }\r\n  get(idAgente, idSitio) {\r\n    return this._http.get(`${this._url}/${idAgente}/${idSitio}`, {\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {FilterService} from './services';\r\nimport {UtListService} from './components/utlist/services';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport html from './home.component.html';\r\nimport './home.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-home',\r\n  template: html,\r\n  providers: [\r\n    UtListService,\r\n    FilterService,\r\n  ],\r\n})\r\nexport class HomeComponent {\r\n  allUts = [];\r\n  utsToShow = [];\r\n  globalFilter = {\r\n      IdAgente: 'ALL',\r\n      IdProducto: 'ALL',\r\n      IdVersion: 'ALL',\r\n      IdProyecto: 'ALL',\r\n      IdActividad: 'ALL',\r\n  }\r\n  constructor(\r\n    filterService: FilterService,\r\n    utListService: UtListService,\r\n    notificationService: NotificationsService\r\n  ) {\r\n    this._filterService = filterService;\r\n    this._utListService = utListService;\r\n    this._notificationsService = notificationService;\r\n    this._getUts();\r\n  }\r\n  _getUts() {\r\n    this._getUtsSubscription = this._utListService.get().subscribe(\r\n      (data) => {\r\n        this.allUts = data;\r\n        this.utsToShow = data;\r\n      },\r\n      (error) =>\r\n        this._notificationsService.error(\r\n          'No se pudieron obtener las UTs',\r\n          error\r\n        )\r\n    );\r\n  }\r\n\r\n  filterUts = () => {\r\n    this.utsToShow = this._filterService.filter(this.allUts, this.globalFilter);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._getUtsSubscription &&\r\n      !this._getUtsSubscription.closed &&\r\n      this._getUtsSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {HomeComponent} from './home.component';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([{path: '', component: HomeComponent}])],\r\n  exports: [RouterModule],\r\n})\r\nexport class HomeRoutingModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class KanbanActivitiesService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'ActividadesKanban2';\r\n  }\r\n  get(\r\n    idActividad = 'ALL',\r\n    idAgente = 'ALL',\r\n    idProducto = 'ALL',\r\n    idVersion = 'ALL',\r\n    idProyecto = 'ALL'\r\n  ) {\r\n    return this._http.get(\r\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\r\n    );\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport {KanbanActivitiesService} from './services';\r\nimport html from './kanbanresume.component.html';\r\nimport './kanbanresume.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-kanban-resume',\r\n  template: html,\r\n  providers: [KanbanActivitiesService],\r\n})\r\nexport class KanbanResumeComponent {\r\n  kanbanActivities = [];\r\n  selectedActivity = undefined;\r\n  @Input() filterUts;\r\n  @Input() filtro;\r\n  constructor(\r\n    activitiesService: KanbanActivitiesService,\r\n    notificationsService: NotificationsService\r\n  ) {\r\n    this._activitiesService = activitiesService;\r\n    this._notificationsService = notificationsService;\r\n    this._getKanbanActivities();\r\n  }\r\n  _getKanbanActivities() {\r\n    this._getActivitiesSubscription = this._activitiesService.get().subscribe(\r\n      (data) => {\r\n        this.kanbanActivities = data;\r\n      },\r\n      (error) =>\r\n        this._notificationsService.error(\r\n          'No se pudieron obtener las actividades del Kanban Resumido',\r\n          error\r\n        )\r\n    );\r\n  }\r\n  filterKanbanActivies(idActivity = 'ALL') {\r\n    if (idActivity == -1) idActivity = 'ALL';\r\n    this.filtro.IdActividad = idActivity;\r\n    this.filterUts();\r\n  }\r\n  ngOnDestroy() {\r\n    this._getActivitiesSubscription &&\r\n    !this._getActivitiesSubscription.closed &&\r\n    this._getActivitiesSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {NotificationsService, AgentService} from '@tune-up/core';\r\nimport {AgentPicService} from './services';\r\nimport html from './utlist.component.html';\r\nimport './utlist.component.css';\r\n\r\n// TODO: extract to a config file\r\nconst utTypesIcons = {\r\n  1: 'fa fa-star',\r\n  2: 'fa fa-bug',\r\n  3: 'fa fa-plus-circle',\r\n  4: 'fa fa-puzzle-piece',\r\n};\r\nconst workflowIcons = {\r\n  1: 'fa fa-arrow-up',\r\n  2: 'fa fa-repeat',\r\n  3: 'fa fa-cog',\r\n  4: 'fa fa-undo',\r\n  5: 'fa fa-refresh',\r\n};\r\nconst agentPics = {};\r\n\r\n@Component({\r\n  selector: 'tn-ut-list',\r\n  template: html,\r\n  providers: [AgentPicService],\r\n})\r\nexport class UtListComponent {\r\n  @Input() uts;\r\n  constructor(\r\n    agentPicService: AgentPicService,\r\n    notificationService: NotificationsService,\r\n    agentService: AgentService\r\n  ) {\r\n    this._agentPicService = agentPicService;\r\n    this._notificationsService = notificationService;\r\n    this._agentService = agentService;\r\n  }\r\n  getAgentPic = (ut) => {\r\n      const idAgente = ut.IdAgente;\r\n      if (idAgente) {\r\n        const idSitio = this._agentService.getSiteId();\r\n        if (!agentPics[idAgente]) {\r\n          this._agentPicService.get(idAgente, idSitio).subscribe((data) => {\r\n            agentPics[idAgente] = URL.createObjectURL(data);\r\n          });\r\n        }\r\n        return agentPics[idAgente] || '';\r\n      }\r\n      return '';\r\n  };\r\n  getUtTypeIcon = (ut) => {\r\n    return utTypesIcons[ut.IdTipoUT];\r\n  };\r\n  getStateIcon = (ut) => {\r\n    return workflowIcons[ut.IdTipoSeguimiento];\r\n  };\r\n  getUtLink = (ut) => {\r\n    return `/uts/${ut.IdUT}`;\r\n  };\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProductosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos2';\r\n  }\r\n  get() {\r\n    return this._http.get(\r\n      `${this._url}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProyectosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}/Proyectos`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetSprintsProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Sprints2';\r\n  }\r\n  get(idProducto) { \r\n    return this._http.get(`${this._url}/${idProducto}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetColaboradoresService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Agentes';\r\n  }\r\n  get(idAgente) {\r\n    return this._http.get(`${this._url}/${idAgente}/Colaboradores`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetColaboradoresProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}/Agentes`\r\n    );\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport {AgentService} from '@tune-up/app';\r\nimport {GetColaboradoresService, GetColaboradoresProductoService, GetProductosService, GetProyectosService, GetSprintsProductoService} from './services';\r\nimport html from './utfilter.component.html';\r\nimport './utfilter.component.css';\r\n\r\nconst proyectosCache = [];\r\nconst sprintsCache = [];\r\nconst agentesCache = [];\r\n\r\n@Component({\r\n  selector: 'tn-ut-filter',\r\n  template: html,\r\n  providers: [\r\n    GetColaboradoresService,\r\n    GetColaboradoresProductoService,\r\n    GetProductosService,\r\n    GetProyectosService,\r\n    GetSprintsProductoService,\r\n  ],\r\n})\r\nexport class UTFilterComponent {\r\n  @Input() filterUts;\r\n  @Input() filtro;\r\n\r\n  noProductoSelected = true;\r\n  idUT = '';\r\n  constructor(\r\n    getColaboradoresService : GetColaboradoresService,\r\n    getColaboradoresProductoService : GetColaboradoresProductoService,\r\n    getProductosService : GetProductosService,\r\n    getProyectosService : GetProyectosService,\r\n    getSprintsProductoService : GetSprintsProductoService,\r\n    agentService : AgentService,\r\n    notificationsService: NotificationsService,\r\n    router : Router\r\n  ) {\r\n    this._getColaboradoresService = getColaboradoresService;\r\n    this._getColaboradoresProductoService = getColaboradoresProductoService;\r\n    this._getProductosService = getProductosService;\r\n    this._getProyectosService = getProyectosService;\r\n    this._getSprintsService = getSprintsProductoService;\r\n    this._agentService = agentService;\r\n    this._notificationService = notificationsService;\r\n    this._router = router;\r\n    this.agentes = [];\r\n    this.productos = [];\r\n    this.proyectos = [];\r\n    this.sprints = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._getProductos();\r\n    this._getColaboradores(this._agentService.getAgentId());\r\n    this.proyectos = this.sprints = [{label: 'ALL', value: 'ALL'}];\r\n    this._seleccionarValoresPorDefecto();\r\n  }\r\n\r\n  _getProductos() {\r\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\r\n      (data) => {\r\n        this.productos = this._parseProductos(data);\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener los productos',\r\n          error\r\n        )\r\n    );\r\n  }\r\n\r\n  _getDatosProducto(idProducto) {\r\n    this.proyectos = this._getProyectos(idProducto);\r\n    this.sprints = this._getSprints(idProducto);\r\n    this.agentes = this._getColaboradores(this._agentService.getAgentId(), idProducto);\r\n    this._seleccionarValoresPorDefecto();\r\n  }\r\n  _parseProductos(productos) {\r\n    let productosMap = productos.map((prod) => {\r\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\r\n    });\r\n    productosMap.push({label: 'ALL', value: 'ALL'});\r\n    return productosMap;\r\n  }\r\n\r\n  _getProyectos(idProducto) {\r\n    if (!proyectosCache[idProducto]) {\r\n      this._getProyectoSubscription =\r\n      this._getProyectosService.get(idProducto).subscribe(\r\n        (data) => {\r\n          proyectosCache[idProducto] = this._parseProyectos(data);\r\n          this.proyectos = proyectosCache[idProducto];\r\n          this.filtro.IdProyecto = 'ALL';\r\n        },\r\n        (error) =>\r\n          this._notificationService.error(\r\n            'No se han podido obtener los proyectos del producto',\r\n          error\r\n        ));\r\n    }\r\n    return proyectosCache[idProducto];\r\n  }\r\n\r\n  _parseProyectos(proyectos) {\r\n    let proyectosMap = proyectos.map((pr) => {\r\n        return {label: `${pr.Nombre}`, value: pr.IdProyecto};\r\n      });\r\n    proyectosMap.push({label: 'ALL', value: 'ALL'});\r\n    proyectosMap.push({label: '<Sin Proyecto>', value: 0});\r\n    return proyectosMap;\r\n  }\r\n\r\n  _getSprints(idProducto) {\r\n    if (!sprintsCache[idProducto]) {\r\n      this._getSprintsSubscription =\r\n       this._getSprintsService.get(idProducto).subscribe(\r\n        (data) => {\r\n          sprintsCache[idProducto] = this._parseSprints(data);\r\n          this.sprints = sprintsCache[idProducto];\r\n          this.filtro.IdVersion = 'ALL';\r\n        },\r\n        (error) => {\r\n          this._notificationService.error(\r\n            'No se han podido obtener los Sprints del producto',\r\n            error\r\n          );\r\n        }\r\n      );\r\n    }\r\n    return sprintsCache[idProducto];\r\n  }\r\n\r\n  _parseSprints(sprints) {\r\n    let sprintsMap = sprints.map((sprint) => {\r\n      if (sprint.IdVersion == -1) {\r\n        return {label: 'Backlog', value: 0}; // TODO: Refactor backend service.\r\n      } else {\r\n        return {label: sprint.Nombre, value: sprint.IdVersion};\r\n      }\r\n    });\r\n    sprintsMap.push({label: 'ALL', value: 'ALL'});\r\n    return sprintsMap;\r\n  }\r\n\r\n  _getColaboradores(idAgente, idProducto = 'ALL') {\r\n    if (!agentesCache[idProducto]) {\r\n      if (idProducto == 'ALL') {\r\n        this._getColaboradoresSitio(idAgente);\r\n      } else {\r\n        this._getColaboradoresProducto(idProducto);\r\n      }\r\n    } else {\r\n      return agentesCache[idProducto];\r\n    }\r\n  }\r\n\r\n  _getColaboradoresSitio(idAgente) {\r\n    this._getColaboradoresSubscription =\r\n    this._getColaboradoresService.get(idAgente).subscribe(\r\n      (data) => {\r\n        agentesCache['ALL'] = this._parseAgentes(data);\r\n        this.agentes = agentesCache['ALL'];\r\n        this.filtro.IdAgente = 'ALL';\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener los colaboradores del agente',\r\n        error\r\n      ));\r\n  }\r\n\r\n  _getColaboradoresProducto(idProducto) {\r\n    this._getColaboradoresProductoSubscription =\r\n    this._getColaboradoresProductoService.get(idProducto).subscribe(\r\n      (data) => {\r\n        agentesCache[idProducto] = this._parseAgentes(data);\r\n        this.agentes = agentesCache[idProducto];\r\n        this.filtro.IdAgente = 'ALL';\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener los colaboradores del agente',\r\n        error\r\n      ));\r\n  }\r\n\r\n  _parseAgentes(agentes) {\r\n    let agentesMap = agentes\r\n                      .filter((ag) => ag.Id != -1)\r\n                      .map((ag) => {\r\n                        return {label: `${ag.Nombre}`, value: ag.Id};\r\n                      });\r\n    agentesMap.push({label: 'ALL', value: 'ALL'});\r\n    return agentesMap;\r\n  }\r\n\r\n  _seleccionarValoresPorDefecto() {\r\n    this.filtro.IdAgente = 'ALL';\r\n    this.filtro.IdProyecto = 'ALL';\r\n    this.filtro.IdVersion = 'ALL';\r\n  }\r\n\r\n  onProductChanged(idNuevoProducto) {\r\n    if (idNuevoProducto != 'ALL') {\r\n      this.noProductoSelected = false;\r\n      this._getDatosProducto(idNuevoProducto);\r\n    } else {\r\n      this.noProductoSelected = true;\r\n    }\r\n    this._seleccionarValoresPorDefecto();\r\n    this.filterUts();\r\n  }\r\n\r\n  onFilterChange() {\r\n    this.filterUts();\r\n  }\r\n\r\n  isIrAEmpty() {\r\n    return this.idUT === null || this.IdUT <= 0;\r\n  }\r\n\r\n  irAUT() {\r\n    this._router.navigateByUrl(`/uts/${this.IdUT}`);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._getColaboradoresSubscription &&\r\n      !this._getColaboradoresSubscription.closed &&\r\n      this._getColaboradoresSubscription.unsubscribe();\r\n\r\n    this._getColaboradoresProductoSubscription &&\r\n      !this._getColaboradoresProductoSubscription.closed &&\r\n      this._getColaboradoresProductoSubscription.unsubscribe();\r\n\r\n    this._getProductosSubscription &&\r\n      !this._getProductosSubscription.closed &&\r\n      this._getProductosSubscription.unsubscribe();\r\n\r\n    this._getProyectoSubscription &&\r\n      !this._getProyectoSubscription.closed &&\r\n      this._getProyectoSubscription.unsubscribe();\r\n\r\n    this._getSprintsSubscription &&\r\n      !this._getSprintsSubscription.closed &&\r\n      this._getSprintsSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {HomeRoutingModule} from './home.routing';\r\nimport {HomeComponent} from './home.component';\r\nimport {TuneUpCoreModule} from '@tune-up/core';\r\nimport {KanbanResumeComponent, UtListComponent, UTFilterComponent} from './components';\r\n\r\n\r\n@NgModule({\r\n  imports: [TuneUpCoreModule, HomeRoutingModule],\r\n  declarations: [\r\n    HomeComponent,\r\n    KanbanResumeComponent,\r\n    UtListComponent,\r\n    UTFilterComponent,\r\n  ],\r\n})\r\nexport class HomeModule {}\r\n"],"names":["FilterService","Injectable","uts","filtro","filter","ut","isActivity","IdActividad","isAgente","IdAgente","isProducto","IdProducto","isVersion","IdVersion","isProyecto","IdProyecto","UtListService","http","_http","_url","idActividad","idAgente","idProducto","idVersion","idProyecto","this","get","HttpClient","AgentPicService","idSitio","HomeComponent","Component","filterService","utListService","notificationService","allUts","utsToShow","globalFilter","filterUts","_this","_filterService","_utListService","_notificationsService","_getUts","_getUtsSubscription","subscribe","data","error","_this2","closed","unsubscribe","NotificationsService","HomeRoutingModule","NgModule","RouterModule","forChild","path","component","KanbanActivitiesService","KanbanResumeComponent","Input","activitiesService","notificationsService","kanbanActivities","selectedActivity","undefined","_activitiesService","_getKanbanActivities","_getActivitiesSubscription","idActivity","utTypesIcons","workflowIcons","agentPics","UtListComponent","agentPicService","agentService","getAgentPic","_agentService","getSiteId","_agentPicService","URL","createObjectURL","getUtTypeIcon","IdTipoUT","getStateIcon","IdTipoSeguimiento","getUtLink","IdUT","AgentService","GetProductosService","GetProyectosService","GetSprintsProductoService","GetColaboradoresService","GetColaboradoresProductoService","proyectosCache","sprintsCache","agentesCache","UTFilterComponent","getColaboradoresService","getColaboradoresProductoService","getProductosService","getProyectosService","getSprintsProductoService","router","noProductoSelected","idUT","_getColaboradoresService","_getColaboradoresProductoService","_getProductosService","_getProyectosService","_getSprintsService","_notificationService","_router","agentes","productos","proyectos","sprints","_getProductos","_getColaboradores","getAgentId","label","value","_seleccionarValoresPorDefecto","_getProductosSubscription","_parseProductos","_getProyectos","_getSprints","productosMap","map","prod","Nombre","push","_getProyectoSubscription","_parseProyectos","proyectosMap","pr","_getSprintsSubscription","_this3","_parseSprints","sprintsMap","sprint","_getColaboradoresSitio","_getColaboradoresProducto","_getColaboradoresSubscription","_this4","_parseAgentes","_getColaboradoresProductoSubscription","_this5","agentesMap","ag","Id","idNuevoProducto","_getDatosProducto","navigateByUrl","Router","HomeModule","TuneUpCoreModule"],"mappings":"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"}