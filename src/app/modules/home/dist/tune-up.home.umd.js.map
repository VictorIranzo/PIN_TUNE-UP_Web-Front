{"version":3,"file":"tune-up.home.umd.js","sources":["../src/services/filter.service.js","../src/components/utlist/services/utlist.service.js","../src/components/utlist/services/agentpic.service.js","../src/components/kanbanresume/services/kanbanactivities.service.js","../src/components/kanbanresume/services/updateKanban.service.js","../src/home.component.js","../src/home.routing.js","../src/components/kanbanresume/kanbanresume.component.js","../src/components/utlist/utlist.component.js","../src/components/utfilter/services/getProductos.service.js","../src/components/utfilter/services/getProyectos.service.js","../src/components/utfilter/services/getSprintsProducto.service.js","../src/components/utfilter/services/getColaboradores.service.js","../src/components/utfilter/services/getColaboradoresProducto.service.js","../src/components/utfilter/utfilter.component.js","../src/home.module.js"],"sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class FilterService {\r\n  filter(uts, filtro) {\r\n    let filteredUts = uts.filter(\r\n      (ut) => {\r\n        let isActivity = filtro.IdActividad === 'ALL'|| ut.IdActividad === filtro.IdActividad;\r\n        let isAgente = filtro.IdAgente === 'ALL' || ut.IdAgente === filtro.IdAgente || ut.IdAgente === null;\r\n        let isProducto = filtro.IdProducto === 'ALL' || ut.IdProducto === filtro.IdProducto;\r\n        let isVersion = filtro.IdVersion === 'ALL' || ut.IdVersion === filtro.IdVersion;\r\n        let isProyecto = filtro.IdProyecto === 'ALL' || ut.IdProyecto === filtro.IdProyecto;\r\n        return isActivity && isAgente && isProducto && isVersion && isProyecto;\r\n      }\r\n    );\r\n    return filteredUts;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n// TODO: move to home\r\n@Injectable()\r\nexport class UtListService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'SeguimientosKanban';\r\n  }\r\n  get(\r\n    idActividad = 'ALL',\r\n    idAgente = 'ALL',\r\n    idProducto = 'ALL',\r\n    idVersion = 'ALL',\r\n    idProyecto = 'ALL'\r\n  ) {\r\n    return this._http.get(\r\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AgentPicService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Agentes/Imagen';\r\n  }\r\n  get(idAgente, idSitio) {\r\n    return this._http.get(`${this._url}/${idAgente}/${idSitio}`, {\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class KanbanActivitiesService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'ActividadesKanban2';\r\n  }\r\n  get(\r\n    idActividad = 'ALL',\r\n    idAgente = 'ALL',\r\n    idProducto = 'ALL',\r\n    idVersion = 'ALL',\r\n    idProyecto = 'ALL'\r\n  ) {\r\n    return this._http.get(\r\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class UpdateKanbanResumeService {\r\n  _updateKanban;\r\n  set init(fun) {\r\n    this._updateKanban = fun;\r\n  }\r\n\r\n  update() {\r\n    this._updateKanban();\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {FilterService} from './services';\r\nimport {UtListService} from './components/utlist/services';\r\nimport {UpdateKanbanResumeService} from './components/kanbanresume/services';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport html from './home.component.html';\r\nimport './home.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-home',\r\n  template: html,\r\n  providers: [\r\n    UtListService,\r\n    FilterService,\r\n    UpdateKanbanResumeService,\r\n  ],\r\n})\r\nexport class HomeComponent {\r\n  allUts = [];\r\n  utsToShow = [];\r\n  globalFilter = {\r\n      IdAgente: 'ALL',\r\n      IdProducto: 'ALL',\r\n      IdVersion: 'ALL',\r\n      IdProyecto: 'ALL',\r\n      IdActividad: 'ALL',\r\n  }\r\n  constructor(\r\n    filterService: FilterService,\r\n    utListService: UtListService,\r\n    updateKanbanService: UpdateKanbanResumeService,\r\n    notificationService: NotificationsService\r\n  ) {\r\n    this._filterService = filterService;\r\n    this._utListService = utListService;\r\n    this._notificationsService = notificationService;\r\n    this._updateKanbanService = updateKanbanService;\r\n    this._getUts();\r\n  }\r\n  _getUts() {\r\n    this._getUtsSubscription = this._utListService.get().subscribe(\r\n      (data) => {\r\n        this.allUts = data;\r\n        this.utsToShow = data;\r\n      },\r\n      (error) =>\r\n        this._notificationsService.error(\r\n          'No se pudieron obtener las UTs',\r\n          error\r\n        )\r\n    );\r\n  }\r\n\r\n  filterUts = (isActivityFilter = false) => {\r\n    if (!isActivityFilter) {\r\n      this.globalFilter.IdActividad = 'ALL';\r\n      this._updateKanbanService.update();\r\n    }\r\n    this.utsToShow = this._filterService.filter(this.allUts, this.globalFilter);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._getUtsSubscription &&\r\n      !this._getUtsSubscription.closed &&\r\n      this._getUtsSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {HomeComponent} from './home.component';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([{path: '', component: HomeComponent}])],\r\n  exports: [RouterModule],\r\n})\r\nexport class HomeRoutingModule {}\r\n","import {Component, Input} from '@angular/core';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport {KanbanActivitiesService, UpdateKanbanResumeService} from './services';\r\nimport html from './kanbanresume.component.html';\r\nimport './kanbanresume.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-kanban-resume',\r\n  template: html,\r\n  providers: [KanbanActivitiesService],\r\n})\r\nexport class KanbanResumeComponent {\r\n  kanbanActivities = [];\r\n  selectedActivity = undefined;\r\n  @Input() filterUts;\r\n  @Input() filtro;\r\n  constructor(\r\n    activitiesService: KanbanActivitiesService,\r\n    notificationsService: NotificationsService,\r\n    updateKanbanResumeService : UpdateKanbanResumeService\r\n  ) {\r\n    this._activitiesService = activitiesService;\r\n    this._notificationsService = notificationsService;\r\n    this._updateKanbanResumeService = updateKanbanResumeService;\r\n    this._updateKanbanResumeService.init = () => {\r\n      this._getKanbanActivities();\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._getKanbanActivities();\r\n  }\r\n  _getKanbanActivities() {\r\n    this._getActivitiesSubscription = this._activitiesService.get(\r\n      'ALL',\r\n      this.filtro.IdAgente,\r\n      this.filtro.IdProducto,\r\n      this.filtro.IdVersion,\r\n      this.filtro.IdProyecto\r\n    ).subscribe(\r\n      (data) => {\r\n        this.kanbanActivities = data;\r\n      },\r\n      (error) =>\r\n        this._notificationsService.error(\r\n          'No se pudieron obtener las actividades del Kanban Resumido',\r\n          error\r\n        )\r\n    );\r\n  }\r\n  filterKanbanActivies(idActivity = 'ALL') {\r\n    if (idActivity == -1) idActivity = 'ALL';\r\n    this.filtro.IdActividad = idActivity;\r\n    this.filterUts(true);\r\n  }\r\n  ngOnDestroy() {\r\n    this._getActivitiesSubscription &&\r\n    !this._getActivitiesSubscription.closed &&\r\n    this._getActivitiesSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {NotificationsService, AgentService} from '@tune-up/core';\r\nimport {AgentPicService} from './services';\r\nimport html from './utlist.component.html';\r\nimport './utlist.component.css';\r\n\r\n// TODO: extract to a config file\r\nconst utTypesIcons = {\r\n  1: 'fa fa-star',\r\n  2: 'fa fa-bug',\r\n  3: 'fa fa-plus-circle',\r\n  4: 'fa fa-puzzle-piece',\r\n};\r\nconst workflowIcons = {\r\n  1: 'fa fa-arrow-up',\r\n  2: 'fa fa-repeat',\r\n  3: 'fa fa-cog',\r\n  4: 'fa fa-undo',\r\n  5: 'fa fa-refresh',\r\n};\r\nconst agentPics = {};\r\n\r\n@Component({\r\n  selector: 'tn-ut-list',\r\n  template: html,\r\n  providers: [AgentPicService],\r\n})\r\nexport class UtListComponent {\r\n  @Input() uts;\r\n  constructor(\r\n    agentPicService: AgentPicService,\r\n    notificationService: NotificationsService,\r\n    agentService: AgentService\r\n  ) {\r\n    this._agentPicService = agentPicService;\r\n    this._notificationsService = notificationService;\r\n    this._agentService = agentService;\r\n  }\r\n  getAgentPic = (ut) => {\r\n      const idAgente = ut.IdAgente;\r\n      if (idAgente) {\r\n        const idSitio = this._agentService.getSiteId();\r\n        if (!agentPics[idAgente]) {\r\n          this._agentPicService.get(idAgente, idSitio).subscribe((data) => {\r\n            agentPics[idAgente] = URL.createObjectURL(data);\r\n          });\r\n        }\r\n        return agentPics[idAgente] || '';\r\n      }\r\n      return '';\r\n  };\r\n  getUtTypeIcon = (ut) => {\r\n    return utTypesIcons[ut.IdTipoUT];\r\n  };\r\n  getStateIcon = (ut) => {\r\n    return workflowIcons[ut.IdTipoSeguimiento];\r\n  };\r\n  getUtLink = (ut) => {\r\n    return `/uts/${ut.IdUT}`;\r\n  };\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProductosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos2';\r\n  }\r\n  get() {\r\n    return this._http.get(\r\n      `${this._url}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProyectosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}/Proyectos`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetSprintsProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Sprints2';\r\n  }\r\n  get(idProducto) { \r\n    return this._http.get(`${this._url}/${idProducto}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetColaboradoresService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Agentes';\r\n  }\r\n  get(idAgente) {\r\n    return this._http.get(`${this._url}/${idAgente}/Colaboradores`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetColaboradoresProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}/Agentes`\r\n    );\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport {AgentService} from '@tune-up/app';\r\nimport {GetColaboradoresService, GetColaboradoresProductoService, GetProductosService, GetProyectosService, GetSprintsProductoService} from './services';\r\nimport html from './utfilter.component.html';\r\nimport './utfilter.component.css';\r\n\r\nconst proyectosCache = [];\r\nconst sprintsCache = [];\r\nconst agentesCache = [];\r\n\r\n@Component({\r\n  selector: 'tn-ut-filter',\r\n  template: html,\r\n  providers: [\r\n    GetColaboradoresService,\r\n    GetColaboradoresProductoService,\r\n    GetProductosService,\r\n    GetProyectosService,\r\n    GetSprintsProductoService,\r\n  ],\r\n})\r\nexport class UTFilterComponent {\r\n  @Input() filterUts;\r\n  @Input() filtro;\r\n\r\n  noProductoSelected = true;\r\n  idUT = '';\r\n  constructor(\r\n    getColaboradoresService : GetColaboradoresService,\r\n    getColaboradoresProductoService : GetColaboradoresProductoService,\r\n    getProductosService : GetProductosService,\r\n    getProyectosService : GetProyectosService,\r\n    getSprintsProductoService : GetSprintsProductoService,\r\n    agentService : AgentService,\r\n    notificationsService: NotificationsService,\r\n    router : Router\r\n  ) {\r\n    this._getColaboradoresService = getColaboradoresService;\r\n    this._getColaboradoresProductoService = getColaboradoresProductoService;\r\n    this._getProductosService = getProductosService;\r\n    this._getProyectosService = getProyectosService;\r\n    this._getSprintsService = getSprintsProductoService;\r\n    this._agentService = agentService;\r\n    this._notificationService = notificationsService;\r\n    this._router = router;\r\n    this.agentes = [];\r\n    this.productos = [];\r\n    this.proyectos = [];\r\n    this.sprints = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._getProductos();\r\n    this._getColaboradores(this._agentService.getAgentId());\r\n    this.proyectos = this.sprints = [{label: 'ALL', value: 'ALL'}];\r\n    this._seleccionarValoresPorDefecto();\r\n  }\r\n\r\n  _getProductos() {\r\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\r\n      (data) => {\r\n        this.productos = this._parseProductos(data);\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener los productos',\r\n          error\r\n        )\r\n    );\r\n  }\r\n\r\n  _getDatosProducto(idProducto) {\r\n    this.proyectos = this._getProyectos(idProducto);\r\n    this.sprints = this._getSprints(idProducto);\r\n    this.agentes = this._getColaboradores(this._agentService.getAgentId(), idProducto);\r\n    this._seleccionarValoresPorDefecto();\r\n  }\r\n  _parseProductos(productos) {\r\n    let productosMap = productos.map((prod) => {\r\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\r\n    });\r\n    productosMap.push({label: 'ALL', value: 'ALL'});\r\n    return productosMap;\r\n  }\r\n\r\n  _getProyectos(idProducto) {\r\n    if (!proyectosCache[idProducto]) {\r\n      this._getProyectoSubscription =\r\n      this._getProyectosService.get(idProducto).subscribe(\r\n        (data) => {\r\n          proyectosCache[idProducto] = this._parseProyectos(data);\r\n          this.proyectos = proyectosCache[idProducto];\r\n          this.filtro.IdProyecto = 'ALL';\r\n        },\r\n        (error) =>\r\n          this._notificationService.error(\r\n            'No se han podido obtener los proyectos del producto',\r\n          error\r\n        ));\r\n    }\r\n    return proyectosCache[idProducto];\r\n  }\r\n\r\n  _parseProyectos(proyectos) {\r\n    let proyectosMap = proyectos.map((pr) => {\r\n        return {label: `${pr.Nombre}`, value: pr.IdProyecto};\r\n      });\r\n    proyectosMap.push({label: 'ALL', value: 'ALL'});\r\n    proyectosMap.push({label: '<Sin Proyecto>', value: 0});\r\n    return proyectosMap;\r\n  }\r\n\r\n  _getSprints(idProducto) {\r\n    if (!sprintsCache[idProducto]) {\r\n      this._getSprintsSubscription =\r\n       this._getSprintsService.get(idProducto).subscribe(\r\n        (data) => {\r\n          sprintsCache[idProducto] = this._parseSprints(data);\r\n          this.sprints = sprintsCache[idProducto];\r\n          this.filtro.IdVersion = 'ALL';\r\n        },\r\n        (error) => {\r\n          this._notificationService.error(\r\n            'No se han podido obtener los Sprints del producto',\r\n            error\r\n          );\r\n        }\r\n      );\r\n    }\r\n    return sprintsCache[idProducto];\r\n  }\r\n\r\n  _parseSprints(sprints) {\r\n    let sprintsMap = sprints.map((sprint) => {\r\n      if (sprint.IdVersion == -1) {\r\n        return {label: 'Backlog', value: 0}; // TODO: Refactor backend service.\r\n      } else {\r\n        return {label: sprint.Nombre, value: sprint.IdVersion};\r\n      }\r\n    });\r\n    sprintsMap.push({label: 'ALL', value: 'ALL'});\r\n    return sprintsMap;\r\n  }\r\n\r\n  _getColaboradores(idAgente, idProducto = 'ALL') {\r\n    if (!agentesCache[idProducto]) {\r\n      if (idProducto == 'ALL') {\r\n        this._getColaboradoresSitio(idAgente);\r\n      } else {\r\n        this._getColaboradoresProducto(idProducto);\r\n      }\r\n    } else {\r\n      return agentesCache[idProducto];\r\n    }\r\n  }\r\n\r\n  _getColaboradoresSitio(idAgente) {\r\n    this._getColaboradoresSubscription =\r\n    this._getColaboradoresService.get(idAgente).subscribe(\r\n      (data) => {\r\n        agentesCache['ALL'] = this._parseAgentes(data);\r\n        this.agentes = agentesCache['ALL'];\r\n        this.filtro.IdAgente = 'ALL';\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener los colaboradores del agente',\r\n        error\r\n      ));\r\n  }\r\n\r\n  _getColaboradoresProducto(idProducto) {\r\n    this._getColaboradoresProductoSubscription =\r\n    this._getColaboradoresProductoService.get(idProducto).subscribe(\r\n      (data) => {\r\n        agentesCache[idProducto] = this._parseAgentes(data);\r\n        this.agentes = agentesCache[idProducto];\r\n        this.filtro.IdAgente = 'ALL';\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener los colaboradores del agente',\r\n        error\r\n      ));\r\n  }\r\n\r\n  _parseAgentes(agentes) {\r\n    let agentesMap = agentes\r\n                      .filter((ag) => ag.Id != -1)\r\n                      .map((ag) => {\r\n                        return {label: `${ag.Nombre}`, value: ag.Id};\r\n                      });\r\n    agentesMap.push({label: 'ALL', value: 'ALL'});\r\n    return agentesMap;\r\n  }\r\n\r\n  _seleccionarValoresPorDefecto() {\r\n    this.filtro.IdAgente = 'ALL';\r\n    this.filtro.IdProyecto = 'ALL';\r\n    this.filtro.IdVersion = 'ALL';\r\n  }\r\n\r\n  onProductChanged(idNuevoProducto) {\r\n    if (idNuevoProducto != 'ALL') {\r\n      this.noProductoSelected = false;\r\n      this._getDatosProducto(idNuevoProducto);\r\n    } else {\r\n      this.noProductoSelected = true;\r\n    }\r\n    this._seleccionarValoresPorDefecto();\r\n    this.filterUts();\r\n  }\r\n\r\n  onFilterChange() {\r\n    this.filterUts();\r\n  }\r\n\r\n  isIrAEmpty() {\r\n    return this.idUT === null || this.IdUT <= 0;\r\n  }\r\n\r\n  irAUT() {\r\n    this._router.navigateByUrl(`/uts/${this.IdUT}`);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._getColaboradoresSubscription &&\r\n      !this._getColaboradoresSubscription.closed &&\r\n      this._getColaboradoresSubscription.unsubscribe();\r\n\r\n    this._getColaboradoresProductoSubscription &&\r\n      !this._getColaboradoresProductoSubscription.closed &&\r\n      this._getColaboradoresProductoSubscription.unsubscribe();\r\n\r\n    this._getProductosSubscription &&\r\n      !this._getProductosSubscription.closed &&\r\n      this._getProductosSubscription.unsubscribe();\r\n\r\n    this._getProyectoSubscription &&\r\n      !this._getProyectoSubscription.closed &&\r\n      this._getProyectoSubscription.unsubscribe();\r\n\r\n    this._getSprintsSubscription &&\r\n      !this._getSprintsSubscription.closed &&\r\n      this._getSprintsSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {HomeRoutingModule} from './home.routing';\r\nimport {HomeComponent} from './home.component';\r\nimport {TuneUpCoreModule} from '@tune-up/core';\r\nimport {KanbanResumeComponent, UtListComponent, UTFilterComponent} from './components';\r\n\r\n\r\n@NgModule({\r\n  imports: [TuneUpCoreModule, HomeRoutingModule],\r\n  declarations: [\r\n    HomeComponent,\r\n    KanbanResumeComponent,\r\n    UtListComponent,\r\n    UTFilterComponent,\r\n  ],\r\n})\r\nexport class HomeModule {}\r\n"],"names":["FilterService","Injectable","uts","filtro","filter","ut","isActivity","IdActividad","isAgente","IdAgente","isProducto","IdProducto","isVersion","IdVersion","isProyecto","IdProyecto","UtListService","http","_http","_url","idActividad","idAgente","idProducto","idVersion","idProyecto","this","get","HttpClient","AgentPicService","idSitio","KanbanActivitiesService","UpdateKanbanResumeService","_updateKanban","fun","HomeComponent","Component","filterService","utListService","updateKanbanService","notificationService","allUts","utsToShow","globalFilter","filterUts","_updateKanbanService","update","_this","_filterService","_utListService","_notificationsService","_getUts","_getUtsSubscription","subscribe","data","error","_this2","closed","unsubscribe","NotificationsService","HomeRoutingModule","NgModule","RouterModule","forChild","path","component","KanbanResumeComponent","Input","activitiesService","notificationsService","updateKanbanResumeService","kanbanActivities","selectedActivity","undefined","_activitiesService","_updateKanbanResumeService","init","_getKanbanActivities","_getActivitiesSubscription","idActivity","utTypesIcons","workflowIcons","agentPics","UtListComponent","agentPicService","agentService","getAgentPic","_agentService","getSiteId","_agentPicService","URL","createObjectURL","getUtTypeIcon","IdTipoUT","getStateIcon","IdTipoSeguimiento","getUtLink","IdUT","AgentService","GetProductosService","GetProyectosService","GetSprintsProductoService","GetColaboradoresService","GetColaboradoresProductoService","proyectosCache","sprintsCache","agentesCache","UTFilterComponent","getColaboradoresService","getColaboradoresProductoService","getProductosService","getProyectosService","getSprintsProductoService","router","noProductoSelected","idUT","_getColaboradoresService","_getColaboradoresProductoService","_getProductosService","_getProyectosService","_getSprintsService","_notificationService","_router","agentes","productos","proyectos","sprints","_getProductos","_getColaboradores","getAgentId","label","value","_seleccionarValoresPorDefecto","_getProductosSubscription","_parseProductos","_getProyectos","_getSprints","productosMap","map","prod","Nombre","push","_getProyectoSubscription","_parseProyectos","proyectosMap","pr","_getSprintsSubscription","_this3","_parseSprints","sprintsMap","sprint","_getColaboradoresSitio","_getColaboradoresProducto","_getColaboradoresSubscription","_this4","_parseAgentes","_getColaboradoresProductoSubscription","_this5","agentesMap","ag","Id","idNuevoProducto","_getDatosProducto","navigateByUrl","Router","HomeModule","TuneUpCoreModule"],"mappings":"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"}
