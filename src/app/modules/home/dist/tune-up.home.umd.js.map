{"version":3,"file":"tune-up.home.umd.js","sources":["../src/components/utlist/services/utlist.service.js","../src/components/utlist/services/agentpic.service.js","../src/home.component.js","../src/home.routing.js","../src/components/kanbanresume/services/kanbanactivities.service.js","../src/components/kanbanresume/kanbanresume.component.js","../src/components/utlist/utlist.component.js","../src/home.module.js"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n// TODO: move to home\n@Injectable()\nexport class UtListService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'SeguimientosKanban';\n  }\n  get(\n    idActividad = 'ALL',\n    idAgente = 'ALL',\n    idProducto = 'ALL',\n    idVersion = 'ALL',\n    idProyecto = 'ALL'\n  ) {\n    return this._http.get(\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AgentPicService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Agentes/Imagen';\r\n  }\r\n  get(idAgente, idSitio) {\r\n    return this._http.get(`${this._url}/${idAgente}/${idSitio}`, {\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {UtListService} from './components/utlist/services';\nimport {NotificationsService} from '@tune-up/core';\nimport html from './home.component.html';\nimport './home.component.css';\n\n@Component({\n  selector: 'tn-home',\n  template: html,\n  providers: [UtListService],\n})\nexport class HomeComponent {\n  allUts = [];\n  utsToShow = [];\n  constructor(\n    utListService: UtListService,\n    notificationService: NotificationsService\n  ) {\n    this._utListService = utListService;\n    this._notificationsService = notificationService;\n    this._getUts();\n  }\n  _getUts() {\n    this._getUtsSubscription = this._utListService.get().subscribe(\n      (data) => {\n        this.allUts = data;\n        this.utsToShow = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las UTs',\n          error\n        )\n    );\n  }\n  filterUts = (idActivity, status) => {\n    this.utsToShow = this.allUts.filter(\n      (ut) =>\n        // TODO: filter by activity\n        // (idActivity === 'ALL' || ut.IdActividad === idActivity) &&\n        status === 'ALL' ||\n        ut.Estado === status ||\n        (ut.Estado === 'ACTIVE' && status === 'DOING')\n    );\n  };\n  ngOnDestroy() {\n    this._getUtsSubscription &&\n    !this._getUtsSubscription.closed &&\n    this._getUtsSubscription.unsubscribe();\n  }\n}\n","import {RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {HomeComponent} from './home.component';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([{path: '', component: HomeComponent}])],\r\n  exports: [RouterModule],\r\n})\r\nexport class HomeRoutingModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class KanbanActivitiesService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'ActividadesKanban2';\r\n  }\r\n  get(\r\n    idActividad = 'ALL',\r\n    idAgente = 'ALL',\r\n    idProducto = 'ALL',\r\n    idVersion = 'ALL',\r\n    idProyecto = 'ALL'\r\n  ) {\r\n    return this._http.get(\r\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\r\n    );\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService} from '@tune-up/core';\nimport {KanbanActivitiesService} from './services';\nimport html from './kanbanresume.component.html';\nimport './kanbanresume.component.css';\n\n@Component({\n  selector: 'tn-kanban-resume',\n  template: html,\n  providers: [KanbanActivitiesService],\n})\nexport class KanbanResumeComponent {\n  kanbanActivities = [];\n  selectedActivity = undefined;\n  @Input() filterUts;\n  constructor(\n    activitiesService: KanbanActivitiesService,\n    notificationsService: NotificationsService\n  ) {\n    this._activitiesService = activitiesService;\n    this._notificationsService = notificationsService;\n    this._getKanbanActivities();\n  }\n  _getKanbanActivities() {\n    this._getActivitiesSubscription = this._activitiesService.get().subscribe(\n      (data) => {\n        this.kanbanActivities = data;\n      },\n      (error) =>\n        this._notificationsService.error(\n          'No se pudieron obtener las actividades del Kanban Resumido',\n          error\n        )\n    );\n  }\n  filterKanbanActivies(idActivity = 'ALL', status = 'ALL') {\n    this.filterUts(idActivity, status);\n  }\n  ngOnDestroy() {\n    this._getActivitiesSubscription &&\n    !this._getActivitiesSubscription.closed &&\n    this._getActivitiesSubscription.unsubscribe();\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService, AgentService} from '@tune-up/core';\nimport {AgentPicService} from './services';\nimport html from './utlist.component.html';\nimport './utlist.component.css';\n\n// TODO: extract to a config file\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\nconst workflowIcons = {\n  1: 'fa fa-arrow-up',\n  2: 'fa fa-repeat',\n  3: 'fa fa-cog',\n  4: 'fa fa-undo',\n  5: 'fa fa-refresh',\n};\nconst agentPics = {};\n\n@Component({\n  selector: 'tn-ut-list',\n  template: html,\n  providers: [AgentPicService],\n})\nexport class UtListComponent {\n  @Input() uts;\n  constructor(\n    agentPicService: AgentPicService,\n    notificationService: NotificationsService,\n    agentService: AgentService\n  ) {\n    this._agentPicService = agentPicService;\n    this._notificationsService = notificationService;\n    this._agentService = agentService;\n  }\n  getAgentPic = (ut) => {\n      const idAgente = ut.IdAgente;\n      if (idAgente) {\n        const idSitio = this._agentService.getSiteId();\n        if (!agentPics[idAgente]) {\n          this._agentPicService.get(idAgente, idSitio).subscribe((data) => {\n            agentPics[idAgente] = URL.createObjectURL(data);\n          });\n        }\n        return agentPics[idAgente] || '';\n      }\n      return '';\n  };\n  getUtTypeIcon = (ut) => {\n    return utTypesIcons[ut.IdTipoUT];\n  };\n  getStateIcon = (ut) => {\n    return workflowIcons[ut.IdTipoSeguimiento];\n  };\n  getUtLink = (ut) => {\n    return `/uts/${ut.IdUT}`;\n  };\n}\n","import {NgModule} from '@angular/core';\nimport {HomeRoutingModule} from './home.routing';\nimport {HomeComponent} from './home.component';\nimport {TuneUpCoreModule} from '@tune-up/core';\nimport {KanbanResumeComponent, UtListComponent} from './components';\n\n@NgModule({\n  imports: [TuneUpCoreModule, HomeRoutingModule],\n  declarations: [\n    HomeComponent,\n    KanbanResumeComponent,\n    UtListComponent,\n  ],\n})\nexport class HomeModule {}\n"],"names":["UtListService","Injectable","http","_http","_url","idActividad","idAgente","idProducto","idVersion","idProyecto","this","get","HttpClient","AgentPicService","idSitio","HomeComponent","Component","utListService","notificationService","allUts","utsToShow","filterUts","idActivity","status","_this","filter","ut","Estado","_utListService","_notificationsService","_getUts","_getUtsSubscription","subscribe","data","error","_this2","closed","unsubscribe","NotificationsService","HomeRoutingModule","NgModule","RouterModule","forChild","path","component","KanbanActivitiesService","KanbanResumeComponent","Input","activitiesService","notificationsService","kanbanActivities","selectedActivity","undefined","_activitiesService","_getKanbanActivities","_getActivitiesSubscription","utTypesIcons","workflowIcons","agentPics","UtListComponent","agentPicService","agentService","getAgentPic","IdAgente","_agentService","getSiteId","_agentPicService","URL","createObjectURL","getUtTypeIcon","IdTipoUT","getStateIcon","IdTipoSeguimiento","getUtLink","IdUT","uts","AgentService","HomeModule","TuneUpCoreModule"],"mappings":"kjFAIaA,KADZC,oDAEaC,8BACLC,MAAQD,OACRE,KAAO,oFAGZC,yDAAc,MACdC,yDAAW,MACXC,yDAAa,MACbC,yDAAY,MACZC,yDAAa,aAENC,KAAKP,MAAMQ,IACbD,KAAKN,qBAAoBC,eAAwBC,iBAAuBC,gBAAwBC,iBAAwBC,wEAZ7GG,cADPZ,WCAAa,KADZZ,sDAEaC,gCACLC,MAAQD,OACRE,KAAO,4EAEVE,EAAUQ,UACLJ,KAAKP,MAAMQ,IAAOD,KAAKN,SAAQE,MAAYQ,gBAClC,gFANAF,cADPC,kZCOAE,KALZC,sBACW,8OAEEhB,0CAMViB,EACAC,yCAJFC,eACAC,kBAsBAC,UAAY,SAACC,EAAYC,KAClBH,UAAYI,EAAKL,OAAOM,OAC3B,SAACC,SAGY,WACXA,EAAGC,SAAWJ,GACC,WAAdG,EAAGC,QAAkC,UAAXJ,UAxB1BK,eAAiBX,OACjBY,sBAAwBX,OACxBY,0FAGAC,oBAAsBrB,KAAKkB,eAAejB,MAAMqB,UACnD,SAACC,KACMd,OAASc,IACTb,UAAYa,GAEnB,SAACC,UACCC,EAAKN,sBAAsBK,MACzB,iCACAA,4DAeDH,sBACJrB,KAAKqB,oBAAoBK,QAC1B1B,KAAKqB,oBAAoBM,mFAjCVrC,EACMsC,wBALZvB,eCHAwB,KAJZC,qBACWC,eAAaC,WAAWC,KAAM,GAAIC,UAAW7B,eAC7C0B,iFCFCI,KADZ5C,8DAEaC,wCACLC,MAAQD,OACRE,KAAO,8FAGZC,yDAAc,MACdC,yDAAW,MACXC,yDAAa,MACbC,yDAAY,MACZC,yDAAa,aAENC,KAAKP,MAAMQ,IACbD,KAAKN,qBAAoBC,eAAwBC,iBAAuBC,gBAAwBC,iBAAwBC,kFAZ7GG,cADPiC,iICOAC,KALZ9B,sBACW,02CAEE6B,OAKXE,yDAECC,EACAC,sCALFC,yBACAC,sBAAmBC,gDAMZC,mBAAqBL,OACrBnB,sBAAwBoB,OACxBK,yIAGAC,2BAA6B7C,KAAK2C,mBAAmB1C,MAAMqB,UAC9D,SAACC,KACMiB,iBAAmBjB,GAE1B,SAACC,UACCV,EAAKK,sBAAsBK,MACzB,6DACAA,6EAIaZ,yDAAa,MAAOC,yDAAS,WAC3CF,UAAUC,EAAYC,0DAGtBgC,6BACJ7C,KAAK6C,2BAA2BnB,QACjC1B,KAAK6C,2BAA2BlB,skBA3BzBhB,mEAEYwB,EACGP,wBANbQ,wQCJPU,KACD,eACA,cACA,sBACA,sBAECC,KACD,mBACA,iBACA,cACA,eACA,iBAECC,KAOOC,KALZ3C,sBACW,s2DAEEH,OAGXkC,eACD,yBACEa,EACA1C,EACA2C,gFAMFC,YAAc,SAACpC,OACLpB,EAAWoB,EAAGqC,YAChBzD,EAAU,KACNQ,EAAUU,EAAKwC,cAAcC,mBAC9BP,EAAUpD,MACR4D,iBAAiBvD,IAAIL,EAAUQ,GAASkB,UAAU,SAACC,KAC5C3B,GAAY6D,IAAIC,gBAAgBnC,KAGvCyB,EAAUpD,IAAa,SAEzB,SAEX+D,cAAgB,SAAC3C,UACR8B,EAAa9B,EAAG4C,gBAEzBC,aAAe,SAAC7C,UACP+B,EAAc/B,EAAG8C,yBAE1BC,UAAY,SAAC/C,iBACIA,EAAGgD,WAxBbR,iBAAmBN,OACnB/B,sBAAwBX,OACxB8C,cAAgBH,0hBARdc,6DAEU9D,EACIyB,uBACPsC,gBALLjB,WCbAkB,KARZrC,qBACWsC,mBAAkBvC,iBAE1BxB,EACA+B,EACAa"}