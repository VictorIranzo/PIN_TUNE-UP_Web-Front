{"version":3,"file":"tune-up.home.umd.min.js","sources":["../src/home.component.js","../src/home.routing.js","../src/components/kanbanresume/kanbanresume.component.js","../src/components/utlist/services/utlist.service.js","../src/components/utlist/services/agentpic.service.js","../src/components/utlist/utlist.component.js","../src/components/utlist/pic.sanitizer.js","../src/home.module.js"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport html from './home.component.html';\r\nimport './home.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-home',\r\n  template: html\r\n})\r\nexport class HomeComponent {}\r\n","import {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {HomeComponent} from './home.component';\n\n@NgModule({\n  imports: [RouterModule.forChild([{path: '', component: HomeComponent}])],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n","import {Component} from '@angular/core';\nimport html from './kanbanresume.component.html';\n// import './kanbanresume.component.css';\n\n@Component({\n  selector: 'tn-kanban-resume',\n  template: html\n})\nexport class KanbanResumeComponent {}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class UtListService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'SeguimientosKanban';\r\n  }\r\n  get(\r\n    idActividad = 'ALL',\r\n    idAgente = 'ALL',\r\n    idProducto = 'ALL',\r\n    idVersion = 'ALL',\r\n    idProyecto = 'ALL'\r\n  ) {\r\n    return this._http.get(\r\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class AgentPicService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Agentes/Imagen';\n  }\n  get(idAgente, idSitio) {\n    return this._http.get(`${this._url}/${idAgente}/${idSitio}`, {\n      responseType: 'blob'\n    });\n  }\n}\n","import {Component} from '@angular/core';\nimport {NotificationsService, AgentService} from '@tune-up/core';\nimport {UtListService, AgentPicService} from './services';\nimport html from './utlist.component.html';\nimport './utlist.component.css';\n\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece'\n};\nconst workflowIcons = {\n  1: 'fa fa-arrow-up',\n  2: 'fa fa-repeat',\n  3: 'fa fa-cog',\n  4: 'fa fa-undo',\n  5: 'fa fa-refresh'\n};\nconst agentPics = {};\n\n@Component({\n  selector: 'tn-ut-list',\n  template: html,\n  providers: [UtListService, AgentPicService]\n})\nexport class UtListComponent {\n  constructor(\n    utListService: UtListService,\n    agentPicService: AgentPicService,\n    notificationService: NotificationsService,\n    agentService: AgentService\n  ) {\n    this._utListService = utListService;\n    this._agentPicService = agentPicService;\n    this._notificationsService = notificationService;\n    this._agentService = agentService;\n    this.uts = [];\n    this._getUts();\n  }\n  _getUts() {\n    this._utListService.get().subscribe(\n      data => {\n        if (!data.Exito) {\n          this._notificationsService.error(\n            'No se pudieron obtener las UTs',\n            data.Mensaje\n          );\n          return;\n        }\n        this.uts = data.Resultado;\n      },\n      error =>\n        this._notificationsService.error(\n          'No se pudieron obtener las UTs',\n          error\n        )\n    );\n  }\n  getAgentPic = ut => {\n    const idAgente = ut.IdAgente;\n    if (idAgente) {\n      const idSitio = this._agentService.getSiteId();\n      if (!agentPics[idAgente]) {\n        this._agentPicService.get(idAgente, idSitio).subscribe(data => {\n          agentPics[idAgente] = URL.createObjectURL(data);\n        });\n      }\n      return agentPics[idAgente];\n    }\n  };\n  getUtTypeIcon = ut => {\n    return utTypesIcons[ut.IdTipoUT];\n  };\n  getStateIcon = ut => {\n    return workflowIcons[ut.IdTipoSeguimiento];\n  };\n  setImgSrc() {\n    // TODO\n    [...document.getElementsByClassName('tn-home__utlist__agent__pic')].map(\n      c => (c.src = c.getAttribute('data-src'))\n    );\n  }\n}\n","import {Pipe} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({name: 'safeHtml'})\nexport class SafeHtml {\n  constructor(sanitizer: DomSanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(html) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(html);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {HomeRoutingModule} from './home.routing';\nimport {HomeComponent} from './home.component';\nimport {TuneUpCoreModule} from '@tune-up/core';\nimport {KanbanResumeComponent, UtListComponent, SafeHtml} from './components';\n\n@NgModule({\n  imports: [TuneUpCoreModule, HomeRoutingModule],\n  declarations: [\n    HomeComponent,\n    KanbanResumeComponent,\n    UtListComponent,\n    SafeHtml\n  ]\n})\nexport class HomeModule {}\n"],"names":["HomeComponent","Component","HomeRoutingModule","NgModule","RouterModule","forChild","path","component","KanbanResumeComponent","UtListService","Injectable","http","_http","_url","idActividad","idAgente","idProducto","idVersion","idProyecto","this","get","HttpClient","AgentPicService","idSitio","utTypesIcons","workflowIcons","agentPics","UtListComponent","utListService","agentPicService","notificationService","agentService","getAgentPic","ut","IdAgente","_this","_agentService","getSiteId","_agentPicService","subscribe","URL","createObjectURL","data","getUtTypeIcon","IdTipoUT","getStateIcon","IdTipoSeguimiento","_utListService","_notificationsService","uts","_getUts","Exito","Resultado","error","Mensaje","_this2","document","getElementsByClassName","map","c","src","getAttribute","NotificationsService","AgentService","SafeHtml","Pipe","name","sanitizer","html","bypassSecurityTrustResourceUrl","DomSanitizer","HomeModule","TuneUpCoreModule"],"mappings":"0gFAQaA,KAJZC,sBACW,wOCGCC,KAJZC,qBACWC,eAAaC,WAAWC,KAAM,GAAIC,UAAWP,eAC7CI,iFCECI,KAJZP,sBACW,yHCDCQ,KADZC,oDAEaC,8BACLC,MAAQD,OACRE,KAAO,oFAGZC,yDAAc,MACdC,yDAAW,MACXC,yDAAa,MACbC,yDAAY,MACZC,yDAAa,aAENC,KAAKP,MAAMQ,IACbD,KAAKN,qBAAoBC,eAAwBC,iBAAuBC,gBAAwBC,iBAAwBC,wEAZ7GG,cADPZ,WCAAa,KADZZ,sDAEaC,gCACLC,MAAQD,OACRE,KAAO,4EAEVE,EAAUQ,UACLJ,KAAKP,MAAMQ,IAAOD,KAAKN,SAAQE,MAAYQ,gBAClC,gFANAF,cADPC,kQCEPE,KACD,eACA,cACA,sBACA,sBAECC,KACD,mBACA,iBACA,cACA,eACA,iBAECC,KAOOC,KALZ1B,sBACW,0jDAEEQ,EAAea,4CAIzBM,EACAC,EACAC,EACAC,2CA4BFC,YAAc,gBACNjB,EAAWkB,EAAGC,YAChBnB,EAAU,KACNQ,EAAUY,EAAKC,cAAcC,mBAC9BX,EAAUX,MACRuB,iBAAiBlB,IAAIL,EAAUQ,GAASgB,UAAU,cAC3CxB,GAAYyB,IAAIC,gBAAgBC,KAGvChB,EAAUX,UAGrB4B,cAAgB,mBACPnB,EAAaS,EAAGW,gBAEzBC,aAAe,mBACNpB,EAAcQ,EAAGa,yBA1CnBC,eAAiBnB,OACjBU,iBAAmBT,OACnBmB,sBAAwBlB,OACxBM,cAAgBL,OAChBkB,YACAC,4FAGAH,eAAe3B,MAAMmB,UACxB,YACOG,EAAKS,QAOLF,IAAMP,EAAKU,YANTJ,sBAAsBK,MACzB,iCACAX,EAAKY,UAMX,mBACEC,EAAKP,sBAAsBK,MACzB,iCACAA,+DAwBFG,SAASC,uBAAuB,iCAAgCC,IAClE,mBAAMC,EAAEC,IAAMD,EAAEE,aAAa,qFApDhBpD,EACEa,EACIwC,uBACPC,gBALLpC,WCtBAqC,KADZC,QAAMC,KAAM,6CAECC,yBACLA,UAAYA,+DAETC,UACDjD,KAAKgD,UAAUE,+BAA+BD,mEAJhCE,gBADZN,WCWAO,KATZpE,qBACWqE,mBAAkBtE,iBAE1BF,EACAQ,EACAmB,EACAqC"}