{"version":3,"file":"tune-up.home.umd.min.js","sources":["../src/components/utlist/services/utlist.service.js","../src/components/utlist/services/agentpic.service.js","../src/home.component.js","../src/home.routing.js","../src/components/kanbanresume/services/kanbanactivities.service.js","../src/components/kanbanresume/kanbanresume.component.js","../src/components/utlist/utlist.component.js","../src/components/utlist/pic.sanitizer.js","../src/home.module.js"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class UtListService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'SeguimientosKanban';\r\n  }\r\n  get(\r\n    idActividad = 'ALL',\r\n    idAgente = 'ALL',\r\n    idProducto = 'ALL',\r\n    idVersion = 'ALL',\r\n    idProyecto = 'ALL'\r\n  ) {\r\n    return this._http.get(\r\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AgentPicService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Agentes/Imagen';\r\n  }\r\n  get(idAgente, idSitio) {\r\n    return this._http.get(`${this._url}/${idAgente}/${idSitio}`, {\r\n      responseType: 'blob'\r\n    });\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {UtListService} from './components/utlist/services';\nimport {NotificationsService} from '@tune-up/core';\nimport html from './home.component.html';\nimport './home.component.css';\n\n@Component({\n  selector: 'tn-home',\n  template: html,\n  providers: [UtListService]\n})\nexport class HomeComponent {\n  constructor(\n    utListService: UtListService,\n    notificationService: NotificationsService\n  ) {\n    this._utListService = utListService;\n    this._notificationsService = notificationService;\n    this.allUts = [];\n    this.utsToShow = [];\n    this._getUts();\n  }\n  _getUts() {\n    this._utListService.get().subscribe(\n      data => {\n        if (!data.Exito) {\n          this._notificationsService.error(\n            'No se pudieron obtener las UTs',\n            data.Mensaje\n          );\n          return;\n        }\n        this.allUts = data.Resultado;\n        this.utsToShow = data.Resultado;\n      },\n      error =>\n        this._notificationsService.error(\n          'No se pudieron obtener las UTs',\n          error\n        )\n    );\n  }\n  filterUts = (idActivity, status) => {\n    this.utsToShow = this.allUts.filter(\n      ut =>\n        // (idActivity === 'ALL' || ut.IdActividad === idActivity) &&\n        status === 'ALL' || ut.Estado === status\n    );\n  };\n}\n","import {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {HomeComponent} from './home.component';\n\n@NgModule({\n  imports: [RouterModule.forChild([{path: '', component: HomeComponent}])],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class KanbanActivitiesService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'ActividadesKanban2';\r\n  }\r\n  get(\r\n    idActividad = 'ALL',\r\n    idAgente = 'ALL',\r\n    idProducto = 'ALL',\r\n    idVersion = 'ALL',\r\n    idProyecto = 'ALL'\r\n  ) {\r\n    return this._http.get(\r\n      `${this._url}?idActividad=${idActividad}&idAgente=${idAgente}&idProducto=${idProducto}&idVersion=${idVersion}&idProyecto=${idProyecto}`\r\n    );\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService} from '@tune-up/core';\nimport {KanbanActivitiesService} from './services';\n\nimport html from './kanbanresume.component.html';\nimport './kanbanresume.component.css';\n\n@Component({\n  selector: 'tn-kanban-resume',\n  template: html,\n  providers: [KanbanActivitiesService]\n})\nexport class KanbanResumeComponent {\n  kanbanActivities = [];\n  selectedActivity = undefined;\n  @Input() filterUts;\n  constructor(\n    activitiesService: KanbanActivitiesService,\n    notificationsService: NotificationsService\n  ) {\n    this._activitiesService = activitiesService;\n    this._notificationsService = notificationsService;\n    this._getKanbanActivities();\n  }\n\n  _getKanbanActivities() {\n    this._activitiesService.get().subscribe(\n      data => {\n        if (!data.Exito) {\n          this._notificationsService.error(\n            'No se pudieron obtener las actividades del Kanban Resumido',\n            data.Mensaje\n          );\n          return;\n        }\n        this.kanbanActivities = data.Resultado;\n      },\n      error =>\n        this._notificationsService.error(\n          'No se pudieron obtener las actividades del Kanban Resumido',\n          error\n        )\n    );\n  }\n\n  filterKanbanActivies(idActivity = 'ALL', status = 'ALL') {\n    this.filterUts(idActivity, status);\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {NotificationsService, AgentService} from '@tune-up/core';\nimport {AgentPicService} from './services';\nimport html from './utlist.component.html';\nimport './utlist.component.css';\n\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece'\n};\nconst workflowIcons = {\n  1: 'fa fa-arrow-up',\n  2: 'fa fa-repeat',\n  3: 'fa fa-cog',\n  4: 'fa fa-undo',\n  5: 'fa fa-refresh'\n};\nconst agentPics = {};\n\n@Component({\n  selector: 'tn-ut-list',\n  template: html,\n  providers: [AgentPicService]\n})\nexport class UtListComponent {\n  @Input() uts;\n  constructor(\n    agentPicService: AgentPicService,\n    notificationService: NotificationsService,\n    agentService: AgentService\n  ) {\n    this._agentPicService = agentPicService;\n    this._notificationsService = notificationService;\n    this._agentService = agentService;\n  }\n  getAgentPic = ut => {\n    const idAgente = ut.IdAgente;\n    if (idAgente) {\n      const idSitio = this._agentService.getSiteId();\n      if (!agentPics[idAgente]) {\n        this._agentPicService.get(idAgente, idSitio).subscribe(data => {\n          agentPics[idAgente] = URL.createObjectURL(data);\n        });\n      }\n      return agentPics[idAgente];\n    }\n  };\n  getUtTypeIcon = ut => {\n    return utTypesIcons[ut.IdTipoUT];\n  };\n  getStateIcon = ut => {\n    return workflowIcons[ut.IdTipoSeguimiento];\n  };\n  getUtLink = ut => {\n    return `uts/${ut.id}`;\n  };\n  setImgSrc() {\n    // TODO\n    [...document.getElementsByClassName('tn-home__utlist__agent__pic')].map(\n      c => (c.src = c.getAttribute('data-src'))\n    );\n  }\n}\n","import {Pipe} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({name: 'safeHtml'})\r\nexport class SafeHtml {\r\n  constructor(sanitizer: DomSanitizer) {\r\n    this.sanitizer = sanitizer;\r\n  }\r\n  transform(html) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(html);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {HomeRoutingModule} from './home.routing';\nimport {HomeComponent} from './home.component';\nimport {TuneUpCoreModule} from '@tune-up/core';\nimport {KanbanResumeComponent, UtListComponent, SafeHtml} from './components';\n\n@NgModule({\n  imports: [TuneUpCoreModule, HomeRoutingModule],\n  declarations: [\n    HomeComponent,\n    KanbanResumeComponent,\n    UtListComponent,\n    SafeHtml\n  ]\n})\nexport class HomeModule {}\n"],"names":["UtListService","Injectable","http","_http","_url","idActividad","idAgente","idProducto","idVersion","idProyecto","this","get","HttpClient","AgentPicService","idSitio","HomeComponent","Component","utListService","notificationService","filterUts","idActivity","status","utsToShow","_this","allUts","filter","ut","Estado","_utListService","_notificationsService","_getUts","subscribe","data","Exito","Resultado","error","Mensaje","_this2","NotificationsService","HomeRoutingModule","NgModule","RouterModule","forChild","path","component","KanbanActivitiesService","KanbanResumeComponent","Input","activitiesService","notificationsService","kanbanActivities","selectedActivity","undefined","_activitiesService","_getKanbanActivities","utTypesIcons","workflowIcons","agentPics","UtListComponent","agentPicService","agentService","getAgentPic","IdAgente","_agentService","getSiteId","_agentPicService","URL","createObjectURL","getUtTypeIcon","IdTipoUT","getStateIcon","IdTipoSeguimiento","getUtLink","id","document","getElementsByClassName","map","c","src","getAttribute","uts","AgentService","SafeHtml","Pipe","name","sanitizer","html","bypassSecurityTrustResourceUrl","DomSanitizer","HomeModule","TuneUpCoreModule"],"mappings":"gxFAIaA,KADZC,oDAEaC,8BACLC,MAAQD,OACRE,KAAO,oFAGZC,yDAAc,MACdC,yDAAW,MACXC,yDAAa,MACbC,yDAAY,MACZC,yDAAa,aAENC,KAAKP,MAAMQ,IACbD,KAAKN,qBAAoBC,eAAwBC,iBAAuBC,gBAAwBC,iBAAwBC,wEAZ7GG,cADPZ,WCAAa,KADZZ,sDAEaC,gCACLC,MAAQD,OACRE,KAAO,4EAEVE,EAAUQ,UACLJ,KAAKP,MAAMQ,IAAOD,KAAKN,SAAQE,MAAYQ,gBAClC,gFANAF,cADPC,gNCOAE,KALZC,sBACW,yOAEEhB,0CAIViB,EACAC,yCA4BFC,UAAY,SAACC,EAAYC,KAClBC,UAAYC,EAAKC,OAAOC,OAC3B,kBAEa,WAASC,EAAGC,SAAWN,UA9BjCO,eAAiBX,OACjBY,sBAAwBX,OACxBM,eACAF,kBACAQ,0FAGAF,eAAejB,MAAMoB,UACxB,YACOC,EAAKC,SAOLT,OAASQ,EAAKE,YACdZ,UAAYU,EAAKE,aAPfL,sBAAsBM,MACzB,iCACAH,EAAKI,UAOX,mBACEC,EAAKR,sBAAsBM,MACzB,iCACAA,0EAzBSnC,EACMsC,wBAHZvB,eCHAwB,KAJZC,qBACWC,eAAaC,WAAWC,KAAM,GAAIC,UAAW7B,eAC7C0B,iFCFCI,KADZ5C,8DAEaC,wCACLC,MAAQD,OACRE,KAAO,8FAGZC,yDAAc,MACdC,yDAAW,MACXC,yDAAa,MACbC,yDAAY,MACZC,yDAAa,aAENC,KAAKP,MAAMQ,IACbD,KAAKN,qBAAoBC,eAAwBC,iBAAuBC,gBAAwBC,iBAAwBC,kFAZ7GG,cADPiC,iICQAC,KALZ9B,sBACW,uxCAEE6B,OAKXE,yDAECC,EACAC,sCALFC,yBACAC,sBAAmBC,gDAMZC,mBAAqBL,OACrBnB,sBAAwBoB,OACxBK,yIAIAD,mBAAmB1C,MAAMoB,UAC5B,YACOC,EAAKC,QAOLiB,iBAAmBlB,EAAKE,YANtBL,sBAAsBM,MACzB,6DACAH,EAAKI,UAMX,mBACEb,EAAKM,sBAAsBM,MACzB,6DACAA,6EAKaf,yDAAa,MAAOC,yDAAS,WAC3CF,UAAUC,EAAYC,2jBA/BpBF,mEAEY0B,EACGP,wBANbQ,wQCNPS,KACD,eACA,cACA,sBACA,sBAECC,KACD,mBACA,iBACA,cACA,eACA,iBAECC,KAOOC,KALZ1C,sBACW,ytDAEEH,OAGXkC,mDAECY,EACAzC,EACA0C,gFAMFC,YAAc,gBACNvD,EAAWoB,EAAGoC,YAChBxD,EAAU,KACNQ,EAAUS,EAAKwC,cAAcC,mBAC9BP,EAAUnD,MACR2D,iBAAiBtD,IAAIL,EAAUQ,GAASiB,UAAU,cAC3CzB,GAAY4D,IAAIC,gBAAgBnC,KAGvCyB,EAAUnD,UAGrB8D,cAAgB,mBACPb,EAAa7B,EAAG2C,gBAEzBC,aAAe,mBACNd,EAAc9B,EAAG6C,yBAE1BC,UAAY,yBACI9C,EAAG+C,SAvBZR,iBAAmBN,OACnB9B,sBAAwBX,OACxB6C,cAAgBH,oFAyBjBc,SAASC,uBAAuB,iCAAgCC,IAClE,mBAAMC,EAAEC,IAAMD,EAAEE,aAAa,4jBAlCxBC,6DAEUnE,EACIyB,uBACP2C,gBALLvB,WCtBAwB,KADZC,QAAMC,KAAM,6CAECC,yBACLA,UAAYA,+DAETC,UACD5E,KAAK2E,UAAUE,+BAA+BD,mEAJhCE,gBADZN,WCWAO,KATZjD,qBACWkD,mBAAkBnD,iBAE1BxB,EACA+B,EACAY,EACAwB"}