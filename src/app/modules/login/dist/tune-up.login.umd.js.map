{"version":3,"file":"tune-up.login.umd.js","sources":["../src/config/validations.js","../src/config/config.js","../src/services/login.service.js","../src/services/sites.service.js","../src/login.component.js","../src/login.routing.js","../src/components/siteselector/siteselector.component.js","../src/login.module.js"],"sourcesContent":["export const validations = {\r\n  login: {\r\n    email: [\r\n      {\r\n        isEmail: {\r\n          message: 'Debe ser un email válido'\r\n        }\r\n      },\r\n      {\r\n        required: {\r\n          message: 'El email es requerido'\r\n        }\r\n      }\r\n    ],\r\n    password: [\r\n      {\r\n        required: {\r\n          message: 'La contraseña es requerida'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import {configService} from '@tune-up/core';\r\nimport {validations} from './validations';\r\n\r\nconfigService.addValidations(validations);\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Login2';\r\n  }\r\n  login(model) {\r\n    return this._http.post(this._url, model);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class SitesService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Sitios';\r\n  }\r\n  get(email) {\r\n    return this._http.get(`${this._url}\\\\${email}`);\r\n  }\r\n}\r\n","import {Router, ActivatedRoute} from '@angular/router';\nimport {Component, ViewChild} from '@angular/core';\nimport {AuthService, AgentService, AboutService} from '@tune-up/app';\nimport {NotificationsService} from '@tune-up/core';\nimport {LoginService, SitesService} from './services';\nimport html from './login.component.html';\nimport './login.component.css';\n\n@Component({\n  selector: 'tn-login',\n  template: html,\n  providers: [LoginService, SitesService]\n})\nexport class LoginComponent {\n  model = {\n    email: undefined,\n    password: undefined,\n    idsitio: undefined\n  };\n  @ViewChild('emailCtrl') emailCtrl;\n  constructor(\n    route: ActivatedRoute,\n    router: Router,\n    loginService: LoginService,\n    sitesService: SitesService,\n    authService: AuthService,\n    agentService: AgentService,\n    aboutService: AboutService,\n    notificationsService: NotificationsService\n  ) {\n    // TODO: change to home when implemented\n    this._returnUrl = '/example';\n    this.sites = [];\n    this._route = route;\n    this._router = router;\n    this._loginService = loginService;\n    this._sitesService = sitesService;\n    this._authService = authService;\n    this._aboutService = aboutService;\n    this._agentService = agentService;\n    this._notificationsService = notificationsService;\n  }\n  _checkLogedIn() {\n    if (this._authService.getToken()) {\n      this._redirect();\n    }\n  }\n  _redirect() {\n    this._router.navigateByUrl(this._returnUrl);\n  }\n  ngOnInit() {\n    const paramsReturnUrl = this._route.snapshot.queryParams.returnUrl;\n    this._returnUrl =\n      !paramsReturnUrl || paramsReturnUrl === '/home'\n        ? this._returnUrl\n        : paramsReturnUrl;\n\n    this._checkLogedIn();\n  }\n  onEmailFocusLost = () => {\n    this.model.email &&\n      this.emailCtrl.valid &&\n      this._sitesService.get(this.model.email).subscribe(\n        data => {\n          const {Resultado} = data;\n          // TODO: refactor when backend api is refactored\n          if (Resultado.length === 0) {\n            this._notificationsService.error(\n              'No hay sitios disponibles',\n              'No existen sitios asociados con este email.'\n            );\n          } else {\n            this._parseSites(Resultado);\n          }\n        },\n        error => {\n          this._notificationsService.error('Error', error.Message);\n        }\n      );\n  };\n  _parseSites(sites) {\n    this.sites = sites.map(site => {\n      return {label: `${site.Id}: ${site.Nombre} `, value: site.Id};\n    });\n    this.model.idsitio = sites[0] && sites[0].Id;\n  }\n  setIdSitio = idSitio => {\n    this.model.idsitio = idSitio;\n  };\n  showSelector = () => {\n    return this.sites.length > 1;\n  };\n  login = () => {\n    this._loginService.login(this.model).subscribe(\n      data => {\n        // TODO: refactor when backend api is refactored\n        if (!data.Exito) {\n          this._notificationsService.error('Error de login', data.Mensaje);\n          return;\n        }\n        let {Token, Agente, Configuracion} = data.Resultado;\n        this._authService.setToken(Token);\n        this._agentService.agent = Agente;\n        this._aboutService.about = Configuracion;\n        this._redirect();\n      },\n      error => {\n        this._notificationsService.error('Error de login', error.Message);\n      }\n    );\n  };\n}\n","import {RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {LoginComponent} from './login.component';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([{path: '', component: LoginComponent}])],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","import {Component, Input, Output, EventEmitter} from '@angular/core';\r\nimport html from './siteselector.component.html';\r\n\r\n@Component({\r\n  selector: 'tn-site-selector',\r\n  template: html\r\n})\r\nexport class SiteSelectorComponent {\r\n  @Input() sites = [];\r\n  @Output() onSiteSelected = new EventEmitter();\r\n  selectSite = event => {\r\n    this.onSiteSelected.emit(event.value);\r\n  };\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {LoginRoutingModule} from './login.routing';\r\nimport {LoginComponent} from './login.component';\r\nimport {SiteSelectorComponent} from './components';\r\nimport {TuneUpCoreModule} from '@tune-up/core';\r\n\r\n@NgModule({\r\n  imports: [TuneUpCoreModule, LoginRoutingModule],\r\n  declarations: [LoginComponent, SiteSelectorComponent]\r\n})\r\nexport class LoginModule {}\r\n"],"names":["validations","configService","addValidations","LoginService","Injectable","http","_http","_url","model","post","HttpClient","SitesService","email","get","LoginComponent","Component","html","ViewChild","route","router","loginService","sitesService","authService","agentService","aboutService","notificationsService","undefined","onEmailFocusLost","emailCtrl","valid","_sitesService","subscribe","Resultado","data","length","_notificationsService","error","_parseSites","Message","setIdSitio","idsitio","idSitio","showSelector","sites","login","_loginService","Exito","Mensaje","Token","Agente","Configuracion","_authService","setToken","_agentService","agent","_aboutService","about","_redirect","_returnUrl","_route","_router","getToken","navigateByUrl","paramsReturnUrl","snapshot","queryParams","returnUrl","_checkLogedIn","map","label","site","Id","Nombre","value","ActivatedRoute","Router","AuthService","AgentService","AboutService","NotificationsService","LoginRoutingModule","NgModule","RouterModule","forChild","path","component","SiteSelectorComponent","Input","Output","selectSite","onSiteSelected","emit","event","EventEmitter","LoginModule","TuneUpCoreModule"],"mappings":"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"}