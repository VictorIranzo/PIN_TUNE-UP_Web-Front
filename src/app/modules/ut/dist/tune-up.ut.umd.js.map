{"version":3,"file":"tune-up.ut.umd.js","sources":["../src/ut.component.js","../src/components/details/services/details.service.js","../src/components/details/details.component.js","../src/components/nuevaut/services/createUT.service.js","../src/components/nuevaut/services/getProductos.service.js","../src/components/nuevaut/services/getProyectos.service.js","../src/components/nuevaut/services/getSprintsProducto.service.js","../src/components/nuevaut/services/getTiposUTProducto.service.js","../src/components/nuevaut/services/getWorkflows.service.js","../src/components/nuevaut/nuevaut.component.js","../src/components/followups/services/followups.service.js","../src/components/followups/services/getAgentesProducto.service.js","../src/components/followups/followups.component.js","../src/components/utsearch/services/utsearch.service.js","../src/components/utsearch/services/activities.service.js","../src/components/utsearch/utsearch.component.js","../src/ut.routing.js","../src/ut.module.js"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport html from './ut.component.html';\r\nimport './ut.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-ut',\r\n  template: html,\r\n})\r\nexport class UtComponent {}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class DetailsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._urlUT = 'FichaUT2';\r\n    this._urlProductos = 'Productos2';\r\n    this._urlUTs = 'UTs2';\r\n  }\r\n\r\n  getUt(id) {\r\n    return this._http.get(`${this._urlUT}/${id}`);\r\n  }\r\n\r\n  getProductosDisponibles() {\r\n    return this._http.get(`${this._urlProductos}`);\r\n  }\r\n\r\n  submitChangesDetails(model) {\r\n    return this._http.post(this._urlUTs, model);\r\n  }\r\n}\r\n\r\n\r\n","import {Component} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DetailsService} from './services';\nimport {NotificationsService} from '@tune-up/core';\nimport html from './details.component.html';\nimport './details.component.css';\n\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\n\n@Component({\n  selector: 'tn-ut-details',\n  template: html,\n})\nexport class DetailsComponent {\n  editingMode = false;\n  model = {IdUT: undefined, Nombre: undefined, Orden: undefined,\n          IdProducto: undefined, IdVersion: undefined, IdWorkflow: undefined,\n          IdTipoUT: undefined, IdProyecto: undefined, Descripcion: undefined};\n  ut;\n\n  // TODO: utiliza destructuring para que quede más claro, ej\n  // const {Nombre, Orden} = data.UT; const {listaVersiones,...} = data\n\n  constructor(route: ActivatedRoute,\n              router: Router,\n              detailsService: DetailsService,\n              notificationsService: NotificationsService\n             ) {\n        this._route = route;\n        this._router = router;\n        this._detailsService = detailsService;\n        this._notificationsService = notificationsService;\n\n        this.model.IdUT= parseInt(this._route.params._value.id);\n\n        this._getProductosDisponibles = this._detailsService.getProductosDisponibles().subscribe((data) => {\n          this._parseProductos(data);\n        });\n\n        this._getUt = this._detailsService.getUt(this.model.IdUT).subscribe((data) => {\n              if (data.UT == undefined) {\n                this.showErrorAndBackHome();\n              } else {\n                this.ut = data;\n                this.model.Nombre = data.UT.Nombre;\n                this.model.Orden = data.UT.Orden;\n                this._parseSprints(data.listaVersionesUT);\n                this._parseWorkflows(data.listaWorkflowsDisponibles);\n                this._parseTipos(data.listaTiposUT);\n                this._parseProyectos(data.listaProyectos);\n                this.model.Descripcion = data.UT.Definicion || data.UT.Descripcion;\n                this._mapSelected(data, this.model);\n              }\n            },\n            (error) => {\n              this.showErrorAndBackHome();\n            }\n          );\n  }\n  onEditar() {\n    this.editingMode = true;\n  }\n\n  onCancelar() {\n    this.editingMode = false;\n\n    this.model.IdUT = this.ut.UT.IdUT;\n    this.model.Nombre = this.ut.UT.Nombre;\n    this.model.Orden = this.ut.UT.Orden;\n    this.model.IdProducto = this.ut.UT.IdProducto;\n    this.model.IdVersion = this.ut.UT.IdVersion;\n    this.model.IdWorkflow = this.ut.UT.IdWorkflow;\n    this.model.IdTipoUT = this.ut.UT.IdTipoUT;\n    this.model.IdProyecto = this.ut.UT.IdProyecto;\n    this.model.Descripcion = this.ut.UT.Definicion || this.ut.UT.Descripcion;\n  }\n\n  onGuardar = () => {\n   this._saveDetailsSubscription = this._detailsService.submitChangesDetails(this.model).subscribe(\n      (data) => {\n        this.editingMode = false;\n\n        // TODO: The service must return the UT modified. Meanwhile...\n        this.ut.UT.IdUT = this.model.IdUT;\n        this.ut.UT.Nombre = this.model.Nombre;\n        this.ut.UT.Orden = this.model.Orden;\n        this.ut.UT.IdProducto = this.model.IdProducto;\n        this.ut.UT.IdVersion = this.model.IdVersion;\n        this.ut.UT.IdWorkflow = this.model.IdWorkflow;\n        this.ut.UT.IdTipoUT = this.model.IdTipoUT;\n        this.ut.UT.IdProyecto = this.model.IdProyecto;\n        this.ut.UT.Descripcion = this.model.Descripcion;\n        this.ut.UT.Definicion = this.model.Descripcion;\n      },\n      (error) => {\n        this._notificationsService.error('Error al guardar los cambios', error);\n      }\n    );\n  };\n\n  // TODO: var a = 'hola', label: a === label: `${a}`\n  // las template strings solo valen si vas a escribir más.\n  // TODO, en vez de almacenar todo esto en this, llama a las funciones desde el html y ya esta,\n  // que solo se van a llamar una vez\n\n  _parseSprints(sprints) {\n    this.sprintsDisponibles = sprints.map((sprint) => {\n      return {label: sprint.Nombre, value: sprint.IdVersion};\n    });\n    this.sprintsDisponibles.push({label: 'Backlog', value: null});\n  }\n  _parseWorkflows(wfs) {\n    this.workflowsDisponibles = wfs.map((wf) => {\n      return {label: `${wf.Nombre}`, value: wf.IdWorkflow};\n    });\n  }\n  _parseTipos(tipos) {\n    this.tiposDisponibles = tipos.map((tipo) => {\n      return {label: `${tipo.Nombre}`, value: tipo.IdTipoUT};\n    });\n  }\n  _parseProyectos(proyectos) {\n    this.proyectosDisponibles = proyectos.map((proy) => {\n      return {label: `${proy.Nombre}`, value: proy.IdProyecto};\n    });\n    this.proyectosDisponibles.push({label: '<Sin Proyecto>', value: null});\n  }\n  _parseProductos(productos) {\n    this.productosDisponibles = productos.map((prod) => {\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\n    });\n  }\n\n  _mapSelected(ut, model) {\n    this.sprintsDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdVersion) model.IdVersion = element.value;\n    });\n    this.workflowsDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdWorkflow) model.IdWorkflow = element.value;\n    });\n    this.tiposDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdTipoUT) model.IdTipoUT = element.value;\n    });\n    this.proyectosDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdProyecto) model.IdProyecto = element.value;\n    });\n    this.productosDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdProducto) model.IdProducto = element.value;\n    });\n  }\n\n  getUtTypeIcon = (tipo) => {\n    return utTypesIcons[tipo];\n  };\n\n  showErrorAndBackHome() {\n    this._notificationsService.error('Error al obtener la UT', 'UT no encontrada');\n    this._router.navigateByUrl('/home');\n  }\n\n  ngOnDestroy() {\n    this._saveDetailsSubscription &&\n    !this._saveDetailsSubscription.closed &&\n    this._saveDetailsSubscription.unsubscribe();\n\n    this._getUtSub &&\n    !this._getUtSub.closed &&\n    this._getUtSub.unsubscribe();\n\n    this._getProductosDisponibles &&\n    !this._getProductosDisponibles.closed &&\n    this._getProductosDisponibles.unsubscribe();\n\n    this._getUt &&\n    !this._getUt.closed &&\n    this._getUt.unsubscribe();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CreateUTService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'UTs/Crear';\r\n  }\r\n  put(newUT) {\r\n    return this._http.put(this._url, newUT);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProductosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos2';\r\n  }\r\n  get() {\r\n    return this._http.get(\r\n      `${this._url}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProyectosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}/Proyectos`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetSprintsProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Sprints2';\r\n  }\r\n  get(idProducto) { \r\n    return this._http.get(`${this._url}/${idProducto}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetTiposUTProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'TiposUT2';\r\n  }\r\n  get(idProducto) { \r\n    return this._http.get(`${this._url}/${idProducto}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetWorkflowsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Workflows';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}`\r\n    );\r\n  }\r\n}\r\n\r\n","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NotificationsService} from '@tune-up/core';\nimport {CreateUTService, GetProductosService, GetProyectosService, GetSprintsProductoService, GetTiposUTProductoService, GetWorkflowsService} from './services';\nimport html from './nuevaut.component.html';\nimport './nuevaut.component.css';\n\nconst proyectosCache = [];\nconst sprintsCache = [];\nconst tiposUTCache = [];\nconst workflowsCache = [];\n\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\n\n@Component({\n  selector: 'tn-ut-nuevaut',\n  template: html,\n  providers: [\n    CreateUTService,\n    GetWorkflowsService,\n  ],\n})\nexport class NuevaUTComponent {\n  ut = {\n    Nombre: null,\n    IdVersion: null,\n    IdProducto: null,\n    IdWorkflow: null,\n    IdTipoUT: null,\n    IdProyecto: null,\n  };\n\n\n  constructor(\n    createUTService: CreateUTService,\n    getProductosService : GetProductosService,\n    getProyectosService : GetProyectosService,\n    getSprintsProductoService : GetSprintsProductoService,\n    getTiposUTService : GetTiposUTProductoService,\n    getWorkflowsService : GetWorkflowsService,\n    notificationsService: NotificationsService,\n    router : Router\n  ) {\n    this._createUTService = createUTService;\n    this._getProductosService = getProductosService;\n    this._getProyectosService = getProyectosService;\n    this._getSprintsService = getSprintsProductoService;\n    this._getWorkflowsService = getWorkflowsService;\n    this._getTiposUTService = getTiposUTService;\n    this._notificationService = notificationsService;\n    this._router = router;\n    this.productos = [];\n    this.proyectos = [];\n    this.sprints = [];\n    this.tiposUT = [];\n    this.workflows = [];\n  }\n\n  ngOnInit() {\n    this._getProductos();\n  }\n\n  _getProductos() {\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\n      (data) => {\n        this.productos = this._parseProductos(data);\n        if (this.productos.length > 0) {\n          this.ut.IdProducto = this.productos[0].value;\n          this._getDatosProducto(this.productos[0].value);\n        }\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener los productos',\n          error\n        )\n    );\n  }\n\n  _parseProductos(productos) {\n    return productos.map((prod) => {\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\n    });\n  }\n\n  _getDatosProducto(idProducto) {\n    this.workflows = this._getWorkflows(idProducto);\n    this.proyectos = this._getProyectos(idProducto);\n    this.sprints = this._getSprints(idProducto);\n    this.tiposUT = this._getTiposUT(idProducto);\n\n    this._seleccionarValoresPorDefecto();\n  }\n\n  _getWorkflows(idProducto) {\n    if (!workflowsCache[idProducto]) {\n      this._getWorkflowsSubscription =\n        this._getWorkflowsService.get(idProducto).subscribe(\n          (data) => {\n            workflowsCache[idProducto] = this._parseWorkflows(data);\n            this.workflows = workflowsCache[idProducto];\n            this.ut.IdWorkflow = this.workflows[0]? this.workflows[0].value : null;\n          }\n        );\n    }\n    return workflowsCache[idProducto];\n  }\n\n  _parseWorkflows(workflows) {\n    return workflows.map((wf) => {\n      return {label: `${wf.Nombre}`, value: wf.IdWorkflow};\n    });\n  }\n\n  _getProyectos(idProducto) {\n    if (!proyectosCache[idProducto]) {\n      this._getProyectoSubscription =\n      this._getProyectosService.get(idProducto).subscribe(\n        (data) => {\n          proyectosCache[idProducto] = this._parseProyectos(data);\n          this.proyectos = proyectosCache[idProducto];\n          this.ut.IdProyecto = this.proyectos[0]? this.proyectos[0].value : null;\n        },\n        (error) =>\n          this._notificationService.error(\n            'No se han podido obtener los proyectos del producto',\n          error\n        ));\n    }\n    return proyectosCache[idProducto];\n  }\n\n  _parseProyectos(proyectos) {\n    let proyectosMapped = proyectos.map((pr) => {\n      return {label: `${pr.Nombre}`, value: pr.IdProyecto};\n    });\n    proyectosMapped.push({label: '<Sin Proyecto>', value: null});\n    return proyectosMapped;\n  }\n\n  _getTiposUT(idProducto) {\n    if (!tiposUTCache[idProducto]) {\n      this._getTiposUTSubscription =\n        this._getTiposUTService.get(idProducto).subscribe(\n          (data) => {\n            tiposUTCache[idProducto] = this._parseTiposUT(data);\n            this.tiposUT = tiposUTCache[idProducto];\n            this.ut.IdTipoUT = this.tiposUT[0]? this.tiposUT[0].value : null;\n          },\n          (error) =>\n            this._notificationService.error(\n              'No se han podido obtener los tipos de UT',\n              error\n        ));\n    }\n    return tiposUTCache[idProducto];\n  }\n\n  _parseTiposUT(tipos) {\n    return tipos.map((t) => {\n      return {label: `${t.Nombre}`, value: t.IdTipoUT};\n    });\n  }\n\n  _getSprints(idProducto) {\n    if (!sprintsCache[idProducto]) {\n      this._getSprintsSubscription =\n       this._getSprintsService.get(idProducto).subscribe(\n        (data) => {\n          sprintsCache[idProducto] = this._parseSprints(data);\n          this.sprints = sprintsCache[idProducto];\n          this.ut.IdVersion = this.sprints[0]? this.sprints[0].value : null;\n        },\n        (error) => {\n          this._notificationService.error(\n            'No se han podido obtener los Sprints del producto',\n            error\n          );\n        }\n      );\n    }\n    return sprintsCache[idProducto];\n  }\n\n  _parseSprints(sprints) {\n    return sprints.map((sp) => {\n      return {label: `${sp.Nombre}`, value: sp.IdVersion};\n    });\n  }\n\n  _seleccionarValoresPorDefecto() {\n    this.ut.IdWorkflow = this.workflows && this.workflows[0]? this.workflows[0].value : null;\n    this.ut.IdProyecto = this.proyectos && this.proyectos[0]? this.proyectos[0].value : null;\n    this.ut.IdVersion = this.IdVersion && this.sprints[0]? this.sprints[0].value : null;\n    this.ut.IdTipoUT = this.tiposUT && this.tiposUT[0]? this.tiposUT[0].value : null;\n  }\n\n  onProductChanged(idNuevoProducto) {\n    this._getDatosProducto(idNuevoProducto);\n  }\n\n  onCrearNuevaUTClick() {\n    this._crearUTSubscription =\n    this._createUTService.put(this.ut).subscribe(\n      (data) => {\n          this._notificationService.success(\n            'La UT se ha creado con exito',\n            `UT: ${this.ut.Nombre}`\n          );\n          this._clearFields();\n      },\n      (error) => {\n        this._notificationService.error(\n          'No se pudo crear la UT especficada',\n          error\n        );\n      }\n    );\n  }\n\n  _clearFields() {\n    this.ut.Nombre = '';\n  }\n\n  onCrearYAbrirUTClick() {\n    this._crearUTSubscription =\n    this._createUTService.put(this.ut).subscribe(\n      (data) => {\n        let that = this;\n        setTimeout(function() {\n          that._redirect(data);\n        }, 3000);\n      },\n      (error) => {\n        this._notificationService.error(\n          'No se pudo crear la UT especficada',\n          error\n        );\n      }\n    );\n  }\n  _redirect(idUT) {\n    this._router.navigateByUrl(`/uts/${idUT}`);\n  }\n\n  getUtTypeIcon = (tipo) => {\n    return utTypesIcons[tipo];\n  };\n\n  isNombreEmpty() {\n    return this.ut.Nombre == null || this.ut.Nombre.length === 0;\n  }\n\n  ngOnDestroy() {\n    this._crearUTSubscription &&\n      !this._crearUTSubscription.closed &&\n      this._crearUTSubscription.unsubscribe();\n\n    this._getProductosSubscription &&\n      !this._getProductosSubscription.closed &&\n      this._getProductosSubscription.unsubscribe();\n\n    this._getProyectoSubscription &&\n      !this._getProyectoSubscription.closed &&\n      this._getProyectoSubscription.unsubscribe();\n\n    this._getSprintsSubscription &&\n      !this._getSprintsSubscription.closed &&\n      this._getSprintsSubscription.unsubscribe();\n\n    this._getTiposUTSubscription &&\n      !this._getTiposUTSubscription.closed &&\n      this._getTiposUTSubscription.unsubscribe();\n\n    this._getWorkflowsSubscription &&\n      !this._getWorkflowsSubscription.closed &&\n      this._getWorkflowsSubscription.unsubscribe();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class FollowupsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n  }\r\n  getSeguimientos(idUt) {\r\n    return this._http.get(`UTs/${idUt}/Seguimientos`);\r\n  }\r\n  pausarSeguimiento(idSeguimiento) {\r\n    return this._http.post(\r\n      `FinalizarRegistroTiempo?idSeguimiento=${idSeguimiento}`\r\n    );\r\n  }\r\n  empezarSeguimiento(idSeguimiento) {\r\n    return this._http.post(\r\n      `EmpezarRegistroTiempo?idSeguimiento=${idSeguimiento}`\r\n    );\r\n  }\r\n  finalizarSeguimiento(idSeguimiento, adelante = true) {\r\n    return this._http.post(\r\n      `FinalizarSeguimiento?idSeguimiento=${idSeguimiento}&adelante=${adelante}&avisarEmail=false`\r\n    );\r\n  }\r\n  asignarAgente(idSeguimiento, idAgente) {\r\n    return this._http.post(\r\n      `Seguimientos/${idSeguimiento}/AsignarAgente/${idAgente}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetAgentesProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n  }\r\n  getAgentes(idProducto) { \r\n    return this._http.get(`Productos/${idProducto}/Agentes`);\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\nimport {AgentService} from '@tune-up/app';\nimport {FollowupsService, GetAgentesProductoService} from './services';\nimport html from './followups.component.html';\nimport './followups.component.css';\n\n@Component({\n  selector: 'ut-followup',\n  template: html,\n  providers: [FollowupsService, GetAgentesProductoService],\n})\nexport class FollowupsComponent {\n  @Input() utId;\n  @Input() productoId;\n  seguimientoSelected;\n  assigningAgent = false;\n  selectedAgent;\n  seguimientos = [];\n\n  constructor(followupsService: FollowupsService, \n              agentService: AgentService, \n              getAgentesProductoService: GetAgentesProductoService) {\n    this._followupsService = followupsService;\n    this._agentService = agentService;\n    this._getAgentesProductoService = getAgentesProductoService;\n  }\n  ngOnInit() {\n   this._getFollowUps();\n  }\n  isSameAgent() {\n    return this.seguimiento.IdAgente === this._agentService.getAgentId();\n  }\n  _getFollowUps() {\n    this._getFollowupsSub = this._followupsService.getSeguimientos(this.utId)\n    .subscribe(\n    (data) => {\n      this.seguimientos = data;\n    }, (error) => {\n      // TODO\n      console.error(error);\n    });\n  }\n  _getAgentes() {\n    this._getAgentesSub = this._getAgentesProductoService.getAgentes(this.productoId)\n    .subscribe(\n    (data) => {\n      this.agentesDisponibles = data.map((agente) => {\n          return {label: agente.Nombre, value: agente.Id};\n      });\n      this.agentesDisponibles.shift(); // TODO: Refactor backend service.\n    }, (error) => {\n      // TODO\n      console.error(error);\n    });\n  }\n  get idSeguimiento() {\n    return this.seguimientoSelected.IdSeguimiento;\n  }\n  get seguimiento() {\n    return this.seguimientoSelected;\n  }\n  puedeIniciar = () => {\n    return this.seguimiento && this.seguimiento.Estado === 'TO DO';\n  }\n  iniciar = () => {\n    this._followupsService.empezarSeguimiento(this.idSeguimiento).subscribe(\n      (data) => {\n        this._quitActiveOfOtherFollowUpsOfAgent(this.seguimiento.IdAgente);\n        this.seguimiento.Estado = 'ACTIVE';\n       },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  puedeContinuar = () => {\n    return this.seguimiento && this.seguimiento.Estado === 'DOING';\n  }\n  continuar = () => {\n    this._followupsService.empezarSeguimiento(this.idSeguimiento).subscribe(\n      (data) => {\n        this._quitActiveOfOtherFollowUpsOfAgent(this.seguimiento.IdAgente);\n        this.seguimiento.Estado = 'ACTIVE';\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  puedePausar = () => {\n    return this.seguimiento && this.seguimiento.Estado === 'ACTIVE';\n  }\n  pausar = () => {\n    this._followupsService.pausarSeguimiento(this.idSeguimiento).subscribe(\n      (data) => {\n        this.seguimiento.Estado = 'DOING';\n       },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  puedeFinalizar = () => {\n    return this.seguimiento && this.seguimiento.Estado !== 'DONE';\n  }\n  finalizar = () => {\n    this._followupsService.finalizarSeguimiento(this.idSeguimiento).subscribe(\n      (data) => {\n        this._getFollowUps();\n       },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  puedeAsignarAgente = () => {\n     return this.seguimiento && this.seguimiento.IdAgente === null\n     && this.seguimiento.Estado === 'TO DO';\n  }\n  asignarAgente = () => {\n    this.assigningAgent = true;\n    this._getAgentes();\n  }\n  aceptarAsignar = () => {\n    this.assigningAgent = false;\n    this._followupsService.asignarAgente(this.seguimiento.IdSeguimiento, this.selectedAgent).subscribe(\n      (data) => {\n        // TODO: This can be replace to the invocation of getFollowUps\n        this.seguimiento.IdAgente = this.selectedAgent;\n        this.seguimiento.NombreAgente = this.agentesDisponibles.find((agente) =>{\n          return agente.value === this.selectedAgent;\n        }).label;\n       },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  _quitActiveOfOtherFollowUpsOfAgent(idAgente) {\n    this.seguimientos.forEach(function(seg) {\n      if (seg.IdAgente === idAgente && seg.Estado === 'ACTIVE') {\n        seg.Estado = 'DOING';\n      }\n    });\n  }\n  cancelarAsignar = () => {\n    this.assigningAgent = false;\n  }\n  trabajarEnParalelo = () => {\n    // TODO\n  }\n  ngOnDestroy() {\n\n    this._getFollowupsSub &&\n    !this._getFollowupsSub.closed &&\n    this._getFollowupsSub.unsubscribe();\n\n    this._getAgentesSub &&\n    !this._getAgentesSub.closed &&\n    this._getAgentesSub.unsubscribe();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class UtSearchService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._urlSearch = '/UTs/Buscar';\r\n  }\r\n\r\n  search(model) {\r\n    return this._http.get(`${this._urlSearch}?nombreUT=${model.NombreUT}&idProducto=${model.IdProducto}&idSprint=${model.IdSprint}&idProyecto=${model.IdProyecto}&idTipo=${model.IdTipoUT}&estado=${model.Estado}`);\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class ActivitiesService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._urlSearch = '/Actividades';\r\n  }\r\n\r\n  getActivities() {\r\n    return this._http.get(this._urlSearch);\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\nimport {UtSearchService, ActivitiesService} from './services';\r\nimport {GetProductosService, GetProyectosService, GetSprintsProductoService,\r\n        GetTiposUTProductoService} from '../nuevaut';\r\nimport {NotificationsService} from '@tune-up/core';\r\n\r\nimport html from './utsearch.component.html';\r\nimport './utsearch.component.css';\r\n\r\nconst utTypesIcons = {\r\n  1: 'fa fa-star',\r\n  2: 'fa fa-bug',\r\n  3: 'fa fa-plus-circle',\r\n  4: 'fa fa-puzzle-piece',\r\n};\r\n\r\nconst estados = [\r\n  {label: 'ALL', value: 0},\r\n  {label: 'Sólo UTs terminadas', value: 1},\r\n  {label: 'Sólo UTs NO terminadas', value: 2},\r\n];\r\n\r\nconst proyectosCache = [];\r\nconst sprintsCache = [];\r\nconst tiposUTCache = [];\r\nconst actividades = [];\r\n\r\n@Component({\r\n  selector: 'tn-ut-search',\r\n  template: html,\r\n  providers: [UtSearchService, ActivitiesService],\r\n})\r\nexport class UtSearchComponent {\r\n  model = {NombreUT: '', IdProducto: undefined, IdSprint: undefined,\r\n           IdProyecto: undefined, IdTipoUT: undefined, Estado: undefined};\r\n  selectableFields = false;\r\n  uts = undefined;\r\n\r\n  constructor(utSearchService: UtSearchService,\r\n              activitiesService: ActivitiesService,\r\n              getProductosService: GetProductosService,\r\n              getProyectosService: GetProyectosService,\r\n              getSprintsProductoService: GetSprintsProductoService,\r\n              getTiposUTProductoService: GetTiposUTProductoService,\r\n              notificationsService: NotificationsService,\r\n            ) {\r\n    this._utSearchService = utSearchService;\r\n    this._activitiesService = activitiesService;\r\n    this._getProductosService = getProductosService;\r\n    this._getProyectosService = getProyectosService;\r\n    this._getSprintsService = getSprintsProductoService;\r\n    this._getTiposUTService = getTiposUTProductoService;\r\n    this._notificationsService = notificationsService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._getProductos();\r\n    this._getActividades();\r\n    this._parseEstados();\r\n  }\r\n\r\n  onSearch() {\r\n    this._utSearchSubscription = this._utSearchService.search(this.model).subscribe(\r\n      (data) => {\r\n        // TODO: Update table.\r\n        this.uts = data;\r\n      },\r\n      (error) => {\r\n        this._notificationsService.error('Error al buscar', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  _getProductos() {\r\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\r\n      (data) => {\r\n        this._parseProductos(data);\r\n        this.model.IdProducto = 'ALL';\r\n        this.clearFieldsAndPutAll();\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener los productos',\r\n          error)\r\n    );\r\n  }\r\n\r\n  productoChange() {\r\n    if (this.model.IdProducto == 'ALL') {\r\n      this.selectableFields = false;\r\n      this.clearFieldsAndPutAll();\r\n    } else {\r\n      this.selectableFields = true;\r\n      this._getProyectos(this.model.IdProducto);\r\n      this._getSprints(this.model.IdProducto);\r\n      this._getTiposUT(this.model.IdProducto);\r\n      this.selectDefaultValues();\r\n    }\r\n  }\r\n\r\n  clearFieldsAndPutAll() {\r\n    // TODO: This cannot works at the init.\r\n    this.proyectosDisponibles = [];\r\n    this.proyectosDisponibles.push({label: 'ALL', value: 'ALL'});\r\n\r\n    this.sprintsDisponibles = [];\r\n    this.sprintsDisponibles.push({label: 'ALL', value: 'ALL'});\r\n\r\n    this.tiposDisponibles = [];\r\n    this.tiposDisponibles.push({label: 'ALL', value: 'ALL'});\r\n\r\n    this.selectDefaultValues();\r\n  }\r\n\r\n  selectDefaultValues() {\r\n    this.model.IdProyecto = 'ALL';\r\n    this.model.IdSprint = 'ALL';\r\n    this.model.IdTipoUT = 'ALL';\r\n  }\r\n\r\n  _parseProductos(productos) {\r\n    this.productosDisponibles = productos.map((prod) => {\r\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\r\n    });\r\n    this.productosDisponibles.push({label: 'ALL', value: 'ALL'});\r\n  }\r\n\r\n  _getProyectos(idProducto) {\r\n    if (!proyectosCache[idProducto]) {\r\n      this._getProyectoSubscription =\r\n      this._getProyectosService.get(idProducto).subscribe(\r\n        (data) => {\r\n          this._parseProyectos(data);\r\n          proyectosCache[idProducto] = this.proyectosDisponibles;\r\n        },\r\n        (error) =>\r\n          this._notificationService.error(\r\n            'No se han podido obtener los proyectos del producto', error)\r\n      );\r\n    } else {\r\n      this.proyectosDisponibles = proyectosCache[idProducto];\r\n    }\r\n  }\r\n\r\n  _parseProyectos(proyectos) {\r\n    this.proyectosDisponibles = proyectos.map((proy) => {\r\n      return {label: `${proy.Nombre}`, value: proy.IdProyecto};\r\n    });\r\n    this.proyectosDisponibles.push({label: '<Sin Proyecto>', value: 0});\r\n    this.proyectosDisponibles.push({label: 'ALL', value: 'ALL'});\r\n  }\r\n\r\n  _getSprints(idProducto) {\r\n    if (!sprintsCache[idProducto]) {\r\n      this._getSprintsSubscription =\r\n       this._getSprintsService.get(idProducto).subscribe(\r\n        (data) => {\r\n          this._parseSprints(data);\r\n          sprintsCache[idProducto] = this.sprintsDisponibles;\r\n        },\r\n        (error) => {\r\n          this._notificationService.error(\r\n            'No se han podido obtener los Sprints del producto',\r\n            error\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      this.sprintsDisponibles = sprintsCache[idProducto];\r\n    }\r\n  }\r\n\r\n  _parseSprints(sprints) {\r\n    this.sprintsDisponibles = sprints.map((sprint) => {\r\n      if (sprint.IdVersion === -1) {\r\n        return {label: 'Backlog', value: 0}; // TODO: Refactor backend service.\r\n      } else {\r\n        return {label: sprint.Nombre, value: sprint.IdVersion};\r\n      }\r\n    });\r\n    this.sprintsDisponibles.push({label: 'ALL', value: 'ALL'});\r\n  }\r\n\r\n  _getTiposUT(idProducto) {\r\n    if (!tiposUTCache[idProducto]) {\r\n      this._getTiposUTSubscription =\r\n        this._getTiposUTService.get(idProducto).subscribe(\r\n          (data) => {\r\n            this._parseTiposUT(data);\r\n            tiposUTCache[idProducto] = this.tiposDisponibles;\r\n          },\r\n          (error) =>\r\n            this._notificationService.error(\r\n              'No se han podido obtener los tipos de UT',\r\n              error\r\n        ));\r\n    } else {\r\n      this.tiposDisponibles = tiposUTCache[idProducto];\r\n    }\r\n  }\r\n\r\n  _parseTiposUT(tipos) {\r\n    this.tiposDisponibles = tipos.map((tipo) => {\r\n      return {label: `${tipo.Nombre}`, value: tipo.IdTipoUT};\r\n    });\r\n    this.tiposDisponibles.push({label: 'ALL', value: 'ALL'});\r\n  }\r\n\r\n  _parseEstados() {\r\n    this.estadosDisponibles = estados;\r\n    this.model.Estado = 'ALL';\r\n  }\r\n\r\n  getUtTypeIcon = (tipo) => {\r\n    return utTypesIcons[tipo];\r\n  };\r\n\r\n  getUtLink = (ut) => {\r\n    return `/uts/${ut.IdUT}`;\r\n  };\r\n\r\n  _getActividades() {\r\n    this._getActividadesSubscription = this._activitiesService.getActivities().subscribe(\r\n      (data) => {\r\n        data.map((actividad)=>{\r\n            actividades[actividad.IdActividad] = actividad.Nombre;\r\n        });\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener las actividades',\r\n          error)\r\n    );\r\n    actividades[0]='Terminar';\r\n  }\r\n\r\n  getActividad = (IdActividad) => {\r\n    return actividades[IdActividad];\r\n  };\r\n\r\n  ngOnDestroy() {\r\n    this._utSearchSubscription &&\r\n    !this._utSearchSubscription.closed &&\r\n    this._utSearchSubscription.unsubscribe();\r\n\r\n    this._getActividadesSubscription &&\r\n    !this._getActividadesSubscription.closed &&\r\n    this._getActividadesSubscription.unsubscribe();\r\n\r\n    this._getProductosSubscription &&\r\n      !this._getProductosSubscription.closed &&\r\n      this._getProductosSubscription.unsubscribe();\r\n\r\n    this._getProyectoSubscription &&\r\n      !this._getProyectoSubscription.closed &&\r\n      this._getProyectoSubscription.unsubscribe();\r\n\r\n    this._getSprintsSubscription &&\r\n      !this._getSprintsSubscription.closed &&\r\n      this._getSprintsSubscription.unsubscribe();\r\n\r\n    this._getTiposUTSubscription &&\r\n      !this._getTiposUTSubscription.closed &&\r\n      this._getTiposUTSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {UtComponent} from './ut.component';\r\nimport {DetailsComponent, NuevaUTComponent} from './components';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([\r\n    {path: '', component: UtComponent},\r\n    {path: 'add', component: NuevaUTComponent, data: {breadcrumb: 'Nueva UT'}},\r\n    {path: ':id', component: DetailsComponent, data: {breadcrumb: '@id'}},\r\n  ])],\r\n  exports: [RouterModule],\r\n})\r\nexport class UtRoutingModule {}\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {UtRoutingModule} from './ut.routing';\r\nimport {UtComponent} from './ut.component';\r\nimport {TuneUpCoreModule} from '@tune-up/core';\r\nimport {DetailsComponent, DetailsService, NuevaUTComponent, FollowupsComponent, UtSearchComponent,\r\n  GetProductosService, GetProyectosService, GetSprintsProductoService, GetTiposUTProductoService} from './components';\r\n\r\n@NgModule({\r\n  imports: [TuneUpCoreModule, UtRoutingModule],\r\n  declarations: [\r\n    UtComponent,\r\n    DetailsComponent,\r\n    NuevaUTComponent,\r\n    FollowupsComponent,\r\n    UtSearchComponent,\r\n  ],\r\n  providers: [\r\n    DetailsService, // TODO: Move to the component if nobody uses it.\r\n    GetProductosService,\r\n    GetProyectosService,\r\n    GetSprintsProductoService,\r\n    GetTiposUTProductoService,\r\n  ],\r\n})\r\nexport class UtModule {}\r\n"],"names":["UtComponent","Component","DetailsService","Injectable","http","_http","_urlUT","_urlProductos","_urlUTs","id","this","get","model","post","HttpClient","utTypesIcons","DetailsComponent","route","router","detailsService","notificationsService","editingMode","IdUT","undefined","Nombre","Orden","IdVersion","IdWorkflow","IdProyecto","Descripcion","ut","onGuardar","_saveDetailsSubscription","_this","_detailsService","submitChangesDetails","subscribe","data","UT","IdProducto","IdTipoUT","Definicion","error","_notificationsService","getUtTypeIcon","tipo","_route","_router","parseInt","params","_value","_getProductosDisponibles","getProductosDisponibles","_parseProductos","_getUt","getUt","showErrorAndBackHome","_parseSprints","listaVersionesUT","_parseWorkflows","listaWorkflowsDisponibles","_parseTipos","listaTiposUT","_parseProyectos","listaProyectos","_mapSelected","sprints","sprintsDisponibles","map","sprint","label","value","push","wfs","workflowsDisponibles","wf","tipos","tiposDisponibles","proyectos","proyectosDisponibles","proy","productos","productosDisponibles","prod","forEach","element","navigateByUrl","closed","unsubscribe","_getUtSub","ActivatedRoute","Router","NotificationsService","CreateUTService","_url","newUT","put","GetProductosService","GetProyectosService","idProducto","GetSprintsProductoService","GetTiposUTProductoService","GetWorkflowsService","proyectosCache","sprintsCache","tiposUTCache","workflowsCache","NuevaUTComponent","createUTService","getProductosService","getProyectosService","getSprintsProductoService","getTiposUTService","getWorkflowsService","_createUTService","_getProductosService","_getProyectosService","_getSprintsService","_getWorkflowsService","_getTiposUTService","_notificationService","tiposUT","workflows","_getProductos","_getProductosSubscription","length","_getDatosProducto","_getWorkflows","_getProyectos","_getSprints","_getTiposUT","_seleccionarValoresPorDefecto","_getWorkflowsSubscription","_this2","_getProyectoSubscription","_this3","proyectosMapped","pr","_getTiposUTSubscription","_this4","_parseTiposUT","t","_getSprintsSubscription","_this5","sp","idNuevoProducto","_crearUTSubscription","success","_this6","_clearFields","that","_redirect","idUT","FollowupsService","idUt","idSeguimiento","adelante","idAgente","GetAgentesProductoService","FollowupsComponent","Input","followupsService","agentService","getAgentesProductoService","seguimientoSelected","assigningAgent","selectedAgent","seguimientos","puedeIniciar","seguimiento","Estado","iniciar","_followupsService","empezarSeguimiento","_quitActiveOfOtherFollowUpsOfAgent","IdAgente","log","puedeContinuar","continuar","puedePausar","pausar","pausarSeguimiento","puedeFinalizar","finalizar","finalizarSeguimiento","_getFollowUps","puedeAsignarAgente","asignarAgente","_getAgentes","aceptarAsignar","IdSeguimiento","NombreAgente","agentesDisponibles","find","agente","cancelarAsignar","trabajarEnParalelo","_agentService","_getAgentesProductoService","getAgentId","_getFollowupsSub","getSeguimientos","utId","_getAgentesSub","getAgentes","productoId","Id","shift","seg","AgentService","UtSearchService","_urlSearch","NombreUT","IdSprint","ActivitiesService","estados","actividades","UtSearchComponent","utSearchService","activitiesService","getTiposUTProductoService","selectableFields","uts","getUtLink","getActividad","IdActividad","_utSearchService","_activitiesService","_getActividades","_parseEstados","_utSearchSubscription","search","clearFieldsAndPutAll","selectDefaultValues","estadosDisponibles","_getActividadesSubscription","getActivities","actividad","UtRoutingModule","NgModule","RouterModule","forChild","path","component","breadcrumb","UtModule","TuneUpCoreModule"],"mappings":"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"}