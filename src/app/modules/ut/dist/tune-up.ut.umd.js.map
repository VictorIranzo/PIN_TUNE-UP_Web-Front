{"version":3,"file":"tune-up.ut.umd.js","sources":["../src/ut.component.js","../src/components/details/services/details.service.js","../src/components/details/details.component.js","../src/components/nuevaut/services/createUT.service.js","../src/components/nuevaut/services/getProductos.service.js","../src/components/nuevaut/services/getWorkflows.service.js","../src/components/nuevaut/nuevaut.component.js","../src/ut.routing.js","../src/ut.module.js"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport {BreadcrumbService} from '@tune-up/app';\r\nimport html from './ut.component.html';\r\nimport './ut.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-ut',\r\n  template: html,\r\n})\r\nexport class UtComponent {\r\n  constructor(breadcrumbService: BreadcrumbService) {\r\n    this._breadcrumbService = breadcrumbService;\r\n    this._breadcrumbService.addItems({label: 'UTs', routerLink: '/uts'});\r\n  }\r\n  ngOnDestroy() {\r\n    // TODO: determine when to reset breadcrumbService\r\n    // this._breadcrumbService.removeItems(1);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class DetailsService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._urlUT = 'FichaUT2';\n    this._urlProductos = 'Productos2';\n    this._urlUTs = 'UTs2';\n  }\n\n  getUt(id) {\n    return this._http.get(`${this._urlUT}/${id}`);\n  }\n\n  getProductosDisponibles() {\n    return this._http.get(`${this._urlProductos}`);\n  }\n\n  submitChangesDetails(model) {\n    return this._http.post(this._urlUTs, model);\n  }\n}\n\n\n","import {Component} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {DetailsService} from './services';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport {BreadcrumbService} from '@tune-up/app';\r\nimport html from './details.component.html';\r\nimport './details.component.css';\r\n\r\nconst utTypesIcons = {\r\n  1: 'fa fa-star',\r\n  2: 'fa fa-bug',\r\n  3: 'fa fa-plus-circle',\r\n  4: 'fa fa-puzzle-piece',\r\n};\r\n\r\n@Component({\r\n  selector: 'tn-ut-details',\r\n  template: html,\r\n})\r\nexport class DetailsComponent {\r\n  editingMode = false;\r\n  model = {IdUT: undefined, Nombre: undefined, Orden: undefined,\r\n          IdProducto: undefined, IdVersion: undefined, IdWorkflow: undefined,\r\n          IdTipoUT: undefined, IdProyecto: undefined, Descripcion: undefined};\r\n  ut;\r\n\r\n  // TODO: utiliza destructuring para que quede más claro, ej\r\n  // const {Nombre, Orden} = data.UT; const {listaVersiones,...} = data\r\n\r\n  constructor(route: ActivatedRoute,\r\n              detailsService: DetailsService,\r\n              notificationsService: NotificationsService,\r\n               breadcrumbService:BreadcrumbService ) {\r\n        this._route = route;\r\n        this._detailsService = detailsService;\r\n        this._notificationsService = notificationsService;\r\n        this._breadcrumbService = breadcrumbService;\r\n\r\n        this.model.IdUT= parseInt(this._route.params._value.id);\r\n        this._breadcrumbService.addItems({label: this.model.IdUT, routerLink: `/uts/${this.model.IdUT}`});\r\n\r\n        this._detailsService.getProductosDisponibles().subscribe((data) => {\r\n          this._parseProductos(data);\r\n        });\r\n\r\n        this._detailsService.getUt(this.model.IdUT).subscribe((data) => {\r\n              this.ut = data;\r\n              this.model.Nombre = data.UT.Nombre;\r\n              this.model.Orden = data.UT.Orden;\r\n              this._parseSprints(data.listaVersionesUT);\r\n              this._parseWorkflows(data.listaWorkflowsDisponibles);\r\n              this._parseTipos(data.listaTiposUT);\r\n              this._parseProyectos(data.listaProyectos);\r\n              this.model.Descripcion = data.UT.Descripcion;\r\n              this._mapSelected(data, this.model);\r\n            });\r\n  }\r\n  onEditar() {\r\n    this.editingMode = true;\r\n  }\r\n\r\n  onCancelar() {\r\n    this.editingMode = false;\r\n\r\n    this.model.IdUT = this.ut.UT.IdUT;\r\n    this.model.Nombre = this.ut.UT.Nombre;\r\n    this.model.Orden = this.ut.UT.Orden;\r\n    this.model.IdProducto = this.ut.UT.IdProducto;\r\n    this.model.IdVersion = this.ut.UT.IdVersion;\r\n    this.model.IdWorkflow = this.ut.UT.IdWorkflow;\r\n    this.model.IdTipoUT = this.ut.UT.IdTipoUT;\r\n    this.model.IdProyecto = this.ut.UT.IdProyecto;\r\n    this.model.Descripcion = this.ut.UT.Descripcion;\r\n  }\r\n\r\n  onGuardar = () => {\r\n    this._saveDetailsSubscription = this._detailsService.submitChangesDetails(this.model).subscribe(\r\n      (data) => {\r\n        this.editingMode = false;\r\n      },\r\n      (error) => {\r\n        this._notificationsService.error('Error al guardar los cambios', error);\r\n      }\r\n    );\r\n  };\r\n\r\n  // TODO: var a = 'hola', label: a === label: `${a}`\r\n  // las template strings solo valen si vas a escribir más.\r\n  // TODO, en vez de almacenar todo esto en this, llama a las funciones desde el html y ya esta,\r\n  // que solo se van a llamar una vez\r\n\r\n  _parseSprints(sprints) {\r\n    this.sprintsDisponibles = sprints.map((sprint) => {\r\n      return {label: sprint.Nombre, value: sprint.IdVersion};\r\n    });\r\n    this.sprintsDisponibles.push({label: 'Backlog', value: null});\r\n  }\r\n  _parseWorkflows(wfs) {\r\n    this.workflowsDisponibles = wfs.map((wf) => {\r\n      return {label: `${wf.Nombre}`, value: wf.IdWorkflow};\r\n    });\r\n  }\r\n  _parseTipos(tipos) {\r\n    this.tiposDisponibles = tipos.map((tipo) => {\r\n      return {label: `${tipo.Nombre}`, value: tipo.IdTipoUT};\r\n    });\r\n  }\r\n  _parseProyectos(proyectos) {\r\n    this.proyectosDisponibles = proyectos.map((proy) => {\r\n      return {label: `${proy.Nombre}`, value: proy.IdProyecto};\r\n    });\r\n    this.proyectosDisponibles.push({label: '<Sin Proyecto>', value: null});\r\n  }\r\n  _parseProductos(productos) {\r\n    this.productosDisponibles = productos.map((prod) => {\r\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\r\n    });\r\n  }\r\n\r\n  _mapSelected(ut, model) {\r\n    this.sprintsDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdVersion) model.IdVersion = element.value;\r\n    });\r\n    this.workflowsDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdWorkflow) model.IdWorkflow = element.value;\r\n    });\r\n    this.tiposDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdTipoUT) model.IdTipoUT = element.value;\r\n    });\r\n    this.proyectosDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdProyecto) model.IdProyecto = element.value;\r\n    });\r\n    this.productosDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdProducto) model.IdProducto = element.value;\r\n    });\r\n  }\r\n\r\n  getUtTypeIcon = (tipo) => {\r\n    return utTypesIcons[tipo];\r\n  };\r\n\r\n  ngOnDestroy() {\r\n    this._breadcrumbService.removeItems(1);\r\n\r\n    this._saveDetailsSubscription &&\r\n    !this._saveDetailsSubscription.closed &&\r\n    this._saveDetailsSubscription.unsubscribe();\r\n\r\n    this._getUtSub &&\r\n    !this._getUtSub.closed &&\r\n    this._getUtSub.unsubscribe();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CreateUTService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'UTs/Crear';\r\n  }\r\n  put(newUT) {\r\n    return this._http.put(this._url, newUT);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProductosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos2';\r\n  }\r\n  get() {\r\n    return this._http.get(\r\n      `${this._url}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetWorkflowsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Workflows';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}`\r\n    );\r\n  }\r\n}\r\n\r\n","import {Component} from '@angular/core';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport {CreateUTService, GetProductosService, GetWorkflowsService} from './services';\r\nimport html from './nuevaut.component.html';\r\nimport './nuevaut.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-ut-nuevaut',\r\n  template: html,\r\n  providers: [CreateUTService, GetProductosService, GetWorkflowsService],\r\n})\r\nexport class NuevaUTComponent {\r\n  ut = {\r\n    Nombre: null,\r\n    IdVersion: null,\r\n    Producto: null,\r\n    Workflow: null,\r\n    IdTipoUT: null,\r\n    IdProyecto: null,\r\n  };\r\n  productos = [];\r\n  workflows = [];\r\n  workflowsCache = [];\r\n\r\n  constructor(\r\n    createUTService: CreateUTService,\r\n    getProductosService : GetProductosService,\r\n    getWorkflowsService : GetWorkflowsService,\r\n    notificationsService: NotificationsService,\r\n  ) {\r\n    this._createUTService = createUTService;\r\n    this._getProductosService = getProductosService;\r\n    this._getWorkflowsService = getWorkflowsService;\r\n    this._notificationService = notificationsService;\r\n    this._getProductos();\r\n  }\r\n\r\n  _getProductos() {\r\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\r\n      (data) => {\r\n        this.productos = data;\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener los productos',\r\n          error\r\n        )\r\n    );\r\n  }\r\n\r\n  onProductChanged(nuevoProducto) {\r\n      this.workflows = _getWorkflows(nuevoProducto.IdProducto);\r\n  }\r\n\r\n  _getWorkflows(idProducto) {\r\n    if (!this.workflowsCache[idProducto]) {\r\n      this.workflowsCache[idProducto] = _getWorkflowsService.get(idProducto).subscribe(\r\n        (data) => {\r\n          this.workflowsCache[idProducto] = data;\r\n        }\r\n      );\r\n    }\r\n    return this.workflowsCache[idProducto];\r\n  }\r\n\r\n  _crearUT() {\r\n    idUT = 0;\r\n    this.createUTService.put(this.ut).subscribe(\r\n      (data) => {\r\n        this.idUT = data.Resultado;\r\n      },\r\n      (error) => {\r\n        this._notificationService.error(\r\n          'No se pudo crear la UT especficada',\r\n          error\r\n        );\r\n      }\r\n    );\r\n    return idUT;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._getProductosSubscription &&\r\n      !this._getProductosSubscription.closed &&\r\n      this._getProductosSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {UtComponent} from './ut.component';\r\nimport {DetailsComponent, NuevaUTComponent} from './components';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([\r\n    {path: '', component: UtComponent},\r\n    {path: 'add', component: NuevaUTComponent},\r\n    {path: ':id', component: DetailsComponent},\r\n  ])],\r\n  exports: [RouterModule],\r\n})\r\nexport class UtRoutingModule {}\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {UtRoutingModule} from './ut.routing';\r\nimport {UtComponent} from './ut.component';\r\nimport {TuneUpCoreModule} from '@tune-up/core';\r\nimport {DetailsComponent, DetailsService, NuevaUTComponent} from './components';\r\n\r\n@NgModule({\r\n  imports: [TuneUpCoreModule, UtRoutingModule],\r\n  declarations: [\r\n    UtComponent,\r\n    DetailsComponent,\r\n    NuevaUTComponent,\r\n  ],\r\n  providers: [\r\n    DetailsService,\r\n  ],\r\n})\r\nexport class UtModule {}\r\n"],"names":["UtComponent","Component","breadcrumbService","_breadcrumbService","addItems","label","routerLink","BreadcrumbService","DetailsService","Injectable","http","_http","_urlUT","_urlProductos","_urlUTs","id","this","get","model","post","HttpClient","utTypesIcons","DetailsComponent","route","detailsService","notificationsService","editingMode","IdUT","undefined","Nombre","Orden","IdVersion","IdWorkflow","IdProyecto","Descripcion","ut","onGuardar","_saveDetailsSubscription","_this","_detailsService","submitChangesDetails","subscribe","data","error","_notificationsService","getUtTypeIcon","tipo","_route","parseInt","params","_value","getProductosDisponibles","_parseProductos","getUt","UT","_parseSprints","listaVersionesUT","_parseWorkflows","listaWorkflowsDisponibles","_parseTipos","listaTiposUT","_parseProyectos","listaProyectos","_mapSelected","IdProducto","IdTipoUT","sprints","sprintsDisponibles","map","sprint","value","push","wfs","workflowsDisponibles","wf","tipos","tiposDisponibles","proyectos","proyectosDisponibles","proy","productos","productosDisponibles","prod","forEach","element","removeItems","closed","unsubscribe","_getUtSub","ActivatedRoute","NotificationsService","CreateUTService","_url","newUT","put","GetProductosService","GetWorkflowsService","idProducto","NuevaUTComponent","createUTService","getProductosService","getWorkflowsService","workflows","workflowsCache","_createUTService","_getProductosService","_getWorkflowsService","_notificationService","_getProductos","_getProductosSubscription","nuevoProducto","_getWorkflows","idUT","Resultado","UtRoutingModule","NgModule","RouterModule","forChild","path","component","UtModule","TuneUpCoreModule"],"mappings":"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"}