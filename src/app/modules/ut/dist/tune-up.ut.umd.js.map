{"version":3,"file":"tune-up.ut.umd.js","sources":["../src/ut.component.js","../src/components/details/services/details.service.js","../src/components/details/details.component.js","../src/components/nuevaut/services/createUT.service.js","../src/components/nuevaut/services/getProductos.service.js","../src/components/nuevaut/services/getProyectos.service.js","../src/components/nuevaut/services/getSprintsProducto.service.js","../src/components/nuevaut/services/getTiposUTProducto.service.js","../src/components/nuevaut/services/getWorkflows.service.js","../src/components/nuevaut/nuevaut.component.js","../src/ut.routing.js","../src/ut.module.js"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport {BreadcrumbService} from '@tune-up/app';\r\nimport html from './ut.component.html';\r\nimport './ut.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-ut',\r\n  template: html,\r\n})\r\nexport class UtComponent {\r\n  constructor(breadcrumbService: BreadcrumbService) {\r\n    this._breadcrumbService = breadcrumbService;\r\n    this._breadcrumbService.addItems({label: 'UTs', routerLink: '/uts'});\r\n  }\r\n  ngOnDestroy() {\r\n    // TODO: determine when to reset breadcrumbService\r\n    // this._breadcrumbService.removeItems(1);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class DetailsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._urlUT = 'FichaUT2';\r\n    this._urlProductos = 'Productos2';\r\n    this._urlUTs = 'UTs2';\r\n  }\r\n\r\n  getUt(id) {\r\n    return this._http.get(`${this._urlUT}/${id}`);\r\n  }\r\n\r\n  getProductosDisponibles() {\r\n    return this._http.get(`${this._urlProductos}`);\r\n  }\r\n\r\n  submitChangesDetails(model) {\r\n    return this._http.post(this._urlUTs, model);\r\n  }\r\n}\r\n\r\n\r\n","import {Component} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {DetailsService} from './services';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport {BreadcrumbService} from '@tune-up/app';\r\nimport html from './details.component.html';\r\nimport './details.component.css';\r\n\r\nconst utTypesIcons = {\r\n  1: 'fa fa-star',\r\n  2: 'fa fa-bug',\r\n  3: 'fa fa-plus-circle',\r\n  4: 'fa fa-puzzle-piece',\r\n};\r\n\r\n@Component({\r\n  selector: 'tn-ut-details',\r\n  template: html,\r\n})\r\nexport class DetailsComponent {\r\n  editingMode = false;\r\n  model = {IdUT: undefined, Nombre: undefined, Orden: undefined,\r\n          IdProducto: undefined, IdVersion: undefined, IdWorkflow: undefined,\r\n          IdTipoUT: undefined, IdProyecto: undefined, Descripcion: undefined};\r\n  ut;\r\n\r\n  // TODO: utiliza destructuring para que quede más claro, ej\r\n  // const {Nombre, Orden} = data.UT; const {listaVersiones,...} = data\r\n\r\n  constructor(route: ActivatedRoute,\r\n              detailsService: DetailsService,\r\n              notificationsService: NotificationsService,\r\n               breadcrumbService:BreadcrumbService ) {\r\n        this._route = route;\r\n        this._detailsService = detailsService;\r\n        this._notificationsService = notificationsService;\r\n        this._breadcrumbService = breadcrumbService;\r\n\r\n        this.model.IdUT= parseInt(this._route.params._value.id);\r\n        this._breadcrumbService.addItems({label: this.model.IdUT, routerLink: `/uts/${this.model.IdUT}`});\r\n\r\n        this._detailsService.getProductosDisponibles().subscribe((data) => {\r\n          this._parseProductos(data);\r\n        });\r\n\r\n        this._detailsService.getUt(this.model.IdUT).subscribe((data) => {\r\n              this.ut = data;\r\n              this.model.Nombre = data.UT.Nombre;\r\n              this.model.Orden = data.UT.Orden;\r\n              this._parseSprints(data.listaVersionesUT);\r\n              this._parseWorkflows(data.listaWorkflowsDisponibles);\r\n              this._parseTipos(data.listaTiposUT);\r\n              this._parseProyectos(data.listaProyectos);\r\n              this.model.Descripcion = data.UT.Descripcion;\r\n              this._mapSelected(data, this.model);\r\n            });\r\n  }\r\n  onEditar() {\r\n    this.editingMode = true;\r\n  }\r\n\r\n  onCancelar() {\r\n    this.editingMode = false;\r\n\r\n    this.model.IdUT = this.ut.UT.IdUT;\r\n    this.model.Nombre = this.ut.UT.Nombre;\r\n    this.model.Orden = this.ut.UT.Orden;\r\n    this.model.IdProducto = this.ut.UT.IdProducto;\r\n    this.model.IdVersion = this.ut.UT.IdVersion;\r\n    this.model.IdWorkflow = this.ut.UT.IdWorkflow;\r\n    this.model.IdTipoUT = this.ut.UT.IdTipoUT;\r\n    this.model.IdProyecto = this.ut.UT.IdProyecto;\r\n    this.model.Descripcion = this.ut.UT.Descripcion;\r\n  }\r\n\r\n  onGuardar = () => {\r\n    this._saveDetailsSubscription = this._detailsService.submitChangesDetails(this.model).subscribe(\r\n      (data) => {\r\n        this.editingMode = false;\r\n\r\n        //TODO: The service must return the UT modified. Meanwhile...\r\n        this.ut.UT.IdUT = this.model.IdUT;\r\n        this.ut.UT.Nombre = this.model.Nombre;\r\n        this.ut.UT.Orden = this.model.Orden;\r\n        this.ut.UT.IdProducto = this.model.IdProducto;\r\n        this.ut.UT.IdVersion = this.model.IdVersion;\r\n        this.ut.UT.IdWorkflow = this.model.IdWorkflow;\r\n        this.ut.UT.IdTipoUT = this.model.IdTipoUT;\r\n        this.ut.UT.IdProyecto = this.model.IdProyecto;\r\n        this.ut.UT.Descripcion = this.model.Descripcion;\r\n      },\r\n      (error) => {\r\n        this._notificationsService.error('Error al guardar los cambios', error);\r\n      }\r\n    );\r\n  };\r\n\r\n  // TODO: var a = 'hola', label: a === label: `${a}`\r\n  // las template strings solo valen si vas a escribir más.\r\n  // TODO, en vez de almacenar todo esto en this, llama a las funciones desde el html y ya esta,\r\n  // que solo se van a llamar una vez\r\n\r\n  _parseSprints(sprints) {\r\n    this.sprintsDisponibles = sprints.map((sprint) => {\r\n      return {label: sprint.Nombre, value: sprint.IdVersion};\r\n    });\r\n    this.sprintsDisponibles.push({label: 'Backlog', value: null});\r\n  }\r\n  _parseWorkflows(wfs) {\r\n    this.workflowsDisponibles = wfs.map((wf) => {\r\n      return {label: `${wf.Nombre}`, value: wf.IdWorkflow};\r\n    });\r\n  }\r\n  _parseTipos(tipos) {\r\n    this.tiposDisponibles = tipos.map((tipo) => {\r\n      return {label: `${tipo.Nombre}`, value: tipo.IdTipoUT};\r\n    });\r\n  }\r\n  _parseProyectos(proyectos) {\r\n    this.proyectosDisponibles = proyectos.map((proy) => {\r\n      return {label: `${proy.Nombre}`, value: proy.IdProyecto};\r\n    });\r\n    this.proyectosDisponibles.push({label: '<Sin Proyecto>', value: null});\r\n  }\r\n  _parseProductos(productos) {\r\n    this.productosDisponibles = productos.map((prod) => {\r\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\r\n    });\r\n  }\r\n\r\n  _mapSelected(ut, model) {\r\n    this.sprintsDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdVersion) model.IdVersion = element.value;\r\n    });\r\n    this.workflowsDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdWorkflow) model.IdWorkflow = element.value;\r\n    });\r\n    this.tiposDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdTipoUT) model.IdTipoUT = element.value;\r\n    });\r\n    this.proyectosDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdProyecto) model.IdProyecto = element.value;\r\n    });\r\n    this.productosDisponibles.forEach(function(element) {\r\n      if (element.value == ut.UT.IdProducto) model.IdProducto = element.value;\r\n    });\r\n  }\r\n\r\n  getUtTypeIcon = (tipo) => {\r\n    return utTypesIcons[tipo];\r\n  };\r\n\r\n  ngOnDestroy() {\r\n    this._breadcrumbService.removeItems(1);\r\n\r\n    this._saveDetailsSubscription &&\r\n    !this._saveDetailsSubscription.closed &&\r\n    this._saveDetailsSubscription.unsubscribe();\r\n\r\n    this._getUtSub &&\r\n    !this._getUtSub.closed &&\r\n    this._getUtSub.unsubscribe();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CreateUTService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'UTs/Crear';\r\n  }\r\n  put(newUT) {\r\n    return this._http.put(this._url, newUT);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProductosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos2';\r\n  }\r\n  get() {\r\n    return this._http.get(\r\n      `${this._url}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProyectosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}/Proyectos`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetSprintsProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Sprints2';\r\n  }\r\n  get(idProducto) { \r\n    return this._http.get(`${this._url}/${idProducto}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetTiposUTProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'TiposUT2';\r\n  }\r\n  get(idProducto) { \r\n    return this._http.get(`${this._url}/${idProducto}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetWorkflowsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Workflows';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}`\r\n    );\r\n  }\r\n}\r\n\r\n","import {Component} from '@angular/core';\r\nimport {NotificationsService} from '@tune-up/core';\r\nimport {CreateUTService, GetProductosService, GetProyectosService, GetSprintsProductoService, GetTiposUTProductoService, GetWorkflowsService} from './services';\r\nimport html from './nuevaut.component.html';\r\nimport './nuevaut.component.css';\r\n\r\n\r\nconst proyectosCache = [];\r\nconst sprintsCache = [];\r\nconst tiposUTCache = [];\r\nconst workflowsCache = [];\r\n\r\n@Component({\r\n  selector: 'tn-ut-nuevaut',\r\n  template: html,\r\n  providers: [\r\n    CreateUTService,\r\n    GetProductosService,\r\n    GetProyectosService,\r\n    GetSprintsProductoService,\r\n    GetTiposUTProductoService,\r\n    GetWorkflowsService,\r\n  ],\r\n})\r\nexport class NuevaUTComponent {\r\n  ut = {\r\n    Nombre: null,\r\n    IdVersion: null,\r\n    IdProducto: null,\r\n    IdWorkflow: null,\r\n    IdTipoUT: null,\r\n    IdProyecto: null,\r\n  };\r\n\r\n\r\n  constructor(\r\n    createUTService: CreateUTService,\r\n    getProductosService : GetProductosService,\r\n    getProyectosService : GetProyectosService,\r\n    getSprintsProductoService : GetSprintsProductoService,\r\n    getTiposUTService : GetTiposUTProductoService,\r\n    getWorkflowsService : GetWorkflowsService,\r\n    notificationsService: NotificationsService,\r\n  ) {\r\n    this._createUTService = createUTService;\r\n    this._getProductosService = getProductosService;\r\n    this._getProyectosService = getProyectosService;\r\n    this._getSprintsService = getSprintsProductoService;\r\n    this._getWorkflowsService = getWorkflowsService;\r\n    this._getTiposUTService = getTiposUTService;\r\n    this._notificationService = notificationsService;\r\n    this.productos = [];\r\n    this.proyectos = [];\r\n    this.sprints = [];\r\n    this.tiposUT = [];\r\n    this.workflows = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._getProductos();\r\n  }\r\n\r\n  _getProductos() {\r\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\r\n      (data) => {\r\n        this.productos = this._parseProductos(data);\r\n        if (this.productos.length > 0) {\r\n          this.ut.IdProducto = this.productos[0].value;\r\n          this._getDatosProducto(this.productos[0].value);\r\n        }\r\n      },\r\n      (error) =>\r\n        this._notificationService.error(\r\n          'No se han podido obtener los productos',\r\n          error\r\n        )\r\n    );\r\n  }\r\n\r\n  _parseProductos(productos) {\r\n    return productos.map((prod) => {\r\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\r\n    });\r\n  }\r\n\r\n  _getDatosProducto(idProducto) {\r\n    this.workflows = this._getWorkflows(idProducto);\r\n    this.proyectos = this._getProyectos(idProducto);\r\n    this.sprints = this._getSprints(idProducto);\r\n    this.tiposUT = this._getTiposUT(idProducto);\r\n  }\r\n\r\n  _getWorkflows(idProducto) {\r\n    if (!workflowsCache[idProducto]) {\r\n      this._getWorkflowsSubscription =\r\n        this._getWorkflowsService.get(idProducto).subscribe(\r\n          (data) => {\r\n            workflowsCache[idProducto] = this._parseWorkflows(data);\r\n            this.workflows = workflowsCache[idProducto];\r\n            this.ut.IdVersion = this.workflows[0]? this.workflows[0].value : null;\r\n          }\r\n        );\r\n    }\r\n    return workflowsCache[idProducto];\r\n  }\r\n\r\n  _parseWorkflows(workflows) {\r\n    return workflows.map((wf) => {\r\n      return {label: `${wf.Nombre}`, value: wf.IdWorkflow};\r\n    });\r\n  }\r\n\r\n  _getProyectos(idProducto) {\r\n    if (!proyectosCache[idProducto]) {\r\n      this._getProyectoSubscription =\r\n      this._getProyectosService.get(idProducto).subscribe(\r\n        (data) => {\r\n          proyectosCache[idProducto] = this._parseProyectos(data);\r\n          this.proyectos = proyectosCache[idProducto];\r\n          this.ut.IdProyecto = this.proyectos[0]? this.proyectos[0].value : null;\r\n        },\r\n        (error) =>\r\n          this._notificationService.error(\r\n            'No se han podido obtener los proyectos del producto',\r\n          error\r\n        ));\r\n    }\r\n    return proyectosCache[idProducto];\r\n  }\r\n\r\n  _parseProyectos(proyectos) {\r\n    return proyectos.map((pr) => {\r\n      return {label: `${pr.Nombre}`, value: pr.IdProyecto};\r\n    });\r\n  }\r\n\r\n  _getTiposUT(idProducto) {\r\n    if (!tiposUTCache[idProducto]) {\r\n      this._getTiposUTSubscription =\r\n        this._getTiposUTService.get(idProducto).subscribe(\r\n          (data) => {\r\n            tiposUTCache[idProducto] = this._parseTiposUT(data);\r\n            this.tiposUT = tiposUTCache[idProducto];\r\n            this.ut.IdTipoUT = this.tiposUT[0]? this.tiposUT[0].value : null;\r\n          },\r\n          (error) =>\r\n            this._notificationService.error(\r\n              'No se han podido obtener los tipos de UT',\r\n              error\r\n        ));\r\n    }\r\n    return tiposUTCache[idProducto];\r\n  }\r\n\r\n  _parseTiposUT(tipos) {\r\n    return tipos.map((t) => {\r\n      return {label: `${t.Nombre}`, value: t.IdTipoUT};\r\n    });\r\n  }\r\n\r\n  _getSprints(idProducto) {\r\n    if (!sprintsCache[idProducto]) {\r\n      this._getSprintsSubscription =\r\n       this._getSprintsService.get(idProducto).subscribe(\r\n        (data) => {\r\n          sprintsCache[idProducto] = this._parseSprints(data);\r\n          this.sprints = sprintsCache[idProducto];\r\n          this.ut.IdVersion = this.sprints[0]? this.sprints[0].value : null;\r\n        },\r\n        (error) => {\r\n          this._notificationService.error(\r\n            'No se han podido obtener los Sprints del producto',\r\n            error\r\n          );\r\n        }\r\n      );\r\n    }\r\n    return sprintsCache[idProducto];\r\n  }\r\n\r\n  _parseSprints(sprints) {\r\n    return sprints.map((sp) => {\r\n      return {label: `${sp.Nombre}`, value: sp.IdVersion};\r\n    });\r\n  }\r\n\r\n  onProductChanged(idNuevoProducto) {\r\n    this._getDatosProducto(idNuevoProducto);\r\n  }\r\n\r\n  onCrearNuevaUTClick() {\r\n    this._crearUTSubscription =\r\n    this._createUTService.put(this.ut).subscribe(\r\n      (data) => {\r\n      },\r\n      (error) => {\r\n        this._notificationService.error(\r\n          'No se pudo crear la UT especficada',\r\n          error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  onCrearYAbrirUTClick() {\r\n    this._crearUTSubscription =\r\n    this._createUTService.put(this.ut).subscribe(\r\n      (data) => {\r\n        this.idUt = data;\r\n        // TODO: Redirigir\r\n      },\r\n      (error) => {\r\n        this._notificationService.error(\r\n          'No se pudo crear la UT especficada',\r\n          error\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  isNombreEmpty() {\r\n    return this.ut.Nombre == null || this.ut.Nombre.length === 0;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._crearUTSubscription &&\r\n      !this._crearUTSubscription.closed &&\r\n      this._crearUTSubscription.unsubscribe();\r\n\r\n    this._getProductosSubscription &&\r\n      !this._getProductosSubscription.closed &&\r\n      this._getProductosSubscription.unsubscribe();\r\n\r\n    this._getProyectoSubscription &&\r\n      !this._getProyectoSubscription.closed &&\r\n      this._getProyectoSubscription.unsubscribe();\r\n\r\n    this._getSprintsSubscription &&\r\n      !this._getSprintsSubscription.closed &&\r\n      this._getSprintsSubscription.unsubscribe();\r\n\r\n    this._getTiposUTSubscription &&\r\n      !this._getTiposUTSubscription.closed &&\r\n      this._getTiposUTSubscription.unsubscribe();\r\n\r\n    this._getWorkflowsSubscription &&\r\n      !this._getWorkflowsSubscription.closed &&\r\n      this._getWorkflowsSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {UtComponent} from './ut.component';\r\nimport {DetailsComponent, NuevaUTComponent} from './components';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([\r\n    {path: '', component: UtComponent},\r\n    {path: 'add', component: NuevaUTComponent},\r\n    {path: ':id', component: DetailsComponent},\r\n  ])],\r\n  exports: [RouterModule],\r\n})\r\nexport class UtRoutingModule {}\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {UtRoutingModule} from './ut.routing';\r\nimport {UtComponent} from './ut.component';\r\nimport {TuneUpCoreModule} from '@tune-up/core';\r\nimport {DetailsComponent, DetailsService, NuevaUTComponent} from './components';\r\n\r\n@NgModule({\r\n  imports: [TuneUpCoreModule, UtRoutingModule],\r\n  declarations: [\r\n    UtComponent,\r\n    DetailsComponent,\r\n    NuevaUTComponent,\r\n  ],\r\n  providers: [\r\n    DetailsService,\r\n  ],\r\n})\r\nexport class UtModule {}\r\n"],"names":["UtComponent","Component","breadcrumbService","_breadcrumbService","addItems","label","routerLink","BreadcrumbService","DetailsService","Injectable","http","_http","_urlUT","_urlProductos","_urlUTs","id","this","get","model","post","HttpClient","utTypesIcons","DetailsComponent","route","detailsService","notificationsService","editingMode","IdUT","undefined","Nombre","Orden","IdVersion","IdWorkflow","IdProyecto","Descripcion","ut","onGuardar","_saveDetailsSubscription","_this","_detailsService","submitChangesDetails","subscribe","data","UT","IdProducto","IdTipoUT","error","_notificationsService","getUtTypeIcon","tipo","_route","parseInt","params","_value","getProductosDisponibles","_parseProductos","getUt","_parseSprints","listaVersionesUT","_parseWorkflows","listaWorkflowsDisponibles","_parseTipos","listaTiposUT","_parseProyectos","listaProyectos","_mapSelected","sprints","sprintsDisponibles","map","sprint","value","push","wfs","workflowsDisponibles","wf","tipos","tiposDisponibles","proyectos","proyectosDisponibles","proy","productos","productosDisponibles","prod","forEach","element","removeItems","closed","unsubscribe","_getUtSub","ActivatedRoute","NotificationsService","CreateUTService","_url","newUT","put","GetProductosService","GetProyectosService","idProducto","GetSprintsProductoService","GetTiposUTProductoService","GetWorkflowsService","proyectosCache","sprintsCache","tiposUTCache","workflowsCache","NuevaUTComponent","createUTService","getProductosService","getProyectosService","getSprintsProductoService","getTiposUTService","getWorkflowsService","_createUTService","_getProductosService","_getProyectosService","_getSprintsService","_getWorkflowsService","_getTiposUTService","_notificationService","tiposUT","workflows","_getProductos","_getProductosSubscription","length","_getDatosProducto","_getWorkflows","_getProyectos","_getSprints","_getTiposUT","_getWorkflowsSubscription","_this2","_getProyectoSubscription","_this3","pr","_getTiposUTSubscription","_this4","_parseTiposUT","t","_getSprintsSubscription","_this5","sp","idNuevoProducto","_crearUTSubscription","idUt","UtRoutingModule","NgModule","RouterModule","forChild","path","component","UtModule","TuneUpCoreModule"],"mappings":"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"}