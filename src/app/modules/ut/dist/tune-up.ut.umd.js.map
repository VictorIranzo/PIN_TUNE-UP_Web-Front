{"version":3,"file":"tune-up.ut.umd.js","sources":["../src/ut.component.js","../src/components/details/services/details.service.js","../src/components/details/details.component.js","../src/components/nuevaut/services/createUT.service.js","../src/components/nuevaut/services/getProductos.service.js","../src/components/nuevaut/services/getProyectos.service.js","../src/components/nuevaut/services/getSprintsProducto.service.js","../src/components/nuevaut/services/getTiposUTProducto.service.js","../src/components/nuevaut/services/getWorkflows.service.js","../src/components/nuevaut/nuevaut.component.js","../src/components/followups/followups.service.js","../src/components/followups/followups.component.js","../src/components/utsearch/services/utsearch.service.js","../src/components/utsearch/services/activities.service.js","../src/components/utsearch/utsearch.component.js","../src/ut.routing.js","../src/ut.module.js"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport {BreadcrumbService} from '@tune-up/app';\r\nimport html from './ut.component.html';\r\nimport './ut.component.css';\r\n\r\n@Component({\r\n  selector: 'tn-ut',\r\n  template: html,\r\n})\r\nexport class UtComponent {\r\n  constructor(breadcrumbService: BreadcrumbService) {\r\n    this._breadcrumbService = breadcrumbService;\r\n    this._breadcrumbService.addItems({label: 'UTs', routerLink: '/uts'});\r\n  }\r\n  ngOnDestroy() {\r\n    // TODO: determine when to reset breadcrumbService\r\n    // this._breadcrumbService.removeItems(1);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class DetailsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._urlUT = 'FichaUT2';\r\n    this._urlProductos = 'Productos2';\r\n    this._urlUTs = 'UTs2';\r\n  }\r\n\r\n  getUt(id) {\r\n    return this._http.get(`${this._urlUT}/${id}`);\r\n  }\r\n\r\n  getProductosDisponibles() {\r\n    return this._http.get(`${this._urlProductos}`);\r\n  }\r\n\r\n  submitChangesDetails(model) {\r\n    return this._http.post(this._urlUTs, model);\r\n  }\r\n}\r\n\r\n\r\n","import {Component} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DetailsService} from './services';\nimport {NotificationsService} from '@tune-up/core';\nimport {BreadcrumbService} from '@tune-up/app';\nimport html from './details.component.html';\nimport './details.component.css';\n\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\n\n@Component({\n  selector: 'tn-ut-details',\n  template: html,\n})\nexport class DetailsComponent {\n  editingMode = false;\n  model = {IdUT: undefined, Nombre: undefined, Orden: undefined,\n          IdProducto: undefined, IdVersion: undefined, IdWorkflow: undefined,\n          IdTipoUT: undefined, IdProyecto: undefined, Descripcion: undefined};\n  ut;\n\n  // TODO: utiliza destructuring para que quede más claro, ej\n  // const {Nombre, Orden} = data.UT; const {listaVersiones,...} = data\n\n  constructor(route: ActivatedRoute,\n              router: Router,\n              detailsService: DetailsService,\n              notificationsService: NotificationsService,\n              breadcrumbService:BreadcrumbService) {\n        this._route = route;\n        this._router = router;\n        this._detailsService = detailsService;\n        this._notificationsService = notificationsService;\n        this._breadcrumbService = breadcrumbService;\n\n        this.model.IdUT= parseInt(this._route.params._value.id);\n\n        this._getProductosDisponibles = this._detailsService.getProductosDisponibles().subscribe((data) => {\n          this._parseProductos(data);\n        });\n\n        this._getUt = this._detailsService.getUt(this.model.IdUT).subscribe((data) => {\n              if (data.UT == undefined) {\n                this.showErrorAndBackHome();\n              } else {\n                this.ut = data;\n                this.model.Nombre = data.UT.Nombre;\n                this.model.Orden = data.UT.Orden;\n                this._parseSprints(data.listaVersionesUT);\n                this._parseWorkflows(data.listaWorkflowsDisponibles);\n                this._parseTipos(data.listaTiposUT);\n                this._parseProyectos(data.listaProyectos);\n                this.model.Descripcion = data.UT.Descripcion;\n                this._mapSelected(data, this.model);\n                this._breadcrumbService.addItems({label: `${this.model.IdUT}: ${this.model.Nombre}`, routerLink: `/uts/${this.model.IdUT}`});\n              }\n            },\n            (error) => {\n              this.showErrorAndBackHome();\n            }\n          );\n  }\n  onEditar() {\n    this.editingMode = true;\n  }\n\n  onCancelar() {\n    this.editingMode = false;\n\n    this.model.IdUT = this.ut.UT.IdUT;\n    this.model.Nombre = this.ut.UT.Nombre;\n    this.model.Orden = this.ut.UT.Orden;\n    this.model.IdProducto = this.ut.UT.IdProducto;\n    this.model.IdVersion = this.ut.UT.IdVersion;\n    this.model.IdWorkflow = this.ut.UT.IdWorkflow;\n    this.model.IdTipoUT = this.ut.UT.IdTipoUT;\n    this.model.IdProyecto = this.ut.UT.IdProyecto;\n    this.model.Descripcion = this.ut.UT.Descripcion;\n  }\n\n  onGuardar = () => {\n   this._saveDetailsSubscription = this._detailsService.submitChangesDetails(this.model).subscribe(\n      (data) => {\n        this.editingMode = false;\n\n        // TODO: The service must return the UT modified. Meanwhile...\n        this.ut.UT.IdUT = this.model.IdUT;\n        this.ut.UT.Nombre = this.model.Nombre;\n        this.ut.UT.Orden = this.model.Orden;\n        this.ut.UT.IdProducto = this.model.IdProducto;\n        this.ut.UT.IdVersion = this.model.IdVersion;\n        this.ut.UT.IdWorkflow = this.model.IdWorkflow;\n        this.ut.UT.IdTipoUT = this.model.IdTipoUT;\n        this.ut.UT.IdProyecto = this.model.IdProyecto;\n        this.ut.UT.Descripcion = this.model.Descripcion;\n      },\n      (error) => {\n        this._notificationsService.error('Error al guardar los cambios', error);\n      }\n    );\n  };\n\n  // TODO: var a = 'hola', label: a === label: `${a}`\n  // las template strings solo valen si vas a escribir más.\n  // TODO, en vez de almacenar todo esto en this, llama a las funciones desde el html y ya esta,\n  // que solo se van a llamar una vez\n\n  _parseSprints(sprints) {\n    this.sprintsDisponibles = sprints.map((sprint) => {\n      return {label: sprint.Nombre, value: sprint.IdVersion};\n    });\n    this.sprintsDisponibles.push({label: 'Backlog', value: null});\n  }\n  _parseWorkflows(wfs) {\n    this.workflowsDisponibles = wfs.map((wf) => {\n      return {label: `${wf.Nombre}`, value: wf.IdWorkflow};\n    });\n  }\n  _parseTipos(tipos) {\n    this.tiposDisponibles = tipos.map((tipo) => {\n      return {label: `${tipo.Nombre}`, value: tipo.IdTipoUT};\n    });\n  }\n  _parseProyectos(proyectos) {\n    this.proyectosDisponibles = proyectos.map((proy) => {\n      return {label: `${proy.Nombre}`, value: proy.IdProyecto};\n    });\n    this.proyectosDisponibles.push({label: '<Sin Proyecto>', value: null});\n  }\n  _parseProductos(productos) {\n    this.productosDisponibles = productos.map((prod) => {\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\n    });\n  }\n\n  _mapSelected(ut, model) {\n    this.sprintsDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdVersion) model.IdVersion = element.value;\n    });\n    this.workflowsDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdWorkflow) model.IdWorkflow = element.value;\n    });\n    this.tiposDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdTipoUT) model.IdTipoUT = element.value;\n    });\n    this.proyectosDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdProyecto) model.IdProyecto = element.value;\n    });\n    this.productosDisponibles.forEach(function(element) {\n      if (element.value == ut.UT.IdProducto) model.IdProducto = element.value;\n    });\n  }\n\n  getUtTypeIcon = (tipo) => {\n    return utTypesIcons[tipo];\n  };\n\n  showErrorAndBackHome() {\n    this._notificationsService.error('Error al obtener la UT', 'UT no encontrada');\n    this._router.navigateByUrl('/home');\n  }\n\n  ngOnDestroy() {\n    this._breadcrumbService.removeItems(1);\n\n    this._saveDetailsSubscription &&\n    !this._saveDetailsSubscription.closed &&\n    this._saveDetailsSubscription.unsubscribe();\n\n    this._getUtSub &&\n    !this._getUtSub.closed &&\n    this._getUtSub.unsubscribe();\n\n    this._getProductosDisponibles &&\n    !this._getProductosDisponibles.closed &&\n    this._getProductosDisponibles.unsubscribe();\n\n    this._getUt &&\n    !this._getUt.closed &&\n    this._getUt.unsubscribe();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CreateUTService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'UTs/Crear';\r\n  }\r\n  put(newUT) {\r\n    return this._http.put(this._url, newUT);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProductosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos2';\r\n  }\r\n  get() {\r\n    return this._http.get(\r\n      `${this._url}`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetProyectosService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Productos';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}/Proyectos`\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetSprintsProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Sprints2';\r\n  }\r\n  get(idProducto) { \r\n    return this._http.get(`${this._url}/${idProducto}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetTiposUTProductoService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'TiposUT2';\r\n  }\r\n  get(idProducto) { \r\n    return this._http.get(`${this._url}/${idProducto}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GetWorkflowsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._url = 'Workflows';\r\n  }\r\n  get(idProducto) {\r\n    return this._http.get(\r\n      `${this._url}/${idProducto}`\r\n    );\r\n  }\r\n}\r\n\r\n","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NotificationsService} from '@tune-up/core';\nimport {CreateUTService, GetProductosService, GetProyectosService, GetSprintsProductoService, GetTiposUTProductoService, GetWorkflowsService} from './services';\nimport html from './nuevaut.component.html';\nimport './nuevaut.component.css';\n\nconst proyectosCache = [];\nconst sprintsCache = [];\nconst tiposUTCache = [];\nconst workflowsCache = [];\n\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\n\n@Component({\n  selector: 'tn-ut-nuevaut',\n  template: html,\n  providers: [\n    CreateUTService,\n    GetWorkflowsService,\n  ],\n})\nexport class NuevaUTComponent {\n  ut = {\n    Nombre: null,\n    IdVersion: null,\n    IdProducto: null,\n    IdWorkflow: null,\n    IdTipoUT: null,\n    IdProyecto: null,\n  };\n\n\n  constructor(\n    createUTService: CreateUTService,\n    getProductosService : GetProductosService,\n    getProyectosService : GetProyectosService,\n    getSprintsProductoService : GetSprintsProductoService,\n    getTiposUTService : GetTiposUTProductoService,\n    getWorkflowsService : GetWorkflowsService,\n    notificationsService: NotificationsService,\n    router : Router\n  ) {\n    this._createUTService = createUTService;\n    this._getProductosService = getProductosService;\n    this._getProyectosService = getProyectosService;\n    this._getSprintsService = getSprintsProductoService;\n    this._getWorkflowsService = getWorkflowsService;\n    this._getTiposUTService = getTiposUTService;\n    this._notificationService = notificationsService;\n    this._router = router;\n    this.productos = [];\n    this.proyectos = [];\n    this.sprints = [];\n    this.tiposUT = [];\n    this.workflows = [];\n  }\n\n  ngOnInit() {\n    this._getProductos();\n  }\n\n  _getProductos() {\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\n      (data) => {\n        this.productos = this._parseProductos(data);\n        if (this.productos.length > 0) {\n          this.ut.IdProducto = this.productos[0].value;\n          this._getDatosProducto(this.productos[0].value);\n        }\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener los productos',\n          error\n        )\n    );\n  }\n\n  _parseProductos(productos) {\n    return productos.map((prod) => {\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\n    });\n  }\n\n  _getDatosProducto(idProducto) {\n    this.workflows = this._getWorkflows(idProducto);\n    this.proyectos = this._getProyectos(idProducto);\n    this.sprints = this._getSprints(idProducto);\n    this.tiposUT = this._getTiposUT(idProducto);\n\n    this._seleccionarValoresPorDefecto();\n  }\n\n  _getWorkflows(idProducto) {\n    if (!workflowsCache[idProducto]) {\n      this._getWorkflowsSubscription =\n        this._getWorkflowsService.get(idProducto).subscribe(\n          (data) => {\n            workflowsCache[idProducto] = this._parseWorkflows(data);\n            this.workflows = workflowsCache[idProducto];\n            this.ut.IdWorkflow = this.workflows[0]? this.workflows[0].value : null;\n          }\n        );\n    }\n    return workflowsCache[idProducto];\n  }\n\n  _parseWorkflows(workflows) {\n    return workflows.map((wf) => {\n      return {label: `${wf.Nombre}`, value: wf.IdWorkflow};\n    });\n  }\n\n  _getProyectos(idProducto) {\n    if (!proyectosCache[idProducto]) {\n      this._getProyectoSubscription =\n      this._getProyectosService.get(idProducto).subscribe(\n        (data) => {\n          proyectosCache[idProducto] = this._parseProyectos(data);\n          this.proyectos = proyectosCache[idProducto];\n          this.ut.IdProyecto = this.proyectos[0]? this.proyectos[0].value : null;\n        },\n        (error) =>\n          this._notificationService.error(\n            'No se han podido obtener los proyectos del producto',\n          error\n        ));\n    }\n    return proyectosCache[idProducto];\n  }\n\n  _parseProyectos(proyectos) {\n    return proyectos.map((pr) => {\n      return {label: `${pr.Nombre}`, value: pr.IdProyecto};\n    });\n  }\n\n  _getTiposUT(idProducto) {\n    if (!tiposUTCache[idProducto]) {\n      this._getTiposUTSubscription =\n        this._getTiposUTService.get(idProducto).subscribe(\n          (data) => {\n            tiposUTCache[idProducto] = this._parseTiposUT(data);\n            this.tiposUT = tiposUTCache[idProducto];\n            this.ut.IdTipoUT = this.tiposUT[0]? this.tiposUT[0].value : null;\n          },\n          (error) =>\n            this._notificationService.error(\n              'No se han podido obtener los tipos de UT',\n              error\n        ));\n    }\n    return tiposUTCache[idProducto];\n  }\n\n  _parseTiposUT(tipos) {\n    return tipos.map((t) => {\n      return {label: `${t.Nombre}`, value: t.IdTipoUT};\n    });\n  }\n\n  _getSprints(idProducto) {\n    if (!sprintsCache[idProducto]) {\n      this._getSprintsSubscription =\n       this._getSprintsService.get(idProducto).subscribe(\n        (data) => {\n          sprintsCache[idProducto] = this._parseSprints(data);\n          this.sprints = sprintsCache[idProducto];\n          this.ut.IdVersion = this.sprints[0]? this.sprints[0].value : null;\n        },\n        (error) => {\n          this._notificationService.error(\n            'No se han podido obtener los Sprints del producto',\n            error\n          );\n        }\n      );\n    }\n    return sprintsCache[idProducto];\n  }\n\n  _parseSprints(sprints) {\n    return sprints.map((sp) => {\n      return {label: `${sp.Nombre}`, value: sp.IdVersion};\n    });\n  }\n\n  _seleccionarValoresPorDefecto() {\n    this.ut.IdWorkflow = this.workflows && this.workflows[0]? this.workflows[0].value : null;\n    this.ut.IdProyecto = this.proyectos && this.proyectos[0]? this.proyectos[0].value : null;\n    this.ut.IdVersion = this.IdVersion && this.sprints[0]? this.sprints[0].value : null;\n    this.ut.IdTipoUT = this.tiposUT && this.tiposUT[0]? this.tiposUT[0].value : null;\n  }\n\n  onProductChanged(idNuevoProducto) {\n    this._getDatosProducto(idNuevoProducto);\n  }\n\n  onCrearNuevaUTClick() {\n    this._crearUTSubscription =\n    this._createUTService.put(this.ut).subscribe(\n      (data) => {\n          this._notificationService.success(\n            'La UT se ha creado con exito',\n            `UT: ${this.ut.Nombre}`\n          );\n          this._clearFields();\n      },\n      (error) => {\n        this._notificationService.error(\n          'No se pudo crear la UT especficada',\n          error\n        );\n      }\n    );\n  }\n\n  _clearFields() {\n    this.ut.Nombre = '';\n  }\n\n  onCrearYAbrirUTClick() {\n    this._crearUTSubscription =\n    this._createUTService.put(this.ut).subscribe(\n      (data) => {\n        this._redirect(data);\n      },\n      (error) => {\n        this._notificationService.error(\n          'No se pudo crear la UT especficada',\n          error\n        );\n      }\n    );\n  }\n  _redirect(idUT) {\n    this._router.navigateByUrl(`/uts/${idUT}`);\n  }\n\n  getUtTypeIcon = (tipo) => {\n    return utTypesIcons[tipo];\n  };\n\n  isNombreEmpty() {\n    return this.ut.Nombre == null || this.ut.Nombre.length === 0;\n  }\n\n  ngOnDestroy() {\n    this._crearUTSubscription &&\n      !this._crearUTSubscription.closed &&\n      this._crearUTSubscription.unsubscribe();\n\n    this._getProductosSubscription &&\n      !this._getProductosSubscription.closed &&\n      this._getProductosSubscription.unsubscribe();\n\n    this._getProyectoSubscription &&\n      !this._getProyectoSubscription.closed &&\n      this._getProyectoSubscription.unsubscribe();\n\n    this._getSprintsSubscription &&\n      !this._getSprintsSubscription.closed &&\n      this._getSprintsSubscription.unsubscribe();\n\n    this._getTiposUTSubscription &&\n      !this._getTiposUTSubscription.closed &&\n      this._getTiposUTSubscription.unsubscribe();\n\n    this._getWorkflowsSubscription &&\n      !this._getWorkflowsSubscription.closed &&\n      this._getWorkflowsSubscription.unsubscribe();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class FollowupsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n  }\r\n  getSeguimientos(idUt) {\r\n    return this._http.get(`UTs/${idUt}/Seguimientos`);\r\n  }\r\n  pausarSeguimiento(idSeguimiento) {\r\n    return this._http.post(\r\n      `FinalizarRegistroTiempo?idSeguimiento=${idSeguimiento}`\r\n    );\r\n  }\r\n  empezarSeguimiento(idSeguimiento) {\r\n    return this._http.post(\r\n      `EmpezarRegistroTiempo?idSeguimiento=${idSeguimiento}`\r\n    );\r\n  }\r\n  finalizarSeguimiento(idSeguimiento, adelante = true) {\r\n    return this._http.post(\r\n      `FinalizarSeguimiento?idSeguimiento=${idSeguimiento}&adelante=${adelante}&avisarEmail=false`\r\n    );\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {AgentService} from '@tune-up/app';\r\nimport {FollowupsService} from './followups.service';\r\nimport html from './followups.component.html';\r\nimport './followups.component.css';\r\n\r\n@Component({\r\n  selector: 'ut-followup',\r\n  template: html,\r\n  providers: [FollowupsService],\r\n})\r\nexport class FollowupsComponent {\r\n  @Input() utId;\r\n  seguimientos = [];\r\n  constructor(followupsService: FollowupsService, agentService: AgentService) {\r\n    this._followupsService = followupsService;\r\n    this._agentService = agentService;\r\n  }\r\n  ngOnInit() {\r\n   this._getFollowUps();\r\n  }\r\n  isSameAgent() {\r\n    return this.seguimiento.IdAgente === this._agentService.getAgentId();\r\n  }\r\n  _getFollowUps() {\r\n    this._getFollowupsSub = this._followupsService.getSeguimientos(this.utId)\r\n    .subscribe(\r\n    (data) => {\r\n      this.seguimientos = data;\r\n    }, (error) => {\r\n      // TODO\r\n      console.error(error);\r\n    });\r\n  }\r\n  get idSeguimiento() {\r\n    return this.seguimientos[0].IdSeguimiento;\r\n  }\r\n  get seguimiento() {\r\n    return this.seguimientos[0];\r\n  }\r\n  puedeIniciar = () => {\r\n    return this.seguimiento && this.seguimiento.Estado === 'TO DO';\r\n  }\r\n  iniciar = () => {\r\n    this._followupsService.empezarSeguimiento(this.idSeguimiento).subscribe(\r\n      (data) => {\r\n        this.seguimiento.Estado = 'ACTIVE';\r\n       },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  puedeContinuar = () => {\r\n    return this.seguimiento && this.seguimiento.Estado === 'DOING';\r\n  }\r\n  continuar = () => {\r\n    this._followupsService.empezarSeguimiento(this.idSeguimiento).subscribe(\r\n      (data) => {\r\n        this.seguimiento.Estado = 'ACTIVE';\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  puedePausar = () => {\r\n    return this.seguimiento && this.seguimiento.Estado === 'ACTIVE';\r\n  }\r\n  pausar = () => {\r\n    this._followupsService.pausarSeguimiento(this.idSeguimiento).subscribe(\r\n      (data) => {\r\n        this.seguimiento.Estado = 'DOING';\r\n       },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  puedeFinalizar = () => {\r\n    return this.seguimiento && this.seguimiento.Estado !== 'DONE';\r\n  }\r\n  finalizar = () => {\r\n    this._followupsService.finalizarSeguimiento(this.idSeguimiento).subscribe(\r\n      (data) => {\r\n        this._getFollowUps();\r\n       },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  asignarAgente = () => {\r\n    // TODO\r\n  }\r\n  trabajarEnParalelo = () => {\r\n    // TODO\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class UtSearchService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._urlSearch = '/UTs/Buscar';\n  }\n\n  search(model) {\n    return this._http.get(`${this._urlSearch}?nombreUT=${model.NombreUT}&idProducto=${model.IdProducto}&idSprint=${model.IdSprint}&idProyecto=${model.IdProyecto}&idTipo=${model.IdTipoUT}&estado=${model.Estado}`);\n  }\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class ActivitiesService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._urlSearch = '/Actividades';\n  }\n\n  getActivities() {\n    return this._http.get(this._urlSearch);\n  }\n}\n","import {Component} from '@angular/core';\n\nimport {UtSearchService, ActivitiesService} from './services';\nimport {BreadcrumbService} from '@tune-up/app';\nimport {GetProductosService, GetProyectosService, GetSprintsProductoService,\n        GetTiposUTProductoService} from '../nuevaut';\nimport {NotificationsService} from '@tune-up/core';\n\nimport html from './utsearch.component.html';\nimport './utsearch.component.css';\n\nconst utTypesIcons = {\n  1: 'fa fa-star',\n  2: 'fa fa-bug',\n  3: 'fa fa-plus-circle',\n  4: 'fa fa-puzzle-piece',\n};\n\nconst estados = [\n  {label: 'ALL', value: 0},\n  {label: 'Sólo UTs terminadas', value: 1},\n  {label: 'Sólo UTs NO terminadas', value: 2},\n];\n\nconst proyectosCache = [];\nconst sprintsCache = [];\nconst tiposUTCache = [];\nconst actividades = [];\n\n@Component({\n  selector: 'tn-ut-search',\n  template: html,\n  providers: [UtSearchService, ActivitiesService],\n})\nexport class UtSearchComponent {\n  model = {NombreUT: '', IdProducto: undefined, IdSprint: undefined,\n           IdProyecto: undefined, IdTipoUT: undefined, Estado: undefined};\n  selectableFields = false;\n  uts = undefined;\n\n  constructor(breadcrumbService: BreadcrumbService,\n              utSearchService: UtSearchService,\n              activitiesService: ActivitiesService,\n              getProductosService: GetProductosService,\n              getProyectosService: GetProyectosService,\n              getSprintsProductoService: GetSprintsProductoService,\n              getTiposUTProductoService: GetTiposUTProductoService,\n              notificationsService: NotificationsService,\n            ) {\n    this._utSearchService = utSearchService;\n    this._activitiesService = activitiesService;\n    this._breadcrumbService = breadcrumbService;\n    this._getProductosService = getProductosService;\n    this._getProyectosService = getProyectosService;\n    this._getSprintsService = getSprintsProductoService;\n    this._getTiposUTService = getTiposUTProductoService;\n    this._notificationsService = notificationsService;\n  }\n\n  ngOnInit() {\n    this._getProductos();\n    this._getActividades();\n    this._parseEstados();\n  }\n\n  onSearch() {\n    this._utSearchSubscription = this._utSearchService.search(this.model).subscribe(\n      (data) => {\n        // TODO: Update table.\n        this.uts = data;\n      },\n      (error) => {\n        this._notificationsService.error('Error al buscar', error);\n      }\n    );\n  }\n\n  _getProductos() {\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\n      (data) => {\n        this._parseProductos(data);\n        this.model.IdProducto = 'ALL';\n        this.clearFieldsAndPutAll();\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener los productos',\n          error)\n    );\n  }\n\n  productoChange() {\n    if (this.model.IdProducto == 'ALL') {\n      this.selectableFields = false;\n      this.clearFieldsAndPutAll();\n    } else {\n      this.selectableFields = true;\n      this._getProyectos(this.model.IdProducto);\n      this._getSprints(this.model.IdProducto);\n      this._getTiposUT(this.model.IdProducto);\n      this.selectDefaultValues();\n    }\n  }\n\n  clearFieldsAndPutAll() {\n    // TODO: This cannot works at the init.\n    this.proyectosDisponibles = [];\n    this.proyectosDisponibles.push({label: 'ALL', value: 'ALL'});\n\n    this.sprintsDisponibles = [];\n    this.sprintsDisponibles.push({label: 'ALL', value: 'ALL'});\n\n    this.tiposDisponibles = [];\n    this.tiposDisponibles.push({label: 'ALL', value: 'ALL'});\n\n    this.selectDefaultValues();\n  }\n\n  selectDefaultValues() {\n    this.model.IdProyecto = 'ALL';\n    this.model.IdSprint = 'ALL';\n    this.model.IdTipoUT = 'ALL';\n  }\n\n  _parseProductos(productos) {\n    this.productosDisponibles = productos.map((prod) => {\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\n    });\n    this.productosDisponibles.push({label: 'ALL', value: 'ALL'});\n  }\n\n  _getProyectos(idProducto) {\n    if (!proyectosCache[idProducto]) {\n      this._getProyectoSubscription =\n      this._getProyectosService.get(idProducto).subscribe(\n        (data) => {\n          this._parseProyectos(data);\n          proyectosCache[idProducto] = this.proyectosDisponibles;\n        },\n        (error) =>\n          this._notificationService.error(\n            'No se han podido obtener los proyectos del producto', error)\n      );\n    } else {\n      this.productosDisponibles = proyectosCache[idProducto];\n    }\n  }\n\n  _parseProyectos(proyectos) {\n    this.proyectosDisponibles = proyectos.map((proy) => {\n      return {label: `${proy.Nombre}`, value: proy.IdProyecto};\n    });\n    this.proyectosDisponibles.push({label: '<Sin Proyecto>', value: null});\n    this.proyectosDisponibles.push({label: 'ALL', value: 'ALL'});\n  }\n\n  _getSprints(idProducto) {\n    if (!sprintsCache[idProducto]) {\n      this._getSprintsSubscription =\n       this._getSprintsService.get(idProducto).subscribe(\n        (data) => {\n          this._parseSprints(data);\n          sprintsCache[idProducto] = this.sprintsDisponibles;\n        },\n        (error) => {\n          this._notificationService.error(\n            'No se han podido obtener los Sprints del producto',\n            error\n          );\n        }\n      );\n    } else {\n      this.sprintsDisponibles = sprintsCache[idProducto];\n    }\n  }\n\n  _parseSprints(sprints) {\n    this.sprintsDisponibles = sprints.map((sprint) => {\n      return {label: sprint.Nombre, value: sprint.IdVersion};\n    });\n    this.sprintsDisponibles.push({label: 'Backlog', value: null});\n    this.sprintsDisponibles.push({label: 'ALL', value: 'ALL'});\n  }\n\n  _getTiposUT(idProducto) {\n    if (!tiposUTCache[idProducto]) {\n      this._getTiposUTSubscription =\n        this._getTiposUTService.get(idProducto).subscribe(\n          (data) => {\n            this._parseTiposUT(data);\n            tiposUTCache[idProducto] = this.tiposDisponibles;\n          },\n          (error) =>\n            this._notificationService.error(\n              'No se han podido obtener los tipos de UT',\n              error\n        ));\n    } else {\n      this.tiposDisponibles = tiposUTCache[idProducto];\n    }\n  }\n\n  _parseTiposUT(tipos) {\n    this.tiposDisponibles = tipos.map((tipo) => {\n      return {label: `${tipo.Nombre}`, value: tipo.IdTipoUT};\n    });\n    this.tiposDisponibles.push({label: 'ALL', value: 'ALL'});\n  }\n\n  _parseEstados() {\n    this.estadosDisponibles = estados;\n    this.model.Estado = 'ALL';\n  }\n\n  getUtTypeIcon = (tipo) => {\n    return utTypesIcons[tipo];\n  };\n\n  getUtLink = (ut) => {\n    return `/uts/${ut.IdUT}`;\n  };\n\n  _getActividades() {\n    this._getActividadesSubscription = this._activitiesService.getActivities().subscribe(\n      (data) => {\n        data.map((actividad)=>{\n            actividades[actividad.IdActividad] = actividad.Nombre;\n        });\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener las actividades',\n          error)\n    );\n    actividades[0]='Terminar';\n  }\n\n  getActividad = (IdActividad) => {\n    return actividades[IdActividad];\n  };\n\n  ngOnDestroy() {\n    this._breadcrumbService.removeItems(1);\n\n    this._utSearchSubscription &&\n    !this._utSearchSubscription.closed &&\n    this._utSearchSubscription.unsubscribe();\n\n    this._getActividadesSubscription &&\n    !this._getActividadesSubscription.closed &&\n    this._getActividadesSubscription.unsubscribe();\n\n    this._getProductosSubscription &&\n      !this._getProductosSubscription.closed &&\n      this._getProductosSubscription.unsubscribe();\n\n    this._getProyectoSubscription &&\n      !this._getProyectoSubscription.closed &&\n      this._getProyectoSubscription.unsubscribe();\n\n    this._getSprintsSubscription &&\n      !this._getSprintsSubscription.closed &&\n      this._getSprintsSubscription.unsubscribe();\n\n    this._getTiposUTSubscription &&\n      !this._getTiposUTSubscription.closed &&\n      this._getTiposUTSubscription.unsubscribe();\n  }\n}\n","import {RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {UtComponent} from './ut.component';\r\nimport {DetailsComponent, NuevaUTComponent} from './components';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([\r\n    {path: '', component: UtComponent},\r\n    {path: 'add', component: NuevaUTComponent},\r\n    {path: ':id', component: DetailsComponent},\r\n  ])],\r\n  exports: [RouterModule],\r\n})\r\nexport class UtRoutingModule {}\r\n\r\n\r\n","import {NgModule} from '@angular/core';\nimport {UtRoutingModule} from './ut.routing';\nimport {UtComponent} from './ut.component';\nimport {TuneUpCoreModule} from '@tune-up/core';\nimport {DetailsComponent, DetailsService, NuevaUTComponent, FollowupsComponent, UtSearchComponent,\n  GetProductosService, GetProyectosService, GetSprintsProductoService, GetTiposUTProductoService} from './components';\n\n@NgModule({\n  imports: [TuneUpCoreModule, UtRoutingModule],\n  declarations: [\n    UtComponent,\n    DetailsComponent,\n    NuevaUTComponent,\n    FollowupsComponent,\n    UtSearchComponent,\n  ],\n  providers: [\n    DetailsService, // TODO: Move to the component if nobody uses it.\n    GetProductosService,\n    GetProyectosService,\n    GetSprintsProductoService,\n    GetTiposUTProductoService,\n  ],\n})\nexport class UtModule {}\n"],"names":["UtComponent","Component","breadcrumbService","_breadcrumbService","addItems","label","routerLink","BreadcrumbService","DetailsService","Injectable","http","_http","_urlUT","_urlProductos","_urlUTs","id","this","get","model","post","HttpClient","utTypesIcons","DetailsComponent","route","router","detailsService","notificationsService","editingMode","IdUT","undefined","Nombre","Orden","IdVersion","IdWorkflow","IdProyecto","Descripcion","ut","onGuardar","_saveDetailsSubscription","_this","_detailsService","submitChangesDetails","subscribe","data","UT","IdProducto","IdTipoUT","error","_notificationsService","getUtTypeIcon","tipo","_route","_router","parseInt","params","_value","_getProductosDisponibles","getProductosDisponibles","_parseProductos","_getUt","getUt","showErrorAndBackHome","_parseSprints","listaVersionesUT","_parseWorkflows","listaWorkflowsDisponibles","_parseTipos","listaTiposUT","_parseProyectos","listaProyectos","_mapSelected","sprints","sprintsDisponibles","map","sprint","value","push","wfs","workflowsDisponibles","wf","tipos","tiposDisponibles","proyectos","proyectosDisponibles","proy","productos","productosDisponibles","prod","forEach","element","navigateByUrl","removeItems","closed","unsubscribe","_getUtSub","ActivatedRoute","Router","NotificationsService","CreateUTService","_url","newUT","put","GetProductosService","GetProyectosService","idProducto","GetSprintsProductoService","GetTiposUTProductoService","GetWorkflowsService","proyectosCache","sprintsCache","tiposUTCache","workflowsCache","NuevaUTComponent","createUTService","getProductosService","getProyectosService","getSprintsProductoService","getTiposUTService","getWorkflowsService","_createUTService","_getProductosService","_getProyectosService","_getSprintsService","_getWorkflowsService","_getTiposUTService","_notificationService","tiposUT","workflows","_getProductos","_getProductosSubscription","length","_getDatosProducto","_getWorkflows","_getProyectos","_getSprints","_getTiposUT","_seleccionarValoresPorDefecto","_getWorkflowsSubscription","_this2","_getProyectoSubscription","_this3","pr","_getTiposUTSubscription","_this4","_parseTiposUT","t","_getSprintsSubscription","_this5","sp","idNuevoProducto","_crearUTSubscription","success","_this6","_clearFields","_redirect","idUT","FollowupsService","idUt","idSeguimiento","adelante","FollowupsComponent","Input","followupsService","agentService","seguimientos","puedeIniciar","seguimiento","Estado","iniciar","_followupsService","empezarSeguimiento","log","puedeContinuar","continuar","puedePausar","pausar","pausarSeguimiento","puedeFinalizar","finalizar","finalizarSeguimiento","_getFollowUps","asignarAgente","trabajarEnParalelo","_agentService","IdAgente","getAgentId","_getFollowupsSub","getSeguimientos","utId","IdSeguimiento","AgentService","UtSearchService","_urlSearch","NombreUT","IdSprint","ActivitiesService","estados","actividades","UtSearchComponent","utSearchService","activitiesService","getTiposUTProductoService","selectableFields","uts","getUtLink","getActividad","IdActividad","_utSearchService","_activitiesService","_getActividades","_parseEstados","_utSearchSubscription","search","clearFieldsAndPutAll","selectDefaultValues","estadosDisponibles","_getActividadesSubscription","getActivities","actividad","UtRoutingModule","NgModule","RouterModule","forChild","path","component","UtModule","TuneUpCoreModule"],"mappings":"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"}