{"version":3,"file":"tune-up.ut.umd.min.js","sources":["../src/ut.component.js","../src/components/details/services/details.service.js","../src/components/details/details.component.js","../src/components/nuevaut/services/createUT.service.js","../src/components/nuevaut/services/getProductos.service.js","../src/components/nuevaut/nuevaut.component.js","../src/ut.routing.js","../src/ut.module.js"],"sourcesContent":["import {Component} from '@angular/core';\nimport html from './ut.component.html';\nimport './ut.component.css';\n\n@Component({\n  selector: 'tn-ut',\n  template: html,\n})\nexport class UtComponent {}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class DetailsService {\r\n  constructor(http: HttpClient) {\r\n    this._http = http;\r\n    this._urlUT = 'FichaUT2';\r\n    this._urlProductos = 'Productos2';\r\n  }\r\n\r\n  getUt(id) {\r\n    return this._http.get(`${this._urlUT}/${id}`);\r\n  }\r\n\r\n  getProductosDisponibles() {\r\n    return this._http.get(`${this._urlProductos}`);\r\n  }\r\n}\r\n\r\n\r\n","import {Component} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {DetailsService} from './services';\nimport html from './details.component.html';\nimport './details.component.css';\n\n@Component({\n  selector: 'tn-ut-details',\n  template: html,\n})\nexport class DetailsComponent {\n  codigoUT = null;\n  editingMode = false;\n\n  constructor(route: ActivatedRoute, location: Location, detailsService: DetailsService) {\n    this._route = route;\n    this._detailsService = detailsService;\n  }\n\n  ngOnInit() {\n    this.codigoUT = parseInt(this._route.params._value.id);\n\n    this._detailsService.getUt(this.codigoUT).subscribe((data) => {\n      this.ut = data;\n      this.nombreUT = this.ut.UT.Nombre;\n      this.orden = this.ut.UT.Orden;\n      this.producto = this.ut.ProductoUT;\n      this._parseSprints(this.ut.listaVersionesUT);\n      this._parseWorkflows(this.ut.listaWorkflowsDisponibles);\n      this._parseTipos(this.ut.listaTiposUT);\n      this._parseProyectos(this.ut.listaProyectos);\n      this.descripcion = this.ut.UT.Definicion;\n      this.sprint = 'Sprint 2';\n    });\n\n    this._detailsService.getProductosDisponibles().subscribe((data) => {\n      this._parseProductos(data);\n    });\n  }\n\n  onEditar() {\n    this.editingMode = true;\n  }\n\n  onCancelar() {\n    this.editingMode = false;\n  }\n\n  onGuardar() {\n    this.editingMode = false;\n  }\n\n  _parseSprints(sprints) {\n    this.sprintsDisponibles = sprints.map((sprint) => {\n      return {label: `${sprint.Nombre}`, value: sprint.IdVersion};\n    });\n    this.sprintsDisponibles.push({label: 'Backlog', value: null});\n  }\n\n  _parseWorkflows(wfs) {\n    this.workflowsDisponibles = wfs.map((wf) => {\n      return {label: `${wf.Nombre}`, value: wf.IdWorkflow};\n    });\n  }\n  _parseTipos(tipos) {\n    this.tiposDisponibles = tipos.map((tipo) => {\n      return {label: `${tipo.Nombre}`, value: tipo.IdTipoUT};\n    });\n  }\n\n  _parseProyectos(proyectos) {\n    this.proyectosDisponibles = proyectos.map((proy) => {\n      return {label: `${proy.Nombre}`, value: proy.IdProyecto};\n    });\n  }\n\n  _parseProductos(productos) {\n    this.productosDisponibles = productos.map((prod) => {\n      return {label: `${prod.Nombre}`, value: prod.IdProducto};\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class CreateUTService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'UTs/Crear';\n  }\n  put(newUT) {\n    return this._http.put(this._url, newUT);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class GetProductosService {\n  constructor(http: HttpClient) {\n    this._http = http;\n    this._url = 'Productos2';\n  }\n  get() {\n    return this._http.get(\n      `${this._url}`\n    );\n  }\n}\n","import {Component} from '@angular/core';\nimport {NotificationsService} from '@tune-up/core';\nimport {CreateUTService, GetProductosService} from './services';\nimport html from './nuevaut.component.html';\nimport './nuevaut.component.css';\n\n@Component({\n  selector: 'tn-ut-nuevaut',\n  template: html,\n  providers: [CreateUTService, GetProductosService],\n})\nexport class NuevaUTComponent {\n  ut = {\n    Nombre: null,\n    IdVersion: null,\n    IdProducto: null,\n    IdWorkflow: null,\n    IdTipoUT: null,\n    IdProyecto: null,\n  };\n  productos = [];\n\n  constructor(\n    createUTService: CreateUTService,\n    getProductosService: GetProductosService,\n    notificationsService: NotificationsService,\n  ) {\n    this._createUTService = createUTService;\n    this._getProductosService = getProductosService;\n    this._notificationService = notificationsService;\n    this._getProductos();\n  }\n\n  _getProductos() {\n    this._getProductosSubscription = this._getProductosService.get().subscribe(\n      (data) => {\n        this.productos = data;\n      },\n      (error) =>\n        this._notificationService.error(\n          'No se han podido obtener los productos',\n          error\n        )\n    );\n  }\n\n  _crearUT() {\n    idUT = 0;\n    this.createUTService.put(this.ut).subscribe(\n      (data) => {\n        this.idUT = data.Resultado;\n      },\n      (error) => {\n        this._notificationService.error(\n          'No se pudo crear la UT especficada',\n          error\n        );\n      }\n    );\n    return idUT;\n  }\n\n  ngOnDestroy() {\n    this._getProductosSubscription &&\n      !this._getProductosSubscription.closed &&\n      this._getProductosSubscription.unsubscribe();\n  }\n}\n","import {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {UtComponent} from './ut.component';\nimport {DetailsComponent, NuevaUTComponent} from './components';\n\n@NgModule({\n  imports: [RouterModule.forChild([\n    {path: '', component: UtComponent},\n    {path: ':id', component: DetailsComponent},\n    {path: 'add', component: NuevaUTComponent},\n  ])],\n  exports: [RouterModule],\n})\nexport class UtRoutingModule {}\n\n\n","import {NgModule} from '@angular/core';\nimport {UtRoutingModule} from './ut.routing';\nimport {UtComponent} from './ut.component';\nimport {TuneUpCoreModule} from '@tune-up/core';\nimport {DetailsComponent, DetailsService, NuevaUTComponent} from './components';\n\n@NgModule({\n  imports: [TuneUpCoreModule, UtRoutingModule],\n  declarations: [\n    UtComponent,\n    DetailsComponent,\n    NuevaUTComponent,\n  ],\n  providers: [\n    DetailsService,\n  ],\n})\nexport class UtModule {}\n"],"names":["UtComponent","Component","DetailsService","Injectable","http","_http","_urlUT","_urlProductos","id","this","get","HttpClient","DetailsComponent","route","location","detailsService","codigoUT","editingMode","_route","_detailsService","parseInt","params","_value","getUt","subscribe","data","ut","nombreUT","_this","UT","Nombre","orden","Orden","producto","ProductoUT","_parseSprints","listaVersionesUT","_parseWorkflows","listaWorkflowsDisponibles","_parseTipos","listaTiposUT","_parseProyectos","listaProyectos","descripcion","Definicion","sprint","getProductosDisponibles","_parseProductos","sprints","sprintsDisponibles","map","label","value","IdVersion","push","wfs","workflowsDisponibles","wf","IdWorkflow","tipos","tiposDisponibles","tipo","IdTipoUT","proyectos","proyectosDisponibles","proy","IdProyecto","productos","productosDisponibles","prod","IdProducto","ActivatedRoute","Location","CreateUTService","_url","newUT","put","GetProductosService","NuevaUTComponent","createUTService","getProductosService","notificationsService","_createUTService","_getProductosService","_notificationService","_getProductos","_getProductosSubscription","error","idUT","Resultado","closed","unsubscribe","NotificationsService","UtRoutingModule","NgModule","RouterModule","forChild","path","component","UtModule","TuneUpCoreModule"],"mappings":"8xEAQaA,KAJZC,sBACW,yECDCC,KADZC,qDAEaC,+BACLC,MAAQD,OACRE,OAAS,gBACTC,cAAgB,wEAGjBC,UACGC,KAAKJ,MAAMK,IAAOD,KAAKH,WAAUE,oFAIjCC,KAAKJ,MAAMK,OAAOD,KAAKF,qFAXdI,cADPT,qCCOAU,KAJZX,sBACW,o9FAOEY,EAAuBC,EAAoBC,iCAHvDC,SAAW,UACXC,aAAc,OAGPC,OAASL,OACTM,gBAAkBJ,uFAIlBC,SAAWI,SAASX,KAAKS,OAAOG,OAAOC,OAAOd,SAE9CW,gBAAgBI,MAAMd,KAAKO,UAAUQ,UAAU,SAACC,KAC9CC,GAAKD,IACLE,SAAWC,EAAKF,GAAGG,GAAGC,SACtBC,MAAQH,EAAKF,GAAGG,GAAGG,QACnBC,SAAWL,EAAKF,GAAGQ,aACnBC,cAAcP,EAAKF,GAAGU,oBACtBC,gBAAgBT,EAAKF,GAAGY,6BACxBC,YAAYX,EAAKF,GAAGc,gBACpBC,gBAAgBb,EAAKF,GAAGgB,kBACxBC,YAAcf,EAAKF,GAAGG,GAAGe,aACzBC,OAAS,kBAGX1B,gBAAgB2B,0BAA0BtB,UAAU,SAACC,KACnDsB,gBAAgBtB,sDAKlBR,aAAc,uDAIdA,aAAc,qDAIdA,aAAc,sDAGP+B,QACPC,mBAAqBD,EAAQE,IAAI,SAACL,UAC7BM,SAAUN,EAAOf,OAAUsB,MAAOP,EAAOQ,kBAE9CJ,mBAAmBK,MAAMH,MAAO,UAAWC,MAAO,+DAGzCG,QACTC,qBAAuBD,EAAIL,IAAI,SAACO,UAC3BN,SAAUM,EAAG3B,OAAUsB,MAAOK,EAAGC,8DAGjCC,QACLC,iBAAmBD,EAAMT,IAAI,SAACW,UACzBV,SAAUU,EAAK/B,OAAUsB,MAAOS,EAAKC,oEAIjCC,QACTC,qBAAuBD,EAAUb,IAAI,SAACe,UACjCd,SAAUc,EAAKnC,OAAUsB,MAAOa,EAAKC,sEAIjCC,QACTC,qBAAuBD,EAAUjB,IAAI,SAACmB,UACjClB,SAAUkB,EAAKvC,OAAUsB,MAAOiB,EAAKC,sFAhE9BC,iBAA0BC,WAA0BtE,GAJ5DU,WCPA6D,KADZtE,sDAEaC,gCACLC,MAAQD,OACRsE,KAAO,oEAEVC,UACKlE,KAAKJ,MAAMuE,IAAInE,KAAKiE,KAAMC,0EALjBhE,cADP8D,WCAAI,KADZ1E,0DAEaC,oCACLC,MAAQD,OACRsE,KAAO,qFAGLjE,KAAKJ,MAAMK,OACbD,KAAKiE,iFANM/D,cADPkE,qCCOAC,KALZ7E,sBACW,2YAEEwE,EAAiBI,6CAc3BE,EACAC,EACAC,iCAbFvD,WACU,eACG,gBACC,gBACA,cACF,gBACE,WAEdyC,kBAOOe,iBAAmBH,OACnBI,qBAAuBH,OACvBI,qBAAuBH,OACvBI,+GAIAC,0BAA4B7E,KAAK0E,qBAAqBzE,MAAMc,UAC/D,SAACC,KACM0C,UAAY1C,GAEnB,SAAC8D,UACC3D,EAAKwD,qBAAqBG,MACxB,yCACAA,wEAMC,OACFR,gBAAgBH,IAAInE,KAAKiB,IAAIF,UAChC,SAACC,KACM+D,KAAO/D,EAAKgE,WAEnB,SAACF,KACMH,qBAAqBG,MACxB,qCACAA,KAICC,4DAIFF,4BACF7E,KAAK6E,0BAA0BI,QAChCjF,KAAK6E,0BAA0BK,sFA1ChBlB,EACII,EACCe,wBAdbd,eCEAe,KARZC,qBACWC,eAAaC,WACpBC,KAAM,GAAIC,UAAWlG,IACrBiG,KAAM,MAAOC,UAAWtF,IACxBqF,KAAM,MAAOC,UAAWpB,eAEjBiB,6ECMCI,KAXZL,qBACWM,mBAAkBP,iBAE1B7F,EACAY,EACAkE,cAGA5E"}